{
Do not edit this file as its contents may be updated by Incontrol in future versions. 
If you want to add functionality (like registering additional editfields, menu's, functions or loading additional atoms at startup, use the '.usr' file or define your own)
}

{System Toolbar}
showbutton(1,1,[KernelFnc([open new model])],[new model],pdir([media/Icons/newmodel.ico]));
showbutton(1,2,[KernelFnc([load new model dialog])],[Open model],pdir([media/Icons/Openmodel.ico]));
showbutton(1,3,[KernelFnc([save model under same name])],[save model],pdir([media/Icons/Savemodel.ico]));
showbutton(1,4,[KernelFnc([save library])],[save library],pdir([media/Icons/Create Library File.ico]));
showbutton(1,5,[KernelFnc([create preregister file])],[create preregister file],pdir([media/Icons/Create Preregister File.ico]));
showbutton(1,6,[print(2d3d)],[Print],pdir([media/Icons/Print.ico]));

showbutton(1,8,[do(KernelFnc([create model]),KernelFnc([display library tree]))],[model Layout & Library Tree],pdir([media/Icons/modelLayoutLibrary.ico]));
showbutton(1,9,[KernelFnc([create model])],[model layout],pdir([media/Icons/modelLayout.ico]));
showbutton(1,10,[KernelFnc([show model in 2d])],[2D model View],pdir([media/Icons/model2D.ico]));
showbutton(1,11,[display3d(model,[],[model 3d View],[do(animatom,execonuser)])],[3D model View],pdir([media/Icons/model3D.ico]));
showbutton(1,12,[displaylayers(1)],[Show layer window],pdir([media/Icons/LayerWindow.ico]));

showbutton(1,14,[KernelFnc([display library tree])],[Library Tree],pdir([media/Icons/LibraryTree.ico]));
showbutton(1,15,[KernelFnc([display model tree])],[model Tree],pdir([media/Icons/modelTree.ico]));
if(not(or( GetLicenseType = 12,GetLicenseType = 15,GetLicenseType = 16,GetLicenseType = 19)),showbutton(1,16,[KernelFnc([display atom editor])],[Atom Editor],pdir([media/Icons/AtomEditor.ico])));

showbutton(1,18,[displayinteractivelanguage],[4DScript Interact],pdir([media/Icons/Interact.ico]));
showbutton(1,19,[display4dscript],[4DScript Command List],pdir([media/Icons/ScriptOverview.ico]));
showbutton(1,20,[displayeditor],[Text Editor],pdir([media/Icons/TextEditor.ico]));

showbutton(1,22,[displayruncontrol],[Run Control],pdir([media/Icons/RunControl.ico]));
showbutton(1,23,[displayclock],[Simulation Clock],pdir([media/Icons/Clock.ico]));
showbutton(1,24,[GuiInspector(1)],[GUI Builder],pdir([media/Icons/GuiBuilder.ico]));

showbutton(1,26,[KernelFnc([summary report])],[Summary Report],pdir([media/Icons/SummaryReport.ico]));
showbutton(1,27,[do(set(t,[Graphs]),v:=1,KernelFnc([execonuser]))],[Display Graph],pdir([media/Icons/Graph.ico]));

showbutton(1,29, [Search_DisplayAtomIn2Dmodel(TreeAtom, 15)], [Find TreeAtom in 2D model View], PDir([media/Icons/2DFind.ico]));
showbutton(1,30, [Search_DisplayAtomInTree(AnimAtom)], [Find AnimAtom in Treeview], PDir([media/Icons/TreeFind.ico]));
showbutton(1,31, [Search_DisplayAtomMotherInTree(TreeAtom)], [Find Mother of TreeAtom in Treeview], PDir([media/Icons/Motherfind.Ico]));
showbutton(1,32, [Search_OpenForm], [Find String or Atom], PDir([media/Icons/Search.ico]));

showbutton(1,34,[help(pdir([Help\ED HELP.HLP]),[INDEX])],[Display Help],pdir([media/Icons/DisplayHelp.ico]));

showspeedbar(1,[System Bar]);


{Atoms Toolbar}
showbutton(2,1,[do(set(t,[Source]),KernelFnc([create atom in model]))],[Source],pdir([media/Icons/Source.ico]));
showbutton(2,2,[do(set(t,[Queue]),KernelFnc([create atom in model]))],[Queue],pdir([media/Icons/Queue.ico]));
showbutton(2,3,[do(set(t,[Server]),KernelFnc([create atom in model]))],[Server],pdir([media/Icons/Server.ico]));
showbutton(2,4,[do(set(t,[Sink]),KernelFnc([create atom in model]))],[Sink],pdir([media/Icons/Sink.ico]));

showbutton(2,6,[do(set(t,[Assembler]),KernelFnc([create atom in model]))],[Assembler],pdir([media/Icons/Assembler.ico]));
showbutton(2,7,[do(set(t,[Unpack]),KernelFnc([create atom in model]))],[Unpack],pdir([media/Icons/Unpack.ico]));
showbutton(2,8,[do(set(t,[Splitter]),KernelFnc([create atom in model]))],[Splitter],pdir([media/Icons/Splitter.ico]));
showbutton(2,9,[do(set(t,[MultiService]),KernelFnc([create atom in model]))],[MultiServer],pdir([media/Icons/MultiServer.ico]));
showbutton(2,10,[do(set(t,[Container]),KernelFnc([create atom in model]))],[Container],pdir([media/Icons/Container.ico]));

showbutton(2,12,[do(set(t,[Node]),KernelFnc([create atom in model]))],[Node],pdir([media/Icons/Node.ico]));
showbutton(2,13,[do(set(t,[Fast Accumulating Conveyor]),KernelFnc([create atom in model]))],[Accumulating Conveyor],pdir([media/Icons/FastConveyor.ico]));
showbutton(2,14,[do(set(t,[Fast Non Accumulating Conveyor]),KernelFnc([create atom in model]))],[Non-Accumulation Conveyor],pdir([media/Icons/FastNonConveyor.ico]));

showbutton(2,16,[do(set(t,[Transporter]),KernelFnc([create atom in model]))],[Transporter],pdir([media/Icons/Transporter1.ico]));

showspeedbar(2,[Atoms Bar]);


{Tools Bar}
showbutton(3,1,[do(set(t,[ArrivalList]),KernelFnc([create atom in model]))],[Arrival List],pdir([media/Icons/ArrivalList.ico]));
showbutton(3,2,[do(set(t,[Composition Container]),KernelFnc([create atom in model]))],[Composition Container],pdir([media/Icons/CompositionContainer.ico]));

showbutton(3,4,[do(set(t,[Availability Control]),KernelFnc([create atom in model]))],[Availablity Control],pdir([media/Icons/AvailabilityControl.ico]));
showbutton(3,5,[do(set(t,[Mtbf Mttr Availability]),KernelFnc([create atom in model]))],[MTBF MTTR Availability],pdir([media/Icons/MtbfMtbrAvailability.ico]));
showbutton(3,6,[do(set(t,[Time Schedule Availability]),KernelFnc([create atom in model]))],[Time Schedule Availability],pdir([media/Icons/TimeScheduleAvailability.ico]));

showbutton(3,8,[do(set(t,[SingleTransform]),KernelFnc([create atom in model]))],[Single Transform],pdir([media/Icons/SingleTransform.ico]));
showbutton(3,9,[do(set(t,[MultiTransform]),KernelFnc([create atom in model]))],[Multiple Transform],pdir([media/Icons/MultiTransform.ico]));

showbutton(3,11,[do(set(t,[Lock]),KernelFnc([create atom in model]))],[Lock],pdir([media/Icons/Lock.ico]));
showbutton(3,12,[do(set(t,[Unlock]),KernelFnc([create atom in model]))],[UnLock],pdir([media/Icons/Unlock.ico]));
showbutton(3,13,[do(set(t,[Condition Control]),KernelFnc([create atom in model]))],[Condition Control],pdir([media/Icons/ConditionControl.ico]));
showbutton(3,14,[do(set(t,[Notify Router]),KernelFnc([create atom in model]))],[Notify Router],pdir([media/Icons/NotifyRouter.ico]));

showbutton(3,16,[do(set(t,[User Events]),KernelFnc([create atom in model]))],[User Event],pdir([media/Icons/UserEvents.ico]));
showbutton(3,17,[do(set(t,[Empirical Distribution]),KernelFnc([create atom in model]))],[Empirical Distribution],pdir([media/Icons/EmpiricalDistribution.ico]));
showbutton(3,18,[do(set(t,[Table]),KernelFnc([create atom in model]))],[Table],pdir([media/Icons/Table.ico]));

showbutton(3,20,[do(set(t,[Generic Monitor]),KernelFnc([create atom in model]))],[Generic Monitor],pdir([media/Icons/Monitor.ico]));
showbutton(3,21,[do(set(t,[StatusIndicator]),KernelFnc([create atom in model]))],[Status Indicator],pdir([media/Icons/StatusIndicator.ico]));
showbutton(3,22,[do(set(t,[StatusMonitor]),KernelFnc([create atom in model]))],[Status Monitor],pdir([media/Icons/StatusMonitor.ico]));
showbutton(3,23,[do(set(t,[StatusHistogram]),KernelFnc([create atom in model]))],[Status Histogram],pdir([media/Icons/StatusHistogram.ico]));
showbutton(3,24,[do(set(t,[StatusMonitorStackedBar]),KernelFnc([create atom in model]))],[Status Monitor Stacked Bar],pdir([media/Icons/StatusMonitorStackedBar.ico]));
showbutton(3,25,[do(set(t,[CircleDiagram]),KernelFnc([create atom in model]))],[Circle Diagram],pdir([media/Icons/CircleDiagram.ico]));
showbutton(3,26,[do(set(t,[Histogram]),KernelFnc([create atom in model]))],[Histogram],pdir([media/Icons/Histogram.ico]));
showbutton(3,27,[do(set(t,[ScatterPlot]),KernelFnc([create atom in model]))],[Scatter Plot],pdir([media/Icons/ScatterPlot.ico]));

showbutton(3,29,[do(set(t,[Textbox]),KernelFnc([create atom in model]))],[Text Box],pdir([media/Icons/TextBox.ico]));
showbutton(3,30,[do(set(t,[Bitmap]),KernelFnc([create atom in model]))],[Bitmap Box],pdir([media/Icons/Bitmap.ico]));

showbutton(3,32,[if(atomexists(atombyname([AutoFit Support],library)),do(sets,execonuser(s)),msg(concat([First add atom ],[Autofit]),[ to the library.]))],[AutoFit],pdir([media/Icons/Autofit.ico]));
showbutton(3,33,[if(atomexists(atombyname([AtomLabels],library)),do(ShowAtomLabels(0)),msg(concat([First add atom ],atomversion([T148-AtomLabels]),[ to the library.],1)))],[View Atom Labels],pdir([media/Icons/AtomLabels.ico]));

showbutton(3,35,[displaytracer],[Tracer],pdir([media/Icons/Tracer.ico]));
showbutton(3,36,[displayerrortracer],[Error Monitor],pdir([media/Icons/ErrorTracer.ico]));
showbutton(3,37,[displaywatches(1)],[Display Watches],pdir([media/Icons/Watches.ico]));
showbutton(3,38,[displaydebugger(1)],[Display Debugger],pdir([media/Icons/Debugger.ico]));
showbutton(3,39,[if(AtomExists( AtomByName([Attribute], Library)), Do( Sets, ExecOnUser(s)), msg([First add atom Attribute to the library.], 1))],[Edit Attributes],pdir([media/Icons/Attributes.ico]));

showbutton(3,41,[do(set(t,[Word]),KernelFnc([create atom in model]))],[Link Word],pdir([media/Icons/Word2k.ico]));
showbutton(3,42,[do(set(t,[ExcelActiveX]),KernelFnc([create atom in model]))],[Link Excel],pdir([media/Icons/Excel2k.ico]));
showbutton(3,43,[do(set(t,[Database Connection]),KernelFnc([create atom in model]))],[Link Database],pdir([media/Icons/Database2k.ico]));

showspeedbar(3,[Tools Bar]);
