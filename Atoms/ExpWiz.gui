EDControl(EditForm:
  BorderIcons = set(SystemMenu,Minimize),
  BorderStyle = Single,
  Caption = str('Experiment wizard'),
  Height = 602,
  Left = 281,
  MinHeight = 464,
  MinWidth = 386,
  Name = str('frmExpWiz'),
  Position = ScreenCenter,
  ShowHint = True,
  Top = 214,
  Visible = False,
  Width = 395,
  Controls(
    EDControl(Panel:
      Align = Bottom,
      Anchors = set(Left,Right,Bottom),
      BevelOuter = None,
      Caption = str(''),
      Height = 40,
      Left = 0,
      Name = str('Panel3'),
      TabOrder = 1,
      Top = 562,
      Width = 395,
      Controls(
        EDControl(Button:
          Caption = str('&Help'),
          Left = 8,
          Name = str('btnHelp2'),
          TabOrder = 1,
          Top = 8,
          Events(
            Click = str('exec(pdir([Help\Experimentation.PDF]))'#13))),
        EDControl(Button:
          Cancel = True,
          Caption = str('&Cancel'),
          Left = 144,
          Name = str('btnCancel'),
          TabOrder = 3,
          Top = 8,
          Events(
            Click = str('if(confirm(concat([Are you sure you want to close Experiment Wizard ?],lf,[Experiment Settings will not be saved])),'#13#10'  GuiDestroy'#13#10')'))),
        EDControl(Button:
          Caption = str('Save Settings'),
          Enabled = False,
          Left = 96,
          Name = str('btnSaveSettings'),
          TabOrder = 2,
          Top = 8,
          Visible = False,
          Width = 59,
          Events(
            Click = str('do( '#13'  {save all settings to attributes of ExperimentSupport atom}'#13'  '#13'  {nrruns must be an integer}'#13'  if( frac(value(GuiControl([edNrRuns], GuiGet([Text])))) <> 0,     '#13'    do( {No integer, round number}'#13'       msg(concat( GuiControl([edNrRuns],GuiGet([Text])),[ is not an integer value. Value will be rounded.])),       '#13'       GuiControl([edNrRuns],GuiSet([Text],string(round(value(GuiGet([Text]))))))    '#13'    )'#13'  ),'#13'  SetAtt([nrruns], value(GuiControl([edNrRuns], GuiGet([Text]))), refExperimentSupport), '#13'  '#13' { SetAtt([runlength], value(GuiControl([edRunLength], GuiGet([Text]))), refExperimentSupport), }'#13'  SetExprAtt([runlength], GuiControl([vdsRunLength], GuiGet([Code])), refExperimentSupport),       '#13'  '#13'  {if( value(GuiControl([edWarmUp], GuiGet([Text]))) > value(GuiControl([edRunLength], GuiGet([Text]))), '#13'    do('#13'      msg([ Warmup period can not be longer than Runlength, will be set equal to Runlength]),'#13'      GuiControl([edWarmUp],GuiSet([Text],GuiSelect([ExpWizForm],[edRunLength],GuiGet([Text]))))           '#13'    )'#13'  ),}'#13'  '#13'  {SetAtt([warmup], value(GuiControl([edWarmUp], GuiGet([Text]))), refExperimentSupport),}'#13'  SetExprAtt([warmup], GuiControl([vdsWarmUp], GuiGet([Code])), refExperimentSupport), '#13'  '#13'  SetAtt([currun], 0, refExperimentSupport),'#13'  SetAtt([method], GuiControl([cobSimMethod],GuiGet([ItemIndex])), refExperimentSupport),            '#13'  SetAtt([usetermcond], GuiControl([chbTerminatingCond], GuiGet([Checked])), refExperimentSupport),'#13'      '#13'  SetExprAtt([termcond], GuiControl([vdsTerminatingCond], GuiGet([Code])), refExperimentSupport), '#13'  SetExprAtt([onstartrun], GuiControl([vdsRunStart], GuiGet([Code])), refExperimentSupport),                   '#13'  SetExprAtt([onendrun], GuiControl([vdsRunEnd], GuiGet([Code])), refExperimentSupport),                   '#13'  SetExprAtt([onendwarmup], GuiControl([vdsWarmupEnd], GuiGet([Code])), refExperimentSupport),'#13'  '#13'  SetTextAtt([expmemo], GuiControl([meExpDescription], GuiGet([Lines])), refExperimentSupport),'#13'  '#13'  {Save the Statistics Settings to Experiment Support Table}'#13'  '#13'  if( GuiControl([tbStatistics],GuiGet([RowCount]))=1,'#13'    EmptyTable(refExperimentSupport,1,4), {one row for some experimentsettings}'#13'    do(         '#13'      GuiControl([tbStatistics]),'#13'      emptytable(refExperimentSupport,GuiGet([RowCount]),GuiGet([ColCount])) {always at least 4 cols, this is enough for the extra experimentsettings in the first row}'#13'    )'#13'  ),   '#13'      '#13'  MatrixRepeat( nrows(refExperimentSupport)-1, ncols(refExperimentSupport), '#13'    do(    {mcx and mcy are row- and columncounters}'#13'       setcell(mcx+1,mcy,'#13'         do('#13'           if(mcy=2,'#13'             if( comparetext([Atom],GuiGet([Cells],mcx,mcy-1)),'#13'               1,'#13'               2'#13'             ) ,'#13'            guiGet([Cells],mcx,mcy-1)'#13'           )'#13'         )    '#13'       )'#13'    )'#13'  ), '#13'  '#13'  {remember nr of cols filled with stat definitions, needed to save these definitions when model is saved}'#13'  SetAtt([nrstatcols], ncols(refExperimentSupport), refExperimentSupport),'#13' '#13'  setcell(1,1,[RESULTS],refExperimentSupport),'#13'  setcell(1,2,att([nrruns],refExperimentSupport) ,refExperimentSupport),'#13'  setcell(1,3,nrows(refExperimentSupport)-1,refExperimentSupport), {number of statistics rows}'#13'  setcell(1,4,att([nrstatcols],refExperimentSupport) ,refExperimentSupport),  {number of statistics columns}'#13'  '#13' {Save the Groups Settings to Experiment Support Table}'#13'  '#13'  if( GuiControl([tbGroups],GuiGet([RowCount]))=1,'#13'    SetTable(0,0,first(refExperimentSupport)),'#13'    do(         '#13'      GuiControl([tbGroups]),'#13'      emptytable(first(refExperimentSupport),GuiGet([RowCount])-1,GuiGet([ColCount]))'#13'      )'#13'  ), '#13'  '#13'  MatrixRepeat( nrows(first(refExperimentSupport)), ncols(first(refExperimentSupport)), '#13'    do(    {mcx and mcy are row- and columncounters}'#13'       setcell(mcx,mcy, GuiGet([Cells],mcx,mcy-1) ,first(refExperimentSupport))    '#13'     )  '#13'  ),'#13'  '#13'  {remove all possible extra atoms in Experiment Support atom, used for keeping results of complete tables}'#13'  '#13'  repeat( content(refExperimentSupport)-1,'#13'    DestroyAtom(last(refExperimentSupport))'#13'   )'#13'            '#13'  {Disable the SaveSettings button}'#13'  {GuiControl([btnSaveSettings],GuiSet([Enabled],False))}'#13')'#13))),
        EDControl(Button:
          Caption = str('< &Back'),
          Left = 230,
          Name = str('btnBack'),
          TabOrder = 4,
          Top = 8,
          Events(
            Click = str('do('#13' '#13'   {Change buttons and active pages depending on current page}'#13'   '#13'  GuiControl([MultiPage1]),'#13'  case(GuiGet([ActivePage]),'#13'    do( {Explanation page}'#13'       msg([No previous page, button should have been disabled.])'#13'    ),'#13'    do( {Statistics page}'#13#13'      GuiControl([pgPage2]),'#13'      GuiSet([Visible],1),'#13'      GuiControl([pgPage3]),'#13'      GuiSet([Visible],0),           '#13#13'      GuiControl([btnBack]),'#13'      GuiSet([Enabled],0),'#13#13'      GuiControl([btnNext]),'#13'      GuiSet([Enabled],1),'#13'      '#13'      {GuiControl([btnSaveSettings]),}'#13'      {GuiSet([Visible],False),}'#13'    '#13'      GuiControl([MultiPage1]),'#13'      GuiSet([ActivePage],1)      '#13#13'    ),'#13'    do( {Run Experiment page}'#13#13'      GuiControl([pgPage3]),'#13'      GuiSet([Visible],1),     '#13'      GuiControl([pgPage4]),'#13'      GuiSet([Visible],0),'#13' '#13'      GuiControl([btnNext]),'#13'      GuiSet([Caption],[&Next >]),'#13'      GuiSet([Hint],[]),'#13'      {GuiSet([Enabled],1),}'#13'      '#13'      {GuiControl([btnSaveSettings]),}'#13'      {GuiSet([Visible],True),}'#13'    '#13'      GuiControl([MultiPage1]),'#13'      GuiSet([ActivePage],2)'#13#13'    )'#13'  )'#13')'#13))),
        EDControl(Button:
          Caption = str('&Next >'),
          Default = True,
          Left = 312,
          Name = str('btnNext'),
          TabOrder = 5,
          Top = 8,
          Events(
            Click = str('do(  '#13'   '#13'   {Change buttons and active pages depending on current page}'#13'   '#13'  GuiControl([MultiPage1]),'#13'  case(GuiGet([ActivePage]),'#13'    '#13'    do( {Experiment Settings page}'#13#13'      GuiControl([pgPage2]),'#13'      GuiSet([Visible],0),'#13'      GuiControl([pgPage3]),'#13'      GuiSet([Visible],1),'#13'      '#13'      GuiControl([btnBack]),'#13'      GuiSet([Enabled],True),'#13'     {GuiControl([btnSaveSettings]),}'#13'     {GuiSet([Visible],False),}'#13'    '#13'      GuiControl([MultiPage1]),'#13'      GuiSet([ActivePage],2)'#13#13'    ),'#13'    do( {Statistics page}'#13#13'      GuiControl([pgPage3]),'#13'      GuiSet([Visible],0),'#13'      GuiControl([pgPage4]),'#13'      GuiSet([Visible],1),'#13'            '#13'      GuiControl([btnNext]),'#13'      GuiSet([Caption],[&Finish]),'#13'      GuiSet([Hint],[Pushing the Finish button will save all settings and close the Experiment wizard]),'#13'      {GuiSet([Enabled],0),}'#13'      '#13'      {GuiControl([btnSaveSettings]),}'#13'      {GuiSet([Visible],False),}'#13'    '#13'      GuiControl([MultiPage1]),'#13'      GuiSet([ActivePage],3)'#13#13'    ),'#13'    do( {Run Experiment page}'#13'     {msg([No next page, button should have been disabled])}'#13#13'      {Next button is now Finish button, used to save settings but close wizzard}'#13'      {Save all settings to ExperimentSupport Atom}'#13'      GuiControl([btnSaveSettings]),'#13'      GuiRun([Click]),'#13#13'      GuiDestroy     '#13#13'    )'#13'  )'#13')'#13))))),
    EDControl(MultiPage:
      ActivePage = 3,
      Align = Client,
      Anchors = set(Left,Top,Right,Bottom),
      Height = 562,
      Left = 0,
      Name = str('MultiPage1'),
      TabOrder = 2,
      TabStop = False,
      Top = 0,
      Width = 395,
      Controls(
        EDControl(SinglePage:
          Caption = str('Experiment Settings'),
          Name = str('pgPage2'),
          PageIndex = 1,
          Controls(
            EDControl(GroupBox:
              Caption = str('Settings'),
              Height = 224,
              Left = 8,
              Name = str('gbSettings'),
              TabOrder = 1,
              Top = 8,
              Width = 370,
              Controls(
                EDControl(Label:
                  Caption = str('Simulation method:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('Label3'),
                  Top = 32,
                  Width = 89),
                EDControl(Label:
                  Caption = str('Observation period [s]'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('StaticText22'),
                  Top = 64,
                  Width = 103),
                EDControl(Label:
                  Caption = str('Number of observations:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('Label33'),
                  Top = 96,
                  Width = 115),
                EDControl(Label:
                  Caption = str('Warm-up period [s]:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('Label34'),
                  Top = 128,
                  Width = 92),
                EDControl(Label:
                  Caption = str('Use terminating cond.:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('Label35'),
                  Top = 160,
                  Width = 106),
                EDControl(Label:
                  Caption = str('Condition expression:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('lbTerminatingCond'),
                  Top = 192,
                  Width = 100),
                EDControl(ComboBox:
                  Height = 21,
                  Items = str('Separate runs'#13#10'Sub runs'#13#10),
                  Left = 132,
                  Name = str('cobSimMethod'),
                  TabOrder = 1,
                  Top = 26,
                  Width = 225,
                  Events(
                    Change = str('do('#13'  if( GuiControl([cobSimMethod],GuiGet([ItemIndex])) = 2,'#13'     do('#13'        GuiControl([chbTerminatingCond],GuiSet([Checked],False)) ,'#13'        GuiControl([chbTerminatingCond],GuiSet([Enabled],False)) '#13'      ),'#13'     do('#13'        GuiControl([chbTerminatingCond],GuiSet([Enabled],True))      '#13'      )'#13'   ),   '#13'  GuiRun([Update])'#13')'#13))),
                EDControl(ScriptEdit:
                  Code = str('0'),
                  Left = 132,
                  Name = str('vdsRunLength'),
                  TabOrder = 2,
                  Top = 58,
                  Width = 225,
                  Events(
                    Change = str('GuiRun([Update])'#13))),
                EDControl(Edit:
                  Height = 21,
                  Left = 132,
                  Name = str('edNrRuns'),
                  TabOrder = 3,
                  Text = str('0'),
                  Top = 90,
                  Width = 100,
                  Events(
                    Exit = str('do(  '#13' GuiRun([Update])'#13')'#13))),
                EDControl(ScriptEdit:
                  Code = str('0'),
                  Left = 132,
                  Name = str('vdsWarmUp'),
                  TabOrder = 4,
                  Top = 122,
                  Width = 225,
                  Events(
                    Change = str('GuiRun([Update])'#13))),
                EDControl(CheckBox:
                  Caption = str(''),
                  Left = 132,
                  Name = str('chbTerminatingCond'),
                  TabOrder = 5,
                  Top = 160,
                  Width = 33,
                  Events(
                    Change = str('do('#13'  '#13'  if(GuiGet([Checked])=0,'#13'    do('#13'      GuiControl([vdsTerminatingCond]),'#13'      GuiSet([Enabled],0),       '#13'             '#13'      GuiControl([lbTerminatingCond]),'#13'      GuiSet([Enabled],0),'#13'      '#13'      GuiControl([vdsRunLength]),'#13'      GuiSet([Enabled],1),       '#13'             '#13'      GuiControl([StaticText22]),'#13'      GuiSet([Enabled],1)'#13'    ),'#13'    do('#13'      GuiControl([vdsTerminatingCond]),'#13'      GuiSet([Enabled],1),       '#13'    '#13'      GuiControl([lbTerminatingCond]),'#13'      GuiSet([Enabled],1),'#13'      '#13'      GuiControl([vdsRunLength]),'#13'      GuiSet([Enabled],0),       '#13'             '#13'      GuiControl([StaticText22]),'#13'      GuiSet([Enabled],0)'#13'    ) '#13'  )   '#13')'#13),
                    Init = str('{enable the 4ds box and label only when checkbox is checked}'#13#10'if(GuiGet([Checked])=0,'#13#10'  do('#13#10'    GuiControl([vdsTerminatingCond]),'#13#10'    GuiSet([Enabled],0),'#13#10'    '#13#10'    GuiControl([lbTerminatingCond]),'#13#10'    GuiSet([Enabled],0)    '#13#10'  ),'#13#10'  do('#13#10'    GuiControl([vdsTerminatingCond]),'#13#10'    GuiSet([Enabled],1),'#13#10'    '#13#10'    GuiControl([lbTerminatingCond]),'#13#10'    GuiSet([Enabled],1)    '#13#10'  ) '#13#10')   '))),
                EDControl(ScriptEdit:
                  Height = 22,
                  Hint = str('When this condition is true, the run will be stopped.'),
                  Left = 132,
                  Name = str('vdsTerminatingCond'),
                  TabOrder = 6,
                  Top = 186,
                  Width = 225))),
            EDControl(GroupBox:
              Caption = str('Triggers'),
              Height = 128,
              Left = 8,
              Name = str('gbTriggers'),
              TabOrder = 2,
              Top = 248,
              Width = 370,
              Controls(
                EDControl(Label:
                  Caption = str('On start of run:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('Label2'),
                  Top = 32,
                  Width = 70),
                EDControl(Label:
                  Caption = str('On end of run:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('Label22'),
                  Top = 64,
                  Width = 68),
                EDControl(Label:
                  Caption = str('On end of warm-up:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('Label23'),
                  Top = 96,
                  Width = 93),
                EDControl(ScriptEdit:
                  Height = 22,
                  Hint = str('Executed on start of each single run'),
                  Left = 132,
                  Name = str('vdsRunStart'),
                  TabOrder = 1,
                  Top = 26,
                  Width = 225),
                EDControl(ScriptEdit:
                  Height = 22,
                  Hint = str('Executed at the end of each single run'),
                  Left = 132,
                  Name = str('vdsRunEnd'),
                  TabOrder = 2,
                  Top = 58,
                  Width = 225),
                EDControl(ScriptEdit:
                  Height = 22,
                  Hint = str('Executed at the end of the warm-up period'),
                  Left = 132,
                  Name = str('vdsWarmupEnd'),
                  TabOrder = 3,
                  Top = 90,
                  Width = 225))),
            EDControl(GroupBox:
              Caption = str('Description'),
              Height = 128,
              Left = 8,
              Name = str('gbDescription'),
              TabOrder = 3,
              Top = 392,
              Width = 370,
              Controls(
                EDControl(Memo:
                  Height = 80,
                  Left = 12,
                  Name = str('meExpDescription'),
                  TabOrder = 1,
                  Top = 32,
                  Width = 344))))),
        EDControl(SinglePage:
          Caption = str('Performance Measures'),
          Name = str('pgPage3'),
          PageIndex = 2,
          Controls(
            EDControl(GroupBox:
              Caption = str('Items'),
              Height = 512,
              Left = 8,
              Name = str('gbSettings2'),
              TabOrder = 1,
              Top = 8,
              Width = 370,
              Controls(
                EDControl(Table:
                  ColCount = 3,
                  DefaultWidth = 112,
                  FixedCols = 0,
                  Height = 427,
                  Left = 12,
                  Name = str('tbStatsView'),
                  Options = set(FixedVertLine,FixedHorzLine,ColSizing,RowSelect),
                  SelectionColEnd = 2,
                  SelectionColStart = 0,
                  TabOrder = 1,
                  Top = 32,
                  Width = 344,
                  Events(
                    Update = str('do('#13' '#13'  {Make sure Fixed Rows = 1 in Statistics table}  '#13'  if( GuiControl([tbStatistics],GuiGet([RowCount])) > 1,'#13'    do('#13'      GuiControl([tbStatistics],GuiSet([FixedRows],1))'#13'    )'#13'  ),'#13'    '#13'  {Remove Empty Columns}'#13'  label([LoopStop],refExperimentSupport) := 0,'#13'  label([TempCol],refExperimentSupport) := GuiControl([tbStatistics],GuiGet([ColCount])) - 1 ,'#13'  '#13'  LoopUntil( label([LoopStop],refExperimentSupport),'#13'    do('#13'            '#13'       loopuntil( label([LoopStop],refExperimentSupport),'#13'          do('#13'            if( not(comparetext([] , GuiControl([tbStatistics],GuiGet([Cells],Count,label([TempCol],refExperimentSupport))))),'#13'              label([LoopStop],refExperimentSupport) := 1'#13'            )'#13'          ),        '#13'          GuiControl([tbStatistics],GuiGet([RowCount])) - 1        '#13'       ),'#13'       '#13'       {if no cells with content then remove column}'#13'       if( label([LoopStop],refExperimentSupport) = 0,'#13'          GuiControl([tbStatistics],GuiSet([ColCount],GuiGet([ColCount])-1))'#13'       ),'#13'        '#13'       {next Column}'#13'       label([TempCol],refExperimentSupport) := label([TempCol],refExperimentSupport) - 1'#13'    ),'#13'    GuiControl([tbStatistics],GuiGet([ColCount]))'#13'  ),'#13'  label([LoopStop],refExperimentSupport) := 0,'#13'  label([TempCol],refExperimentSupport) := 0,'#13'   '#13'  if( GuiControl([tbStatistics],GuiGet([ColCount])) < 4,'#13'      GuiControl([tbStatistics],GuiSet([ColCount],4))'#13'  ),'#13' '#13'  {Set the headers}'#13'  GuiControl([tbStatistics],GuiSet([Cells],0,0,[Name])),  '#13'  GuiControl([tbStatistics],GuiSet([Cells],0,1,[Category])),'#13'  '#13'  repeat( /(GuiControl([tbStatistics],GuiGet([ColCount]))-2, 2),'#13'    do('#13'       GuiControl([tbStatistics],GuiSet([Cells],0,count*2,[Name])),'#13'       GuiControl([tbStatistics],GuiSet([Cells],0,1+count*2,[Code]))       '#13'    )'#13'  ), '#13#13'    '#13'  '#13'  {Sort the Statistics table before doing anything else}'#13'  GuiControl([tbStatistics],GUITableSortByColumn(0,1,1)), '#13#13'  {Set table size}'#13'  GuiControl([tbStatsView],GuiSet([RowCount],GuiControl([tbStatistics],GuiGet([RowCount])))),'#13'  '#13'  {set headers}'#13'  GuiControl([tbStatsView],GuiSet([Cells],0, 0, [Name])),'#13'  GuiControl([tbStatsView],GuiSet([Cells],0, 1, [Category])),'#13'  GuiControl([tbStatsView],GuiSet([Cells],0, 2, [Performance Measures])),      '#13'  '#13'  {read Statistics table and create records in StatsView table}'#13'  '#13'  label([RowCount],refExperimentSupport) := 0,'#13'  '#13'  repeat(GuiControl([tbStatistics],GuiGet([RowCount])),'#13'    do('#13'       inc(label([RowCount],refExperimentSupport)),'#13'       '#13'       GuiControl([tbStatsView],GuiSet([Cells],label([RowCount],refExperimentSupport), 0,       '#13'          GuiControl([tbStatistics],GuiGet([Cells],label([RowCount],refExperimentSupport),0)) '#13'        )),'#13'         '#13'       GuiControl([tbStatsView],GuiSet([Cells],label([RowCount],refExperimentSupport), 1,       '#13'          GuiControl([tbStatistics],GuiGet([Cells],label([RowCount],refExperimentSupport),1))       '#13'       )),       '#13'       '#13'       label([TempString],refExperimentSupport) := 0,'#13'       label([stop],refExperimentSupport) := 0, '#13'          '#13'       loopuntil( label([stop],refExperimentSupport),'#13'         do('#13'                                                                                                      '#13'           if( comparetext(GuiControl([tbStatistics],GuiGet([Cells],label([RowCount],refExperimentSupport),  count*2 )),[]), '#13'               label([stop],refExperimentSupport):=1,'#13'               do('#13'                 label([TempString],refExperimentSupport) := concat( label([TempString],refExperimentSupport), '#13'                                                                                                            GuiControl([tbStatistics],GuiGet([Cells],label([RowCount],refExperimentSupport),Count*2)),'#13'                                                                                                            [ ; ])   '#13'{                                                                                                            GuiControl([tbStatistics],GuiGet([Cells],label([RowCount],refExperimentSupport),1+Count*2)),}'#13' {                                                                                                           [ ; ] )               }'#13'               )'#13'           )                                                                                                     '#13'         ),'#13'        /(GuiControl([tbStatistics],GuiGet([ColCount]))-2,2)                                                                                                                                      '#13'      ),'#13'       '#13'      GuiControl( [tbStatsView],GuiSet([Cells],label([RowCount],refExperimentSupport), 2, label([TempString],refExperimentSupport)))'#13'    )'#13'  ),'#13#13'  {Enable/Disable Edit and Delete button and make sure Fixed Rows = 1}  '#13'  if( GuiControl([tbStatsView],GuiGet([RowCount])) <= 1,'#13'    do('#13'      GuiControl([btnEditStatList],GuiSet([Enabled],False)),'#13'      GuiControl([btnDelStatList],GuiSet([Enabled],False)),'#13'      GuiControl([btnAddCopy],GuiSet([Enabled],False))'#13'    ),'#13'    do('#13'      GuiControl([btnEditStatList],GuiSet([Enabled],True)),'#13'      GuiControl([btnDelStatList],GuiSet([Enabled],True)),'#13'      GuiControl([btnAddCopy],GuiSet([Enabled],True)),'#13'      GuiControl([tbStatsView],GuiSet([FixedRows],1))'#13'    )'#13'  ),'#13'  '#13'  label([TempString],refExperimentSupport) := 0,'#13'  label([RowCount],refExperimentSupport) := 0,'#13'  label([stop],refExperimentSupport) := 0'#13')'#13))),
                EDControl(Table:
                  ColCount = 7,
                  Enabled = False,
                  FixedCols = 0,
                  Height = 35,
                  Left = 64,
                  Name = str('tbStatistics'),
                  Options = set(FixedVertLine,FixedHorzLine,ColSizing,RowSelect),
                  SelectionColEnd = 6,
                  SelectionColStart = 0,
                  TabOrder = 6,
                  Top = 168,
                  Visible = False,
                  Width = 120),
                EDControl(Table:
                  ColCount = 1,
                  Enabled = False,
                  FixedCols = 0,
                  FixedRows = 0,
                  Height = 27,
                  Left = 64,
                  Name = str('tbGroups'),
                  Options = set(FixedVertLine,FixedHorzLine,VertLine,HorzLine,ColSizing,RowSelect),
                  RowCount = 1,
                  SelectionColEnd = 0,
                  SelectionColStart = 0,
                  SelectionRowEnd = 0,
                  SelectionRowStart = 0,
                  TabOrder = 7,
                  Top = 216,
                  Visible = False,
                  Width = 104,
                  Events(
                    Update = str('do('#13#10' '#13#10'  {Make sure Fixed Rows = 1 in Groups table}  '#13#10'  if( GuiControl([tbGroups],GuiGet([RowCount])) > 1,'#13#10'    do('#13#10'      GuiControl([tbGroups],GuiSet([FixedRows],1))'#13#10'    )'#13#10'  ),'#13#10#13#10'  {Remove Empty Columns}'#13#10'  label([LoopStop],refExperimentSupport) := 0,'#13#10'  label([TempCol],refExperimentSupport) := GuiControl([tbGroups],GuiGet([ColCount])) - 1 ,'#13#10'  '#13#10'  LoopUntil( label([LoopStop],refExperimentSupport),'#13#10'    do('#13#10'            '#13#10'       loopuntil( label([LoopStop],refExperimentSupport),'#13#10'          do('#13#10'            if( not(comparetext([] , GuiControl([tbGroups],GuiGet([Cells],Count-1 , label([TempCol],refExperimentSupport))))),'#13#10'              label([LoopStop],refExperimentSupport) := 1'#13#10'            )'#13#10'          ),        '#13#10'          GuiControl([tbGroups],GuiGet([RowCount]))        '#13#10'       ),'#13#10'       '#13#10'       {if no cells with content then remove column}'#13#10'       if( label([LoopStop],refExperimentSupport) = 0,'#13#10'          GuiControl([tbGroups],GuiSet([ColCount],GuiGet([ColCount])-1))'#13#10'       ),'#13#10'        '#13#10'       {next Column}'#13#10'       label([TempCol],refExperimentSupport) := label([TempCol],refExperimentSupport) - 1'#13#10'    ),'#13#10'    GuiControl([tbGroups],GuiGet([ColCount]))'#13#10'  ),'#13#10'  label([LoopStop],refExperimentSupport) := 0,'#13#10'  label([TempCol],refExperimentSupport) := 0'#13#10#13#10')'))),
                EDControl(Button:
                  Caption = str('&Add'),
                  Left = 34,
                  Name = str('btnAddStatList'),
                  TabOrder = 2,
                  Top = 472,
                  Events(
                    Click = str('do('#13'  {Set a label to indicate we''re adding a new statistic}'#13'  label([StatGui],refExperimentSupport) := 1,'#13'  label([StatType],refExperimentSupport) := 1,'#13#13'  Guicreate([frmStatistics],[StatisticsForm],0,[],0,2)'#13'  '#13')'#13))),
                EDControl(Button:
                  Caption = str('C&opy'),
                  Left = 116,
                  Name = str('btnAddCopy'),
                  TabOrder = 3,
                  Top = 472,
                  Events(
                    Click = str('do('#13'  {Set a label to indicate we''re adding a copy of a statistic}'#13'  label([StatGui],refExperimentSupport) := 3,'#13'  '#13'  {Set other temporary labels}'#13'  label([StatSelected],refExperimentSupport) := GuiControl([tbStatsView],GuiGet([ActiveRow])),'#13'  '#13'  if( comparetext([Atom],GuiControl([tbStatistics],GuiGet([Cells],label([StatSelected],refExperimentSupport),1))),'#13'    '#13'    label([StatType],refExperimentSupport) := 1,'#13'    '#13'    do(    {Group}'#13'      label([StatType],refExperimentSupport) := 2,'#13'      '#13'      {look for group in GroupsTable}'#13'      label([GroupFound],refExperimentSupport) := 0,'#13'      loopuntil( label([GroupFound],refExperimentSupport),'#13'        do('#13'          if( comparetext( GuiControl([tbStatistics],GuiGet([Cells],label([StatSelected],refExperimentSupport),0)),'#13'                                         GuiControl([tbGroups],guiGet([Cells],count,0))'#13'                                         ),'#13'            do('#13#13'              label([GroupRow],refExperimentSupport) := count ,'#13'              label([GroupFound],refExperimentSupport) := 1              '#13'            )'#13'          )'#13'        ),'#13'        GuiControl([tbGroups],GuiGet([RowCount]))-1'#13'      ),'#13'      '#13'      {Groupselected label will only have a value when group exists and is edited}'#13'      if( label([GroupFound],refExperimentSupport),'#13'        do('#13'          label([GroupSelected],refExperimentSupport) :=  label([GroupRow],refExperimentSupport)'#13'        )'#13'      ),    '#13'      {remove labels}'#13'      label([GroupRow],refExperimentSupport) := 0,'#13'      label([GroupFound],refExperimentSupport) := 0            '#13'    )    '#13'  ),  '#13'  '#13'  Guicreate([frmStatistics],[StatisticsForm],0,[],0,2)'#13'  '#13')'#13))),
                EDControl(Button:
                  Caption = str('&Edit'),
                  Left = 198,
                  Name = str('btnEditStatList'),
                  TabOrder = 4,
                  Top = 472,
                  Events(
                    Click = str('do('#13' '#13'  {Set a label to indicate we''re editing a statistic}'#13'  label([StatGui],refExperimentSupport) := 2,'#13'  '#13'  {Set other temporary labels}'#13'  label([StatSelected],refExperimentSupport) := GuiControl([tbStatsView],GuiGet([ActiveRow])),'#13'  '#13'  if( comparetext([Atom],GuiControl([tbStatistics],GuiGet([Cells],label([StatSelected],refExperimentSupport),1))),'#13'    '#13'    label([StatType],refExperimentSupport) := 1,'#13'    '#13'    do(    {Group}'#13'      label([StatType],refExperimentSupport) := 2,'#13'      '#13'      {look for group in GroupsTable}'#13'      label([GroupFound],refExperimentSupport) := 0,'#13'      loopuntil( label([GroupFound],refExperimentSupport),'#13'        do('#13'          if( comparetext( GuiControl([tbStatistics],GuiGet([Cells],label([StatSelected],refExperimentSupport),0)),'#13'                                         GuiControl([tbGroups],guiGet([Cells],count,0))'#13'                                         ),'#13'            do('#13#13'              label([GroupRow],refExperimentSupport) := count ,'#13'              label([GroupFound],refExperimentSupport) := 1              '#13'            )'#13'          )'#13'        ),'#13'        GuiControl([tbGroups],GuiGet([RowCount]))-1'#13'      ),'#13'      '#13'      {Groupselected label will only have a value when group exists and is edited}'#13'      if( label([GroupFound],refExperimentSupport),'#13'        do('#13'          label([GroupSelected],refExperimentSupport) :=  label([GroupRow],refExperimentSupport)'#13'        )'#13'      ),    '#13'      {remove labels}'#13'      label([GroupRow],refExperimentSupport) := 0,'#13'      label([GroupFound],refExperimentSupport) := 0            '#13'    )    '#13'  ),  '#13'  '#13'  Guicreate([frmStatistics],[StatisticsForm],0,[],0,2)'#13')'#13))),
                EDControl(Button:
                  Caption = str('&Delete'),
                  Left = 280,
                  Name = str('btnDelStatList'),
                  TabOrder = 5,
                  Top = 472,
                  Events(
                    Click = str('do('#13#10' '#13#10'  {If it''s a Group, also delete the group definition}'#13#10'  '#13#10'  if( comparetext(GuiControl([tbStatistics],GuiGet([Cells],GuiControl([tbStatsView],GuiGet([ActiveRow])),1)),[Group]),'#13#10'    do('#13#10'      {look for group in GroupsTable}'#13#10'      label([GroupFound],refExperimentSupport) := 0,'#13#10'      loopuntil( label([GroupFound],refExperimentSupport),'#13#10'        do('#13#10'          if( comparetext( GuiControl([tbStatistics],GuiGet([Cells],GuiControl([tbStatsView],GuiGet([ActiveRow])),0))  ,GuiControl([tbGroups],guiGet([Cells],count,0))) ,'#13#10'            do('#13#10'              label([GroupRow],refExperimentSupport) := count ,'#13#10#13#10'              label([GroupFound],refExperimentSupport) := 1              '#13#10'            )'#13#10'          )'#13#10'        ),'#13#10'        GuiControl([tbGroups],GuiGet([RowCount]))-1'#13#10'      ),'#13#10'      '#13#10'      if( label([GroupFound],refExperimentSupport),'#13#10'        do('#13#10'            {Remove entire row from Groups table}'#13#10'           GuiControl([tbGroups],GUITableDeleteRow(label([GroupRow],refExperimentSupport))),'#13#10'           '#13#10'           GuiControl([tbGroups],GuiRun([Update]))'#13#10'        )'#13#10'      ),    '#13#10'      {remove labels}'#13#10'      label([GroupRow],refExperimentSupport) := 0,'#13#10'      label([GroupFound],refExperimentSupport) := 0              '#13#10'    )'#13#10'  ),'#13#10#13#10'  {Remove entire row from Statistics table}'#13#10'   GuiControl([tbStatistics],GUITableDeleteRow(GuiControl([tbStatsView],GuiGet([ActiveRow])))),'#13#10#13#10'  {Enable the Save Settings button, and also update the overview table}'#13#10'  { GuiControl([btnSaveSettings],GuiSet([Enabled],True)),}'#13#10'   GuiControl([tbStatsView],GuiRun([Update]))'#13#10')'))))))),
        EDControl(SinglePage:
          Caption = str('Run Experiment'),
          Name = str('pgPage4'),
          PageIndex = 3,
          Controls(
            EDControl(Label:
              Caption = str('When the experiment has finished the results can be analyzed. Check the box below to automatically open the ''Analyze experiment results'' window as soon as the experiment finishes.'),
              Height = 39,
              Left = 24,
              Name = str('Label5'),
              Top = 56,
              Width = 332,
              WordWrap = True),
            EDControl(Label:
              Caption = str('The settings and results of the last experiment executed are saved with the model. The results can be analyzed at any time by opening the model and selecting ''Analyze experiment results'' in the Simulate menu..'),
              Height = 52,
              Left = 24,
              Name = str('Label6'),
              Top = 112,
              Width = 319,
              WordWrap = True),
            EDControl(CheckBox:
              Caption = str('Automatically open the ''Analyze experiment results'' window.'),
              Checked = True,
              Left = 24,
              Name = str('chbAutoAnalyze'),
              TabOrder = 1,
              Top = 192,
              Width = 313),
            EDControl(Button:
              Caption = str('&Start Experiment'),
              Left = 96,
              Name = str('btnStartExp'),
              TabOrder = 2,
              Top = 240,
              Width = 187,
              Events(
                Click = str('do( '#13'   '#13'  {Check all generators for Repetitive setting, if Repetitive is checked there''s no use in running an experiment}'#13'   '#13'  label( [repcount], refExperimentSupport) := 0,    '#13'  repeat(1000,'#13'     do('#13'       label([repcount], refExperimentSupport) := label([repcount], refExperimentSupport) + GeneratorRepetitive(Count)           '#13'     )       '#13'  ),'#13'  '#13'  {Don''t run when repetive has been checked}'#13'   '#13'  if( label([repcount], refExperimentSupport) > 0,'#13'    do('#13'      msg(concat([The random generators are set to repetitive.], lf, [Please uncheck this in menu ''Simulate'']),2)       '#13'    ),'#13'     '#13'    do(  {Ready to run}'#13'      '#13'      {Save all settings to ExperimentSupport Atom}'#13'      GuiControl([btnSaveSettings]),'#13'      GuiRun([Click]),      '#13'       '#13'      {Run the model}                     '#13'      SetTimerEvent(           '#13'        [do('#13'          reset,'#13'          sendmessagedirect(refExperimentSupport,[expreset],refExperimentSupport),'#13'          Run,'#13'          {Disable Run Until Stop Time}'#13'          if(not(=(StopTime, 1E40)),'#13'            StopTime:=1E40'#13'          )          '#13'        )]                                      '#13'      ),'#13'      '#13'      {Indicates we''re running via the Experiment Wizard}'#13'      att([runningexp],refExperimentSupport) := 1,'#13'       '#13'      {Hide Wizard, show status form}     '#13'      GuiControl([frmExpWiz],GuiSet([Visible],False)),   '#13'            '#13'      Guicreate([frmStatus],[StatusForm],0,[],0,1),'#13'      '#13'      Label([modelLayoutWindowHeight],refExperimentSupport) := WindowHeight(2d3d(1)),'#13'      Label([modelLayoutWindowWidth],refExperimentSupport) := WindowWidth(2d3d(1)),'#13'      '#13'      ClosemodelLayout,'#13'      ClosemodelView          '#13'      '#13'    )                       '#13'  ),'#13'  {Delete label repcount}      '#13'  label( [repcount],refExperimentSupport) := 0  '#13'  '#13')'#13' '#13))),
            EDControl(Label:
              Caption = str('Start your experiment by pushing the ''Start Experiment'' button.'),
              Color = -16777208,
              Height = 13,
              Left = 24,
              Name = str('Label1'),
              Top = 16,
              Width = 291)))))),
  Events(
    Show = str('do('#13'  if( label([ExpCancelled],refExperimentSupport),'#13'    do('#13'      label([ExpCancelled],refExperimentSupport) := 0,'#13#13'      GuiControl([btnBack]),'#13'      GuiSet([Enabled],1),'#13'      '#13'      GuiControl([btnNext]),'#13'      GuiSet([Enabled],1),'#13'      GuiSet([Caption],[Finish]),'#13#13'{      GuiControl([pgPage1]),}'#13'{      GuiSet([Visible],0),}'#13#13'      GuiControl([pgPage2]),'#13'      GuiSet([Visible],0),'#13#13'      GuiControl([pgPage3]),'#13'      GuiSet([Visible],0),'#13#13'      GuiControl([pgPage4]),'#13'      GuiSet([Visible],1),'#13'     '#13'      GuiControl([MultiPage1]),'#13'      GuiSet([ActivePage],3)'#13'    ),'#13'    do('#13#13'      {Initialize the form}'#13'      '#13'      GuiControl([btnBack]),'#13'      GuiSet([Enabled],False),'#13'      '#13'      GuiControl([btnNext]),'#13'      GuiSet([Enabled],False),'#13'      GuiSet([Caption],[&Next >]),'#13#13'{      GuiControl([pgPage1]),}'#13'{      GuiSet([Visible],1),}'#13#13'      GuiControl([pgPage2]),'#13'      GuiSet([Visible],True),'#13#13'      GuiControl([pgPage3]),'#13'      GuiSet([Visible],0),'#13#13'      GuiControl([pgPage4]),'#13'      GuiSet([Visible],0),'#13'     '#13'      GuiControl([MultiPage1]),'#13'      GuiSet([ActivePage],1),'#13'      '#13'      {Load  the Experiment Settings from attributes from Experiment Support atom}'#13#13'      if( att( [method], refExperimentSupport)=0,'#13'        do('#13'          GuiControl([cobSimMethod],GuiSet([ItemIndex],1)),'#13'          GuiControl([cobSimMethod],GuiSet([Text],GuiGet([Items],1)))  '#13'         ),'#13'         do('#13'           GuiControl([cobSimMethod],GuiSet([ItemIndex],att( [method], refExperimentSupport))),'#13'           GuiControl([cobSimMethod],GuiSet([Text],GuiGet([Items],att( [method], refExperimentSupport))))          '#13'          )'#13'       ),      '#13'      '#13'      if( att( [runlength], refExperimentSupport) = 0,'#13'         GuiControl([vdsRunLength],GuiSet([Code],[hr(1)])),       '#13'         GuiControl([vdsRunLength],GuiSet([Code],textatt( [runlength], refExperimentSupport)))'#13'       ),'#13'      '#13'      if( att( [nrruns], refExperimentSupport)=0, '#13'        GuiControl([edNrRuns],GuiSet([Text],[5])), '#13'        GuiControl([edNrRuns],GuiSet([Text],string(att( [nrruns], refExperimentSupport))))        '#13'       ),'#13'      '#13'      GuiControl([vdsWarmUp],GuiSet([Code],textatt( [warmup], refExperimentSupport))),'#13'      '#13'      GuiControl([chbTerminatingCond],GuiSet([Checked],att( [usetermcond], refExperimentSupport))),'#13'            '#13'      GuiControl([vdsTerminatingCond],GuiSet([Code],'#13'        if( comparetext([0],textatt( [termcond], refExperimentSupport)),'#13'          [],'#13'          textatt( [termcond], refExperimentSupport)'#13'        )'#13'      )),'#13'        GuiControl([vdsRunStart],GuiSet([Code],'#13'        if( comparetext([0],textatt( [onstartrun], refExperimentSupport)),'#13'          [],'#13'          textatt( [onstartrun], refExperimentSupport)'#13'        )'#13'      )),  '#13'     GuiControl([vdsRunEnd],GuiSet([Code],'#13'        if( comparetext([0],textatt( [onendrun], refExperimentSupport)),'#13'          [],'#13'          textatt( [onendrun], refExperimentSupport)'#13'        )'#13'      )),'#13'        GuiControl([vdsWarmUpEnd],GuiSet([Code],'#13'        if( comparetext([0],textatt( [onendwarmup], refExperimentSupport)),'#13'          [],'#13'          textatt( [onendwarmup], refExperimentSupport)'#13'        )'#13'      )),'#13'      '#13'      GuiControl([meExpDescription],GuiSet([Lines],att( [expmemo], refExperimentSupport))),'#13'             '#13'      {Load the Statistics Settings from Experiment Support atom} '#13'      '#13'      GuiControl([tbStatistics],GuiSet([RowCount],nrows(refExperimentSupport))),'#13'      if( nCols(refExperimentSupport) > 0, {will now always be at least 4 because first row contains 4 experimentsettings}'#13'      '#13'{          GuiControl([tbStatistics],GuiSet([ColCount],nCols(refExperimentSupport))),}'#13'          {use nrstatcols instead of nrcols so the stats results won''t be copied too}'#13'          '#13'          GuiControl([tbStatistics],GuiSet([ColCount],att([nrstatcols],refExperimentSupport))),'#13'          GuiControl([tbStatistics],GuiSet([ColCount],4))'#13'      ),'#13'     '#13'      {Set the headers}'#13'      GuiControl([tbStatistics],GuiSet([Cells],0,0,[Name])),  '#13'      GuiControl([tbStatistics],GuiSet([Cells],0,1,[Type])),'#13'      '#13'      repeat( /(GuiControl([tbStatistics],GuiGet([ColCount]))-2, 2),'#13'        do('#13'           GuiControl([tbStatistics],GuiSet([Cells],0,count*2,[Name])),'#13'           GuiControl([tbStatistics],GuiSet([Cells],0,1+count*2,[Code]))       '#13'        )'#13'      ), '#13'          '#13'{      MatrixRepeat( nrows(refExperimentSupport), ncols(refExperimentSupport),}'#13'       {use nrstatcols instead of nrcols so the stats results won''t be copied too}'#13'       '#13'       MatrixRepeat( nrows(refExperimentSupport)-1, att([nrstatcols],refExperimentSupport),'#13'        do( {mcx and mcy are row- and columncounters}'#13'           GuiControl([tbStatistics],GuiSet([Cells],mcx, mcy-1,'#13'             do('#13'               if( mcy=2,'#13'                 if( cell(mcx+1,mcy,refExperimentSupport)=1,'#13'                   [Atom],'#13'                   [Group]'#13'                 ),'#13'                 if(CompareText( cell(mcx+1,mcy,refExperimentSupport,2) ,[0]),'#13'                   [],'#13'                   cell(mcx+1,mcy,refExperimentSupport,2)             '#13'                 )             '#13'               )           '#13'             )'#13'           ))'#13'        )'#13'      ),'#13'      '#13'      {Load Groups definitions}'#13'      GuiControl([tbGroups],GuiSet([RowCount],nrows(first(refExperimentSupport))+1)),'#13'      GuiControl([tbGroups],GuiSet([ColCount],nCols(first(refExperimentSupport)))),'#13'      '#13'      MatrixRepeat( nrows(first(refExperimentSupport)), ncols(first(refExperimentSupport)),'#13'        do( {mcx and mcy are row- and columncounters}'#13'           GuiControl([tbGroups],GuiSet([Cells],mcx, mcy-1,'#13'             do('#13'               if(CompareText( cell(mcx,mcy,first(refExperimentSupport),2) ,[0]),'#13'                   [],'#13'                   cell(mcx,mcy,first(refExperimentSupport),2)             '#13'                 )             '#13'             )'#13'           ))'#13'        )'#13'      ), '#13'     '#13'        '#13'     {Update the statistics overview table} '#13'     { GuiControl([tbStatsView]),}'#13'      GuiRun([Update])'#13#13'      {set Save Settings button}'#13'      {GuiControl([btnSaveSettings],GuiSet([Visible],False)),}'#13'      {GuiControl([btnSaveSettings],GuiSet([Enabled],False))}'#13'         '#13'    )'#13'  )      '#13')'#13),
    Update = str('do('#13' if( GuiControl([MultiPage1],GuiGet([ActivePage]))= 1,'#13'   do('#13'    '#13'      if( execstring(GuiControl([vdsRunLength],GuiGet([Code]))) <=0,'#13'         do('#13'            confirm(concat([Observation period must be > 0 seconds],lf,[Please change your entry])) '#13'          ),'#13'          do(           '#13'              if( or(not( IsNumeric( GuiControl([edNrRuns] ,GuiGet([Text])))), frac(value(GuiControl([edNrRuns], GuiGet([Text])))) <> 0 ),'#13'                 do('#13'                   confirm(concat([Number of runs must be an integer value, not text],lf,[Please change your entry]))'#13'                  ),'#13'                 do('#13'                   if(  value(GuiControl([edNrRuns] ,GuiGet([Text])))<= 0,         '#13'                     do('#13'                       confirm(concat([Number of runs must be > 0],lf,[Please change your entry]))'#13'                     ),'#13'                     do('#13#13'                      if( execstring(GuiControl([vdsWarmUp],GuiGet([Code]))) <0,'#13'                        do('#13'                          confirm(concat([Warm-up period must be >= 0 seconds],lf,[Please change your entry]))  '#13'                         )   '#13'                       )                                                   '#13'                      )  '#13'                  )'#13'                )'#13'              )                        '#13'           )              '#13'       ),'#13'    '#13'      {check if Next button should must be disabled or enabled}'#13'      if( and('#13'            GuiControl([cobSimMethod],GuiGet([ItemIndex])) > 0, '#13'            Execstring(GuiControl([vdsRunLength] ,GuiGet([Code])))> 0,'#13'            {IsNumeric( GuiControl([edRunlength] ,GuiGet([Text]))),}'#13'            {value(GuiControl([edRunlength] ,GuiGet([Text])))>0, }         '#13'            IsNumeric( GuiControl([edNrRuns] ,GuiGet([Text]))),'#13'            frac(value(GuiControl([edNrRuns], GuiGet([Text])))) = 0,'#13'            Execstring(GuiControl([vdsWarmUp] ,GuiGet([Code])))>= 0,'#13'            {IsNumeric( GuiControl([edWarmup] ,GuiGet([Text]))),}'#13'            value(GuiControl([edNrRuns] ,GuiGet([Text])))>0'#13'            {value(GuiControl([edWarmup] ,GuiGet([Text]))) >= 0}'#13'           { value(GuiControl([edRunlength] ,GuiGet([Text])))> value(GuiControl([edWarmup] ,GuiGet([Text]))) }'#13'           ),'#13'         do('#13'           GuiControl([btnNext],GuiSet([Enabled],True))      '#13'         ) ,'#13'         do('#13'           GuiControl([btnNext],GuiSet([Enabled],False))      '#13'         ) '#13'      )'#13'    ) '#13'  )'#13' )'#13)))