EDControl(EditForm:
  BorderIcons = set(SystemMenu),
  BorderStyle = Single,
  Caption = str('Advanced ASRS'),
  Height = 643,
  Left = 1600,
  Name = str('Advanced ASRS'),
  ShowHint = True,
  Top = 301,
  Visible = True,
  Width = 451,
  Controls(
    EDControl(Panel:
      Align = Bottom,
      Anchors = set(Left,Right,Bottom),
      BevelOuter = None,
      Caption = str(''),
      Height = 40,
      Left = 0,
      Name = str('Panel1'),
      TabOrder = 2,
      Top = 603,
      Width = 451,
      Controls(
        EDControl(Button:
          Caption = str('&Apply'),
          Left = 365,
          Name = str('btnApply'),
          TabOrder = 5,
          Top = 8,
          Events(
            Click = str('do('#13#13' {--Page 1 : General--} '#13#13' var([strOldName], vbString, []),'#13#13' strOldName := TextAtt([AliasName], GuiAtom),'#13#13' { Check for valid alias name to create registerfunctions }'#13' if('#13'  And('#13'   GuiControl([createAlias],GuiGet([Checked])),'#13'   not(GuiControl([cbUseAtomName],GuiGet([Checked])))'#13'  ),'#13'  do('#13'   if('#13'    comparetext(GuiControl([AliasName], GuiGet([Text])), [untitled]) = True,'#13'    do('#13'     msg([You can''t use "untitled" as alias name.], 1),'#13'     return(-1)'#13'    )'#13'   ),'#13'  '#13'   if('#13'    StringLength(GuiControl([AliasName], GuiGet([Text]))) = 0,'#13'    do('#13'     msg([The alias name needs at least 1 character.], 1),'#13'     return(-1)'#13'    )'#13'   ),'#13'   '#13'   if('#13'    and('#13'     functionexists(GuiControl([AliasName], GuiGet([Text]))) = True,'#13'     comparetext(GuiControl([AliasName], GuiGet([Text])), Att([AliasName], GuiAtom)) = False'#13'    ),'#13'    do('#13'     msg([The alias name defined is already in use for another function name.], 1),'#13'     return(-1)'#13'    )'#13'   )'#13'  )'#13' ),'#13#13' { Now we passed the checks, we can continue to update the [properties and to register the function...}'#13#13' {Save TextField}'#13' Name(GuiAtom) := GuiControl([AtomName],GuiGet([Text])),'#13' '#13' if('#13'  GuiControl([cbUseAtomName],GuiGet([Checked])),'#13'  TextAtt([AliasName],GuiAtom) := Name(GuiAtom),'#13'  TextAtt([AliasName],GuiAtom) := GuiControl([AliasName], GuiGet([Text]))'#13' ),'#13' '#13' {Save CheckBox}'#13' Att([createAlias],GuiAtom) := GuiControl([createAlias],GuiGet([Checked])),'#13' Att([UseAtomName], Guiatom) := GuiControl([cbUseAtomName],GuiGet([Checked])),'#13' '#13' { create aliasses if the checkbox was checked...}'#13' if('#13'  and('#13'   Att([createAlias], GuiAtom) = True,'#13'   comparetext(strOldName, [untitled]) = False'#13'  ),'#13'  do('#13'   { Unregister existing functions }'#13'   if(FunctionExists(strOldName),unregisterfunction(strOldName)),'#13'   if(FunctionExists(concat([set], strOldName)),unregisterfunction(concat([set], strOldName))),'#13'   if(FunctionExists(concat([ref], strOldName)),unregisterfunction(concat([ref], strOldName))),'#13'   { Execute the createfunctions attribute to register the functions. }'#13'   att([CreateFunctions],GuiAtom)'#13'  ),'#13'  do('#13'   { Unregister existing functions }'#13'   if(FunctionExists(strOldName),unregisterfunction(strOldName)),'#13'   if(FunctionExists(concat([set], strOldName)),unregisterfunction(concat([set], strOldName))),'#13'   if(FunctionExists(concat([ref], strOldName)),unregisterfunction(concat([ref], strOldName)))'#13'  )'#13' ),'#13' '#13' {--ASRS Trigger on reset--}'#13' SetExprAtt([asrs_ResetTrigger], GuiControl([TriggerOnReset], GuiGet([Code])), GuiAtom),'#13' '#13' {--Page 2 : Storage--}'#13#13' {--ASRS Rotation--}'#13' if( '#13' {--Is a number and is >= 0 and is < 360--}'#13'  and( '#13'   IsNumeric(GuiControl([efRotation], GuiGet([Text]))), '#13'   value(GuiControl([efRotation], GuiGet([Text]))) >= 0,'#13'   value(GuiControl([efRotation], GuiGet([Text]))) < 360   '#13'  ),'#13'  do('#13'   Att([asrs_rotation],GuiAtom) := Round(Value(GuiControl([efRotation],GuiGet([Text]))))'#13'  ),'#13'  do('#13'   Msg(concat([Rotation must be a numeric value >= 0° and < 360°],lf,[Please change your entry]), 3),'#13'   return '#13'  )  '#13' ),'#13#13' {--ASRS Z location--}'#13' if( '#13' {--Is a number--}'#13' IsNumeric(GuiControl([efZLoc], GuiGet([Text]))),'#13'  do('#13'   zloc(GuiAtom) := Round(Value(GuiControl([efZLoc],GuiGet([Text]))),2)'#13'  ),'#13'  do('#13'   Msg(concat([Z location of ASRS must be a numeric value],lf,[Please change your entry]), 3),'#13'   return '#13'  )  '#13' ),'#13' '#13' {--High Rise Rack Layout--}'#13' Case(GuiControl([rgRackPostions], GuiGet([ItemIndex])),'#13'  do('#13'   Att([hrr_left_exists], GuiAtom) := 1,'#13'   Guicontrol([cbShowContentLeftRack], GuiSet([Enabled], 1)),'#13'   Att([hrr_right_exists], GuiAtom) := 1,'#13'   Guicontrol([cbShowContentRightRack], GuiSet([Enabled], 1))'#13'  ),'#13'  do('#13'   Att([hrr_left_exists], GuiAtom) := 1,'#13'   Guicontrol([cbShowContentLeftRack], GuiSet([Enabled], 1)),'#13'   Att([hrr_right_exists], GuiAtom) := 0,'#13'   Guicontrol([cbShowContentRightRack], GuiSet([Enabled], 0))'#13'  ),'#13'  do('#13'   Att([hrr_left_exists], GuiAtom) := 0,'#13'   Guicontrol([cbShowContentLeftRack], GuiSet([Enabled], 0)),'#13'   Att([hrr_right_exists], GuiAtom) := 1,'#13'   Guicontrol([cbShowContentRightRack], GuiSet([Enabled], 1))'#13'  )'#13' ),'#13' '#13' {--High Rise Rack Dimensions--}'#13' if('#13'  and('#13'   IsNumeric(GuiControl([efRows], GuiGet([Text]))),'#13'   Abs(Frac(Value(GuiControl([efRows],GuiGet([Text]))))) = 0'#13'  ),'#13'  do( '#13'   Att([hrr_no_rows],GuiAtom) := Round(Value(GuiControl([efRows],GuiGet([Text]))))'#13'  ),'#13'  do('#13'   Msg(concat([Number of rows of rack(s) must be a numeric integer value],lf,[Please change your entry]), 3),'#13'   return '#13'  )'#13' ),'#13#13' {--High Rise Rack Dimensions--}'#13' if('#13'  and('#13'   IsNumeric(GuiControl([efCols], GuiGet([Text]))),'#13'   Abs(Frac(Value(GuiControl([efCols],GuiGet([Text]))))) = 0'#13'  ),'#13'  do( '#13'   Att([hrr_no_cols],GuiAtom) := Round(Value(GuiControl([efCols],GuiGet([Text]))))'#13'  ),'#13'  do('#13'   Msg(concat([Number of columns of rack(s) must be a numeric integer value],lf,[Please change your entry]), 3),'#13'   return '#13'  )'#13' ), '#13#13' {--High Rise Rack Sizes--}'#13' '#13' if( '#13' {--Is a number and is > 0--}'#13'  and( '#13'   IsNumeric(GuiControl([efBinLocationsHeight], GuiGet([Text]))), '#13'   value(GuiControl([efBinLocationsHeight], GuiGet([Text]))) > 0'#13'  ),'#13'  do('#13'   Att([hrr_row_size],GuiAtom)     := Round(Value(GuiControl([efBinLocationsHeight],GuiGet([Text]))),2)'#13'  ),'#13'  do('#13'   Msg(concat([Height (z) of bin location (m) must be a numeric value > 0],lf,[Please change your entry]), 3),'#13'   return '#13'  )  '#13' ),'#13#13' if( '#13' {--Is a number and is > 0--}'#13'  and( '#13'   IsNumeric(GuiControl([efBinLocationsWidth], GuiGet([Text]))), '#13'   value(GuiControl([efBinLocationsWidth], GuiGet([Text]))) > 0'#13'  ),'#13'  do('#13'   Att([hrr_col_size],GuiAtom)     := Round(Value(GuiControl([efBinLocationsWidth],GuiGet([Text]))),2)'#13'  ),'#13'  do('#13'   Msg(concat([Width (x) of bin location (m) must be a numeric value > 0],lf,[Please change your entry]), 3),'#13'   return '#13'  )  '#13' ),'#13' '#13' if( '#13' {--Is a number and is > 0--}'#13'  and( '#13'   IsNumeric(GuiControl([efBinLocationsDepth], GuiGet([Text]))), '#13'   value(GuiControl([efBinLocationsDepth], GuiGet([Text]))) > 0'#13'  ),'#13'  do('#13'   Att([hrr_depth],GuiAtom)        := Round(Value(GuiControl([efBinLocationsDepth],GuiGet([Text]))),2)'#13'  ),'#13'  do('#13'   Msg(concat([Depth (y) of bin location (m) must be a numeric value > 0],lf,[Please change your entry]), 3),'#13'   return '#13'  )  '#13' ),'#13' '#13' if( '#13' {--Is a number and is > 0--}'#13'  and( '#13'   IsNumeric(GuiControl([efAisleWidth], GuiGet([Text]))), '#13'   value(GuiControl([efAisleWidth], GuiGet([Text]))) > 0'#13'  ),'#13'  if('#13'   Round(Value(GuiControl([efAisleWidth],GuiGet([Text]))),2) >= Att([hrr_depth],GuiAtom),'#13'   do('#13'    Att([asrs_aisle_width],GuiAtom) := Round(Value(GuiControl([efAisleWidth],GuiGet([Text]))),2)'#13'   ),'#13'   do('#13'    Msg(concat([Width (y) of SRM aisle (m) must be >= depth (y) of bin location],lf,[Please change your entry]), 3),'#13'    return '#13'   ) '#13'  ),'#13'  do('#13'   Msg(concat([Width (y) of SRM aisle (m) must be a numeric value > 0],lf,[Please change your entry]), 3),'#13'   return '#13'  ) '#13' ),'#13' '#13' {--Page 3 : Inbound--}'#13' '#13' {--Inbound Side--}'#13' Att([input_side],GuiAtom) := GuiControl([rgInputSide], GuiGet([ItemIndex])),'#13#13' {--Inbound Position--}'#13' if('#13'  and('#13'   IsNumeric(GuiControl([efInputRow], GuiGet([Text]))),'#13'   Abs(Frac(Value(GuiControl([efInputRow],GuiGet([Text]))))) = 0'#13'  ),'#13'  do( '#13'   Att([input_row],GuiAtom) := Round(Value(GuiControl([efInputRow],GuiGet([Text]))))'#13'  ),'#13'  do('#13'   Msg(concat([Row of inbound position must be a numeric integer value],lf,[Please change your entry]), 3),'#13'   return '#13'  )'#13' ),'#13#13' if('#13'  and('#13'   IsNumeric(GuiControl([efInputCol], GuiGet([Text]))),'#13'   Abs(Frac(Value(GuiControl([efInputCol],GuiGet([Text]))))) = 0'#13'  ),'#13'  do( '#13'   Att([input_col],GuiAtom) := Round(Value(GuiControl([efInputCol],GuiGet([Text]))))'#13'  ),'#13'  do('#13'   Msg(concat([Column of inbound position must be a numeric integer value],lf,[Please change your entry]), 3),'#13'   return '#13'  )'#13' ), '#13' '#13' {--Input Strategy--}'#13' SetExprAtt([InStrategy],GuiControl([seInputStrategy],GuiGet([String])),vtp(Att([input_ref],GuiAtom))),'#13#13' {--Inbound Triggers--}'#13' SetExprAtt([EntryTrigger],GuiControl([scbInputTriggerOnEntry],GuiGet([ResultCode])),vtp(Att([input_ref],GuiAtom))),'#13' SetExprAtt([ExitTrigger],GuiControl([scbInputTriggerOnExit],GuiGet([ResultCode])),vtp(Att([input_ref],GuiAtom))),'#13' '#13' {--Page 4 : Outbound--}'#13' '#13' {--Outbound Side--}'#13' Att([output_side],GuiAtom) := GuiControl([rgOutputSide], GuiGet([ItemIndex])),'#13#13' {--Outbound Position--}'#13' if('#13'  and('#13'   IsNumeric(GuiControl([efOutputRow], GuiGet([Text]))),'#13'   Abs(Frac(Value(GuiControl([efOutputRow],GuiGet([Text]))))) = 0'#13'  ),'#13'  do( '#13'   Att([output_row],GuiAtom) := Round(Value(GuiControl([efOutputRow],GuiGet([Text]))))'#13'  ),'#13'  do('#13'   Msg(concat([Row of outbound position must be a numeric integer value],lf,[Please change your entry]), 3),'#13'   return '#13'  )'#13' ),'#13#13' if('#13'  and('#13'   IsNumeric(GuiControl([efOutputCol], GuiGet([Text]))),'#13'   Abs(Frac(Value(GuiControl([efOutputCol],GuiGet([Text]))))) = 0'#13'  ),'#13'  do( '#13'   Att([output_col],GuiAtom) := Round(Value(GuiControl([efOutputCol],GuiGet([Text]))))'#13'  ),'#13'  do('#13'   Msg(concat([Column of outbound position must be a numeric integer value],lf,[Please change your entry]), 3),'#13'   return '#13'  )'#13' ),'#13#13' {--SendTo--}'#13' SetExprAtt([SendTo],GuiControl([seSendTo],GuiGet([String])),vtp(Att([output_ref],GuiAtom))),'#13#13' {--Outbound Triggers--}'#13' SetExprAtt([EntryTrigger],GuiControl([scbOutputTriggerOnEntry],GuiGet([ResultCode])),vtp(Att([output_ref],GuiAtom))),'#13' SetExprAtt([ExitTrigger],GuiControl([scbOutputTriggerOnExit],GuiGet([ResultCode])),vtp(Att([output_ref],GuiAtom))),'#13#13' {--Page 5 : Motion--}'#13' '#13' {--SRM Movement Strategy--}'#13' Att([srm_move_strategy], GuiAtom) := GuiControl([rgMovementStrategy], GuiGet([ItemIndex])),'#13' '#13' {--SRM speed parameters--}'#13' if('#13'  ExecScript(GuiControl([scb_xSpeed],GuiGet([ResultCode]))) > 0,'#13'  do('#13'   SetExprAtt([srm_speed_x],GuiControl([scb_xSpeed],GuiGet([ResultCode])),GuiAtom)'#13'  ),'#13'  do('#13'   Msg(concat([Speed (m/s) of SRM must be > 0], lf, [Please change your entry]), 3),'#13'   return'#13'  )'#13' ),'#13#13' if('#13'  ExecScript(GuiControl([scb_xAcceleration],GuiGet([ResultCode]))) > 0,'#13'  do('#13'   SetExprAtt([srm_acc_x],GuiControl([scb_xAcceleration],GuiGet([ResultCode])),GuiAtom)'#13'  ),'#13'  do('#13'   Msg(concat([Acceleration (m/s²) of SRM must be > 0], lf, [Please change your entry]), 3),'#13'   return'#13'  )'#13' ),'#13#13' if('#13'  ExecScript(GuiControl([scb_xDeceleration],GuiGet([ResultCode]))) > 0,'#13'  do('#13'   SetExprAtt([srm_dec_x],GuiControl([scb_xDeceleration],GuiGet([ResultCode])),GuiAtom)'#13'  ),'#13'  do('#13'   Msg(concat([Deceleration (m/s²) of SRM must be > 0], lf, [Please change your entry]), 3),'#13'   return'#13'  )'#13' ),'#13#13' {--Hoist speed parameters--}'#13' if('#13'  ExecScript(GuiControl([scb_zSpeed],GuiGet([ResultCode]))) > 0,'#13'  do('#13'   SetExprAtt([srm_speed_z],GuiControl([scb_zSpeed],GuiGet([ResultCode])),GuiAtom)'#13'  ),'#13'  do('#13'   Msg(concat([Speed (m/s) of hoist must be > 0], lf, [Please change your entry]), 3),'#13'   return'#13'  )'#13' ),'#13#13' if('#13'  ExecScript(GuiControl([scb_zAcceleration],GuiGet([ResultCode]))) > 0,'#13'  do('#13'   SetExprAtt([srm_acc_z],GuiControl([scb_zAcceleration],GuiGet([ResultCode])),GuiAtom)'#13'  ),'#13'  do('#13'   Msg(concat([Acceleration (m/s²) of hoist must be > 0], lf, [Please change your entry]), 3),'#13'   return'#13'  )'#13' ),'#13#13' if('#13'  ExecScript(GuiControl([scb_zDeceleration],GuiGet([ResultCode]))) > 0,'#13'  do('#13'   SetExprAtt([srm_dec_z],GuiControl([scb_zDeceleration],GuiGet([ResultCode])),GuiAtom)'#13'  ),'#13'  do('#13'   Msg(concat([Deceleration (m/s²) of hoist must be > 0], lf, [Please change your entry]), 3),'#13'   return'#13'  )'#13' ),'#13' '#13' {--Shuttle speed parameters--}'#13' if('#13'  ExecScript(GuiControl([scb_ySpeed],GuiGet([ResultCode]))) > 0,'#13'  do('#13'   SetExprAtt([srm_speed_y],GuiControl([scb_ySpeed],GuiGet([ResultCode])),GuiAtom)'#13'  ),'#13'  do('#13'   Msg(concat([Speed (m/s) of shuttle must be > 0], lf, [Please change your entry]), 3),'#13'   return'#13'  )'#13' ),'#13#13' if('#13'  ExecScript(GuiControl([scb_yAcceleration],GuiGet([ResultCode]))) > 0,'#13'  do('#13'   SetExprAtt([srm_acc_y],GuiControl([scb_yAcceleration],GuiGet([ResultCode])),GuiAtom)'#13'  ),'#13'  do('#13'   Msg(concat([Acceleration (m/s²) of shuttle must be > 0], lf, [Please change your entry]), 3),'#13'   return'#13'  )'#13' ),'#13#13' if('#13'  ExecScript(GuiControl([scb_yDeceleration],GuiGet([ResultCode]))) > 0,'#13'  do('#13'   SetExprAtt([srm_dec_y],GuiControl([scb_yDeceleration],GuiGet([ResultCode])),GuiAtom)'#13'  ),'#13'  do('#13'   Msg(concat([Deceleration (m/s²) of shuttle must be > 0], lf, [Please change your entry]), 3),'#13'   return'#13'  )'#13' ),'#13' '#13' {--Page 6 : Load--}'#13#13' {--SRM Load and Unload times--}'#13' '#13' {--ASRS Pick Order--}'#13' Att([asrs_pick_order], GuiAtom) := GuiControl([rgPickOrder], GuiGet([ItemIndex])),'#13#13' {--SRM Movement Strategy Code--}'#13' Case('#13'  GuiControl([rgPickOrder], GuiGet([ItemIndex])),'#13'  SetExprAtt([asrs_pick_order_code], GuiControl([rgPickOrder], String(GuiGet([ItemIndex]))),GuiAtom),'#13'  SetExprAtt([asrs_pick_order_code], GuiControl([rgPickOrder], String(GuiGet([ItemIndex]))),GuiAtom),'#13'  SetExprAtt([asrs_pick_order_code], GuiControl([rgPickOrder], String(GuiGet([ItemIndex]))),GuiAtom),'#13'  SetExprAtt([asrs_pick_order_code], GuiControl([rgPickOrder], String(GuiGet([ItemIndex]))),GuiAtom),'#13'  SetExprAtt([asrs_pick_order_code], GuiControl([rgPickOrder], String(GuiGet([ItemIndex]))),GuiAtom),'#13'  SetExprAtt([asrs_pick_order_code], GuiControl([smeConditionalOrderCode],GuiGet([String])),GuiAtom),'#13'  SetExprAtt([asrs_pick_order_code], Advanced_ASRS_get_order_strategy(7), GuiAtom)'#13' ),'#13' '#13' if('#13'  ExecScript(GuiControl([efInputLoadtime], GuiGet([Code]))) >= 0,'#13'  do('#13'   SetExprAtt([srm_input_loadtime], GuiControl([efInputLoadtime], GuiGet([Code])), GuiAtom)'#13'  ),'#13'  do('#13'   Msg(concat([Load time from inbound (s) must be >= 0], lf, [Please change your entry]), 3),'#13'   return'#13'  )  '#13' ),  '#13#13' if('#13'  ExecScript(GuiControl([efRackUnloadtime], GuiGet([Code]))) >= 0,'#13'  do('#13'   SetExprAtt([srm_hrr_unloadtime], GuiControl([efRackUnloadtime], GuiGet([Code])), GuiAtom)'#13'  ),'#13'  do('#13'   Msg(concat([Unload time to rack (s) must be >= 0], lf, [Please change your entry]), 3),'#13'   return'#13'  )  '#13' ),  '#13#13' if('#13'  ExecScript(GuiControl([efRackLoadtime], GuiGet([Code]))) >= 0,'#13'  do('#13'   SetExprAtt([srm_hrr_loadtime], GuiControl([efRackLoadtime], GuiGet([Code])), GuiAtom)'#13'  ),'#13'  do('#13'   Msg(concat([Load time from rack (s) must be >= 0], lf, [Please change your entry]), 3),'#13'   return'#13'  )  '#13' ),  '#13#13' if('#13'  ExecScript(GuiControl([efOutputUnloadtime], GuiGet([Code]))) >= 0,'#13'  do('#13'   SetExprAtt([srm_output_unloadtime], GuiControl([efOutputUnloadtime], GuiGet([Code])), GuiAtom)'#13'  ),'#13'  do('#13'   Msg(concat([Unload time to outbound (s) must be >= 0], lf, [Please change your entry]), 3),'#13'   return'#13'  )'#13' ),'#13#13' {--Page 7 : Pick Strategy--}'#13#13' {--ASRS Pick Strategy--}'#13' Att([asrs_pick_strategy], GuiAtom) := GuiControl([rgPickStrategy], GuiGet([ItemIndex])),'#13#13' {--Rack Pick Label--}'#13' SetExprAtt([asrs_hrr_rack_to_pick],GuiControl([PickOfRack],GuiGet([String])),GuiAtom),'#13#13' {--Row Pick Label--}'#13' SetExprAtt([asrs_hrr_row_to_pick],GuiControl([PickOfrow],GuiGet([ResultCode])),GuiAtom),'#13'  '#13' {--Column Pick Label--}'#13' SetExprAtt([asrs_hrr_col_to_pick],GuiControl([PickOfColumn],GuiGet([ResultCode])),GuiAtom),'#13#13' {--Page 8 : Place Strategy--}'#13'  '#13' {--ASRS Place Strategy--}'#13' Att([asrs_place_strategy], GuiAtom) := GuiControl([rgPlaceStrategy], GuiGet([ItemIndex])),'#13#13' {--Rack Place Label--}'#13' SetExprAtt([asrs_hrr_rack_to_place],GuiControl([PutInRack],GuiGet([String])),GuiAtom),'#13#13' {--Row Place Label--}'#13' SetExprAtt([asrs_hrr_row_to_place],GuiControl([PutInrow],GuiGet([ResultCode])),GuiAtom),'#13'  '#13' {--Column Place Label--}'#13' SetExprAtt([asrs_hrr_col_to_place],GuiControl([PutInColumn],GuiGet([ResultCode])),GuiAtom),'#13#13' {--Page 9 : Visualization--}'#13#13' {--2D Icon--}'#13' Icon(GuiAtom) := GuiControl([2DIcon],GuiGet([Icon])),'#13' '#13' {--3D Icon--}'#13' Att([asrs_3DIcon],GuiAtom) := GuiControl([3DIcon],GuiGet([ItemIndex])),'#13' '#13' {--Hide Content of Racks--}'#13' Att([hrr_left_show_content],GuiAtom) := GuiControl([cbShowContentLeftRack],GuiGet([Checked])),'#13' Att([hrr_right_show_content],GuiAtom) := GuiControl([cbShowContentRightRack],GuiGet([Checked])),'#13' '#13' {--Execute immediately Show Content of Rack--}'#13' if(Att([hrr_left_show_content],GuiAtom),'#13'  SetSetting(saHide3DContents, 0, vtp(Att([hrr_left_ref],GuiAtom))),'#13'  SetSetting(saHide3DContents, 1, vtp(Att([hrr_left_ref],GuiAtom)))'#13' ),'#13' if(Att([hrr_right_show_content],GuiAtom),'#13'  SetSetting(saHide3DContents, 0, vtp(Att([hrr_right_ref],GuiAtom))),'#13'  SetSetting(saHide3DContents, 1, vtp(Att([hrr_right_ref],GuiAtom)))'#13' ),'#13#13' {--Color--}'#13' Color(GuiAtom) := GuiControl([SRM1Color],GuiGet([Color])),      '#13' Color(vtp(Att([srm_srm_ref],GuiAtom))) := GuiControl([SRM2Color],GuiGet([Color])),      '#13' Color(vtp(Att([hrr_left_ref],GuiAtom))) := GuiControl([RackColor],GuiGet([Color])),      '#13' Color(vtp(Att([hrr_right_ref],GuiAtom))) := GuiControl([RackColor],GuiGet([Color]))      '#13#13')'#13))),
        EDControl(Button:
          Cancel = True,
          Caption = str('&Cancel'),
          Left = 275,
          Name = str('btnCancel'),
          TabOrder = 4,
          Top = 8,
          Events(
            Click = str('Do('#13' GuiDestroy,'#13' GuiUnregister([Advanced ASRS])'#13')'#13))),
        EDControl(Button:
          Caption = str('&Ok'),
          Default = True,
          Left = 185,
          Name = str('btnOk'),
          TabOrder = 3,
          Top = 8,
          Events(
            Click = str('Do('#13' GuiControl([btnApply]),'#13' GuiRun([Click]),'#13' GuiDestroy,'#13' GuiUnregister([Advanced ASRS])'#13')'#13))),
        EDControl(Button:
          Caption = str('&Help'),
          Left = 8,
          Name = str('btnHelp'),
          TabOrder = 1,
          Top = 8,
          Events(
            Click = str('Help(PDir([HELP\ED Help.hlp]), [Advanced ASRS])'#13))),
        EDControl(Button:
          Caption = str('Rebuild'),
          Left = 96,
          Name = str('BtRebuild'),
          TabOrder = 2,
          Top = 8,
          Events(
            Click = str('do('#13' {--Update variable before rebuild--}'#13' GuiControl([btnApply]),'#13' GuiRun([Click]),'#13#13' {--Rebuild whole ASRS--}'#13' Advanced_ASRS_Rebuild(GuiAtom),'#13' '#13' {--Restructure OnReset--}'#13' Reset,'#13' Reset'#13')'#13))))),
    EDControl(MultiPage:
      ActivePage = 1,
      Align = Client,
      Anchors = set(Left,Top,Right,Bottom),
      Height = 603,
      Left = 0,
      Name = str('MultiPage1'),
      TabOrder = 1,
      Top = 0,
      Width = 451,
      Controls(
        EDControl(SinglePage:
          Caption = str('General'),
          Name = str('SinglePage_General'),
          PageIndex = 1,
          Controls(
            EDControl(GroupBox:
              Caption = str(''),
              Height = 56,
              Left = 8,
              Name = str('GroupBox1'),
              TabOrder = 1,
              Top = 8,
              Width = 426,
              Controls(
                EDControl(Edit:
                  Height = 21,
                  Left = 188,
                  Name = str('AtomName'),
                  TabOrder = 1,
                  Top = 18,
                  Width = 225),
                EDControl(Label:
                  Caption = str('Atom name:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('StaticText1'),
                  Top = 24,
                  Width = 56))),
            EDControl(GroupBox:
              Caption = str('Alias'),
              Height = 128,
              Left = 8,
              Name = str('GroupBox2'),
              TabOrder = 2,
              Top = 80,
              Width = 426,
              Controls(
                EDControl(CheckBox:
                  Caption = str(''),
                  Left = 188,
                  Name = str('cbUseAtomName'),
                  TabOrder = 2,
                  Top = 63,
                  Events(
                    Change = str('Guicontrol([AliasName], GuiSet([Enabled], Not(GuiControl([cbUseAtomName], GuiGet([Checked])))))'#13))),
                EDControl(Edit:
                  Enabled = False,
                  Height = 21,
                  Left = 188,
                  Name = str('AliasName'),
                  TabOrder = 3,
                  Top = 91,
                  Width = 225),
                EDControl(CheckBox:
                  Caption = str(''),
                  Left = 188,
                  Name = str('CreateAlias'),
                  TabOrder = 1,
                  Top = 31,
                  Events(
                    Change = str('do('#13' Guicontrol([cbUseAtomName], GuiSet([Enabled], GuiControl([CreateAlias], GuiGet([Checked])))),'#13' Guicontrol([AliasName], GuiSet([Enabled], GuiControl([CreateAlias], GuiGet([Checked]))))'#13')'#13))),
                EDControl(Label:
                  Caption = str('Alias name:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('StaticText4'),
                  Top = 95,
                  Width = 54),
                EDControl(Label:
                  Caption = str('Use atom name:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('StaticText3'),
                  Top = 63,
                  Width = 77),
                EDControl(Label:
                  Caption = str('Create alias:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('StaticText2'),
                  Top = 31,
                  Width = 58))),
            EDControl(GroupBox:
              Caption = str('Triggers'),
              Height = 56,
              Left = 8,
              Name = str('GroupBox122'),
              TabOrder = 3,
              Top = 224,
              Width = 426,
              Controls(
                EDControl(ScriptEdit:
                  Left = 188,
                  Name = str('TriggerOnReset'),
                  TabOrder = 1,
                  Top = 20,
                  Width = 225),
                EDControl(Label:
                  Caption = str('Trigger on reset:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('StaticText16'),
                  Top = 23,
                  Width = 77))))),
        EDControl(SinglePage:
          Caption = str('Storage'),
          Name = str('SinglePage_Storag'),
          PageIndex = 2,
          Controls(
            EDControl(GroupBox:
              Caption = str('High Rise Racks'),
              Height = 561,
              Left = 8,
              Name = str('gbHighRiseRacks'),
              TabOrder = 1,
              Top = 8,
              Width = 425,
              Controls(
                EDControl(RadioGroup:
                  Caption = str('Location'),
                  ItemIndex = 1,
                  Items = str('1. Both sides of SRM'#13#10'2. Left side of SRM only'#13#10'3. Right side of SRM only'#13#10),
                  Left = 16,
                  Name = str('rgRackPostions'),
                  TabOrder = 1,
                  Top = 16,
                  Width = 393,
                  Events(
                    Change = str('{--Show Rack Content--}'#13'Case(GuiControl([rgRackPostions], GuiGet([ItemIndex])),'#13' do('#13'  Guicontrol([cbShowContentLeftRack], GuiSet([Enabled], 1)),'#13'  Guicontrol([cbShowContentRightRack], GuiSet([Enabled], 1))'#13' ),'#13' do('#13'  Guicontrol([cbShowContentLeftRack], GuiSet([Enabled], 1)),'#13'  Guicontrol([cbShowContentRightRack], GuiSet([Enabled], 0))'#13' ),'#13' do('#13'  Guicontrol([cbShowContentLeftRack], GuiSet([Enabled], 0)),'#13'  Guicontrol([cbShowContentRightRack], GuiSet([Enabled], 1))'#13' )'#13')'#13))),
                EDControl(GroupBox:
                  Caption = str('Dimensions'),
                  Height = 97,
                  Left = 16,
                  Name = str('gbRackDimensions'),
                  TabOrder = 4,
                  Top = 208,
                  Width = 393,
                  Controls(
                    EDControl(Edit:
                      Height = 21,
                      Left = 272,
                      Name = str('efRows'),
                      TabOrder = 1,
                      Text = str('10'),
                      Top = 24,
                      Width = 105),
                    EDControl(Edit:
                      Height = 21,
                      Left = 272,
                      Name = str('efCols'),
                      TabOrder = 2,
                      Text = str('20'),
                      Top = 56,
                      Width = 105),
                    EDControl(Label:
                      Caption = str('Number of colums:'),
                      Color = -16777208,
                      Height = 13,
                      Left = 16,
                      Name = str('StaticText6'),
                      Top = 55,
                      Width = 88),
                    EDControl(Label:
                      Caption = str('Number of rows:'),
                      Color = -16777208,
                      Height = 13,
                      Left = 16,
                      Name = str('StaticText5'),
                      Top = 23,
                      Width = 77))),
                EDControl(Edit:
                  Height = 21,
                  Left = 288,
                  Name = str('efRotation'),
                  TabOrder = 3,
                  Text = str('0'),
                  Top = 176,
                  Width = 105),
                EDControl(GroupBox:
                  Caption = str('Sizes'),
                  Height = 161,
                  Left = 16,
                  Name = str('bgSizes'),
                  TabOrder = 5,
                  Top = 320,
                  Width = 393,
                  Controls(
                    EDControl(Edit:
                      Height = 21,
                      Left = 272,
                      Name = str('efBinLocationsHeight'),
                      TabOrder = 1,
                      Text = str('1'),
                      Top = 24,
                      Width = 105),
                    EDControl(Edit:
                      Height = 21,
                      Left = 272,
                      Name = str('efBinLocationsWidth'),
                      TabOrder = 2,
                      Text = str('1'),
                      Top = 56,
                      Width = 105),
                    EDControl(Edit:
                      Height = 21,
                      Left = 272,
                      Name = str('efBinLocationsDepth'),
                      TabOrder = 3,
                      Text = str('1'),
                      Top = 88,
                      Width = 105),
                    EDControl(Edit:
                      Height = 21,
                      Left = 272,
                      Name = str('efAisleWidth'),
                      TabOrder = 4,
                      Text = str('1'),
                      Top = 120,
                      Width = 105),
                    EDControl(Label:
                      Caption = str('Width (y) of SRM aisle [m]:'),
                      Color = -16777208,
                      Height = 13,
                      Left = 16,
                      Name = str('StaticText11'),
                      Top = 120,
                      Width = 125),
                    EDControl(Label:
                      Caption = str('Depth (y) of bin locations [m]:'),
                      Color = -16777208,
                      Height = 13,
                      Left = 16,
                      Name = str('StaticText10'),
                      Top = 88,
                      Width = 137),
                    EDControl(Label:
                      Caption = str('Width (x) of bin locations [m]:'),
                      Color = -16777208,
                      Height = 13,
                      Left = 16,
                      Name = str('StaticText9'),
                      Top = 56,
                      Width = 136),
                    EDControl(Label:
                      Caption = str('Height (z) of bin locations [m]:'),
                      Color = -16777208,
                      Height = 13,
                      Left = 16,
                      Name = str('StaticText8'),
                      Top = 24,
                      Width = 139))),
                EDControl(Edit:
                  Height = 21,
                  Left = 288,
                  Name = str('efZLoc'),
                  TabOrder = 2,
                  Text = str('0'),
                  Top = 136,
                  Width = 105),
                EDControl(GroupBox:
                  Caption = str('Restrictions'),
                  Height = 49,
                  Left = 16,
                  Name = str('gbRackRestrictions'),
                  TabOrder = 6,
                  Top = 496,
                  Width = 393,
                  Controls(
                    EDControl(Button:
                      Caption = str('Edit left rack'),
                      Left = 214,
                      Name = str('btLeftRack'),
                      TabOrder = 1,
                      Top = 16,
                      Events(
                        Click = str('if('#13' Att([hrr_left_exists],GuiAtom),'#13' EditTable(vtp(Att([hrr_left_ref],GuiAtom))),'#13' Msg([No left high rise rack currently existing.])'#13')'#13))),
                    EDControl(Button:
                      Caption = str('Edit right rack'),
                      Left = 302,
                      Name = str('btRightRack'),
                      TabOrder = 2,
                      Top = 16,
                      Events(
                        Click = str('if('#13' Att([hrr_right_exists],GuiAtom),'#13' EditTable(vtp(Att([hrr_right_ref],GuiAtom))),'#13' Msg([No right high rise rack currently existing.])'#13')'#13))),
                    EDControl(Label:
                      Caption = str('Edit -1 for non available bin locations:'),
                      Color = -16777208,
                      Height = 13,
                      Left = 16,
                      Name = str('StaticText43'),
                      Top = 21,
                      Width = 176))),
                EDControl(Label:
                  Caption = str('Rotation [°]:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 16,
                  Name = str('StaticText7'),
                  Top = 177,
                  Width = 56),
                EDControl(Label:
                  Caption = str('Z location [m]:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 16,
                  Name = str('StaticText72'),
                  Top = 137,
                  Width = 67))))),
        EDControl(SinglePage:
          Caption = str('Inbound'),
          Name = str('SinglePage_Inbound'),
          PageIndex = 3,
          Controls(
            EDControl(GroupBox:
              Caption = str('Position'),
              Left = 8,
              Name = str('gbInboundLocation'),
              TabOrder = 2,
              Top = 112,
              Width = 425,
              Controls(
                EDControl(Edit:
                  Height = 21,
                  Left = 304,
                  Name = str('efInputRow'),
                  TabOrder = 1,
                  Text = str('1'),
                  Top = 24,
                  Width = 105),
                EDControl(Edit:
                  Height = 21,
                  Left = 304,
                  Name = str('efInputCol'),
                  TabOrder = 2,
                  Text = str('0'),
                  Top = 64,
                  Width = 105),
                EDControl(Label:
                  Caption = str('Column:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('StaticText13'),
                  Top = 64,
                  Width = 38),
                EDControl(Label:
                  Caption = str('Row:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('StaticText12'),
                  Top = 24,
                  Width = 25))),
            EDControl(GroupBox:
              Caption = str('Triggers'),
              Height = 104,
              Left = 8,
              Name = str('gbInboundTriggers'),
              TabOrder = 5,
              Top = 312,
              Width = 426,
              Controls(
                EDControl(SyntaxComboBox:
                  Height = 24,
                  Left = 188,
                  Name = str('scbInputTriggerOnExit'),
                  TabOrder = 2,
                  Top = 56,
                  Width = 225),
                EDControl(SyntaxComboBox:
                  Height = 24,
                  Left = 188,
                  Name = str('scbInputTriggerOnEntry'),
                  TabOrder = 1,
                  Top = 24,
                  Width = 225),
                EDControl(Label:
                  Caption = str('Trigger on exit:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('StaticText15'),
                  Top = 55,
                  Width = 70),
                EDControl(Label:
                  Caption = str('Trigger on entry:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('StaticText14'),
                  Top = 23,
                  Width = 77))),
            EDControl(GroupBox:
              Caption = str('Settings'),
              Height = 65,
              Left = 8,
              Name = str('GroupBox3'),
              TabOrder = 3,
              Top = 232,
              Width = 425,
              Controls(
                EDControl(Label:
                  Caption = str('Input strategy:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('StaticText34'),
                  Top = 24,
                  Width = 67))),
            EDControl(RadioGroup:
              Caption = str('Location'),
              Height = 89,
              ItemIndex = 1,
              Items = str('1. Left side of aisle'#13#10'2. Right side of aisle'#13#10),
              Left = 8,
              Name = str('rgInputSide'),
              TabOrder = 1,
              Top = 8,
              Width = 425),
            EDControl(SmartEdit:
              Left = 196,
              Lines = str(''),
              Name = str('seInputStrategy'),
              String = str('{.~1|.}~1'),
              TabOrder = 4,
              Top = 257,
              Width = 225))),
        EDControl(SinglePage:
          Caption = str('Outbound'),
          Name = str('SinglePage_Outbound'),
          PageIndex = 4,
          Controls(
            EDControl(GroupBox:
              Caption = str('Position'),
              Left = 8,
              Name = str('gbInboundLocation2'),
              TabOrder = 2,
              Top = 112,
              Width = 425,
              Controls(
                EDControl(Edit:
                  Height = 21,
                  Left = 304,
                  Name = str('efOutputRow'),
                  TabOrder = 1,
                  Text = str('1'),
                  Top = 24,
                  Width = 105),
                EDControl(Edit:
                  Height = 21,
                  Left = 304,
                  Name = str('efOutputCol'),
                  TabOrder = 2,
                  Text = str('0'),
                  Top = 64,
                  Width = 105),
                EDControl(Label:
                  Caption = str('Column:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('StaticText132'),
                  Top = 64,
                  Width = 38),
                EDControl(Label:
                  Caption = str('Row:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('StaticText122'),
                  Top = 24,
                  Width = 25))),
            EDControl(GroupBox:
              Caption = str('Triggers'),
              Height = 104,
              Left = 8,
              Name = str('gbOutboundTriggers'),
              TabOrder = 5,
              Top = 312,
              Width = 426,
              Controls(
                EDControl(SyntaxComboBox:
                  Height = 24,
                  Left = 188,
                  Name = str('scbOutputTriggerOnEntry'),
                  TabOrder = 1,
                  Top = 24,
                  Width = 225),
                EDControl(SyntaxComboBox:
                  Height = 24,
                  Left = 188,
                  Name = str('scbOutputTriggerOnExit'),
                  TabOrder = 2,
                  Top = 56,
                  Width = 225),
                EDControl(Label:
                  Caption = str('Trigger on exit:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('StaticText18'),
                  Top = 55,
                  Width = 70),
                EDControl(Label:
                  Caption = str('Trigger on entry:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('StaticText17'),
                  Top = 23,
                  Width = 77))),
            EDControl(GroupBox:
              Caption = str('Settings'),
              Height = 65,
              Left = 8,
              Name = str('GroupBox32'),
              TabOrder = 3,
              Top = 232,
              Width = 425,
              Controls(
                EDControl(Label:
                  Caption = str('Send to:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('StaticText35'),
                  Top = 24,
                  Width = 40))),
            EDControl(RadioGroup:
              Caption = str('Location'),
              Height = 89,
              ItemIndex = 2,
              Items = str('1. Left side of aisle'#13#10'2. Right side of aisle'#13#10),
              Left = 8,
              Name = str('rgOutputSide'),
              TabOrder = 1,
              Top = 8,
              Width = 425),
            EDControl(SmartEdit:
              Left = 196,
              Lines = str(''),
              Name = str('seSendTo'),
              String = str('{.~1|.}~1'),
              TabOrder = 4,
              Top = 257,
              Width = 225))),
        EDControl(SinglePage:
          Caption = str('Motion'),
          Name = str('SinglePage_Motion'),
          PageIndex = 5,
          Controls(
            EDControl(GroupBox:
              Caption = str('SRM'),
              Height = 129,
              Left = 8,
              Name = str('gbSRMSpeed'),
              TabOrder = 2,
              Top = 128,
              Width = 425,
              Controls(
                EDControl(SyntaxComboBox:
                  Height = 24,
                  Left = 188,
                  Name = str('scb_xDeceleration'),
                  TabOrder = 3,
                  Text = str('SyntaxComboBox3'),
                  Top = 90,
                  Width = 225),
                EDControl(SyntaxComboBox:
                  Height = 24,
                  Left = 188,
                  Name = str('scb_xAcceleration'),
                  TabOrder = 2,
                  Text = str('SyntaxComboBox2'),
                  Top = 58,
                  Width = 225),
                EDControl(SyntaxComboBox:
                  Height = 24,
                  Left = 188,
                  Name = str('scb_xSpeed'),
                  TabOrder = 1,
                  Text = str('SyntaxComboBox1'),
                  Top = 26,
                  Width = 225),
                EDControl(Label:
                  Caption = str('Deceleration [m/s²]:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('StaticText25'),
                  Top = 96,
                  Width = 93),
                EDControl(Label:
                  Caption = str('Acceleration [m/s²]:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('StaticText24'),
                  Top = 64,
                  Width = 92),
                EDControl(Label:
                  Caption = str('Speed [m/s]:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('StaticText23'),
                  Top = 32,
                  Width = 61))),
            EDControl(GroupBox:
              Caption = str('Hoist'),
              Height = 129,
              Left = 8,
              Name = str('gbHoistSpeed'),
              TabOrder = 3,
              Top = 272,
              Width = 425,
              Controls(
                EDControl(SyntaxComboBox:
                  Height = 24,
                  Left = 188,
                  Name = str('scb_zDeceleration'),
                  TabOrder = 3,
                  Text = str('SyntaxComboBox3'),
                  Top = 90,
                  Width = 225),
                EDControl(SyntaxComboBox:
                  Height = 24,
                  Left = 188,
                  Name = str('scb_zAcceleration'),
                  TabOrder = 2,
                  Text = str('SyntaxComboBox2'),
                  Top = 58,
                  Width = 225),
                EDControl(SyntaxComboBox:
                  Height = 24,
                  Left = 188,
                  Name = str('scb_zSpeed'),
                  TabOrder = 1,
                  Text = str('SyntaxComboBox1'),
                  Top = 26,
                  Width = 225),
                EDControl(Label:
                  Caption = str('Speed [m/s]:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('StaticText26'),
                  Top = 32,
                  Width = 61),
                EDControl(Label:
                  Caption = str('Acceleration [m/s²]:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('StaticText27'),
                  Top = 64,
                  Width = 92),
                EDControl(Label:
                  Caption = str('Deceleration [m/s²]:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('StaticText28'),
                  Top = 96,
                  Width = 93))),
            EDControl(GroupBox:
              Caption = str('Shuttle'),
              Height = 129,
              Left = 8,
              Name = str('gbShuttleSpeed'),
              TabOrder = 4,
              Top = 416,
              Width = 425,
              Controls(
                EDControl(SyntaxComboBox:
                  Height = 24,
                  Left = 188,
                  Name = str('scb_yDeceleration'),
                  TabOrder = 3,
                  Text = str('SyntaxComboBox3'),
                  Top = 90,
                  Width = 225),
                EDControl(SyntaxComboBox:
                  Height = 24,
                  Left = 188,
                  Name = str('scb_yAcceleration'),
                  TabOrder = 2,
                  Text = str('SyntaxComboBox2'),
                  Top = 58,
                  Width = 225),
                EDControl(SyntaxComboBox:
                  Height = 24,
                  Left = 188,
                  Name = str('scb_ySpeed'),
                  TabOrder = 1,
                  Text = str('SyntaxComboBox1'),
                  Top = 26,
                  Width = 225),
                EDControl(Label:
                  Caption = str('Deceleration [m/s²]:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('StaticText31'),
                  Top = 96,
                  Width = 93),
                EDControl(Label:
                  Caption = str('Acceleration [m/s²]:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('StaticText30'),
                  Top = 64,
                  Width = 92),
                EDControl(Label:
                  Caption = str('Speed [m/s]:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('StaticText29'),
                  Top = 32,
                  Width = 61))),
            EDControl(RadioGroup:
              Caption = str('Strategy'),
              ItemIndex = 0,
              Items = str('1. Always lift while driving'#13#10'2. Never lift while driving'#13#10'3. When empty lift while driving, when loaded never lift while driving'#13#10),
              Left = 8,
              Name = str('rgMovementStrategy'),
              TabOrder = 1,
              Top = 0,
              Width = 425))),
        EDControl(SinglePage:
          Caption = str('Load'),
          Name = str('SinglePage_Load'),
          PageIndex = 6,
          Controls(
            EDControl(GroupBox:
              Caption = str('Strategy'),
              Height = 361,
              Left = 8,
              Name = str('GroupBox4'),
              TabOrder = 1,
              Top = 8,
              Width = 425,
              Controls(
                EDControl(GroupBox:
                  Caption = str('Labels'),
                  Height = 73,
                  Left = 16,
                  Name = str('gbPlaceLabels2'),
                  TabOrder = 2,
                  Top = 272,
                  Width = 393,
                  Controls(
                    EDControl(Label:
                      Caption = str('Condition:'),
                      Color = -16777208,
                      Height = 13,
                      Left = 16,
                      Name = str('StaticText51'),
                      Top = 30,
                      Width = 47),
                    EDControl(Label:
                      Caption = str('n/a'),
                      Color = -16777208,
                      Height = 13,
                      Left = 156,
                      Name = str('stna1'),
                      Top = 29,
                      Width = 17))),
                EDControl(RadioGroup:
                  Caption = str('Order'),
                  Height = 233,
                  ItemIndex = 0,
                  Items = str('1. Inbound and Outbound alternately (if both is possible)'#13#10'2. Inbound prefered (if both is possible)'#13#10'3. Outbound prefered (if both is possible)'#13#10'4. Inbound only (never roll out)'#13#10'5. Outbound only (never roll in)'#13#10'6. Conditional statement defined by label'#13#10'7. Outbound prefered (external calls only)'#13#10),
                  Left = 16,
                  Name = str('rgPickOrder'),
                  TabOrder = 1,
                  Top = 24,
                  Width = 393,
                  Events(
                    Change = str('{--Enable Pick Variable on Pick Order 6 (conditional label)--}'#13'Case(GuiControl([rgPickOrder], GuiGet([ItemIndex])),'#13' do('#13'  Guicontrol([stna1], GuiSet([Visible], 1)),'#13'  Guicontrol([smeConditionalOrderCode], GuiSet([Visible], 0)),'#13'  Guicontrol([smeConditionalOrderCode], GuiSet([Enabled], 0))'#13' ),'#13' do('#13'  Guicontrol([stna1], GuiSet([Visible], 1)),'#13'  Guicontrol([smeConditionalOrderCode], GuiSet([Visible], 0)),'#13'  Guicontrol([smeConditionalOrderCode], GuiSet([Enabled], 0))'#13' ),'#13' do('#13'  Guicontrol([stna1], GuiSet([Visible], 1)),'#13'  Guicontrol([smeConditionalOrderCode], GuiSet([Visible], 0)),'#13'  Guicontrol([smeConditionalOrderCode], GuiSet([Enabled], 0))'#13' ),'#13' do('#13'  Guicontrol([stna1], GuiSet([Visible], 1)),'#13'  Guicontrol([smeConditionalOrderCode], GuiSet([Visible], 0)),'#13'  Guicontrol([smeConditionalOrderCode], GuiSet([Enabled], 0))'#13' ),'#13' do('#13'  Guicontrol([stna1], GuiSet([Visible], 1)),'#13'  Guicontrol([smeConditionalOrderCode], GuiSet([Visible], 0)),'#13'  Guicontrol([smeConditionalOrderCode], GuiSet([Enabled], 0))'#13' ),'#13' do('#13'  Guicontrol([stna1], GuiSet([Visible], 0)),'#13'  Guicontrol([smeConditionalOrderCode], GuiSet([Visible], 1)),'#13'  Guicontrol([smeConditionalOrderCode], GuiSet([Enabled], 1))'#13' ),'#13' do('#13'  Guicontrol([stna1], GuiSet([Visible], 1)),'#13'  Guicontrol([smeConditionalOrderCode], GuiSet([Visible], 0)),'#13'  Guicontrol([smeConditionalOrderCode], GuiSet([Enabled], 0))'#13' )'#13')'#13))))),
            EDControl(SmartEdit:
              Left = 176,
              Lines = str(''),
              Name = str('smeConditionalOrderCode'),
              String = str('{.~1|.}~1'),
              TabOrder = 2,
              Top = 304,
              Width = 225),
            EDControl(GroupBox:
              Caption = str('Time'),
              Height = 161,
              Left = 8,
              Name = str('gbSRMLoadtime'),
              TabOrder = 3,
              Top = 384,
              Width = 425,
              Controls(
                EDControl(ScriptEdit:
                  Hint = str('Code executed every time an atom enters the conveyor'),
                  Left = 188,
                  Name = str('efInputLoadtime'),
                  TabOrder = 1,
                  Top = 28,
                  Width = 225),
                EDControl(ScriptEdit:
                  Hint = str('Code executed every time an atom enters the conveyor'),
                  Left = 188,
                  Name = str('efRackUnloadtime'),
                  TabOrder = 2,
                  Top = 60,
                  Width = 225),
                EDControl(ScriptEdit:
                  Hint = str('Code executed every time an atom enters the conveyor'),
                  Left = 188,
                  Name = str('efOutputUnloadtime'),
                  TabOrder = 4,
                  Top = 124,
                  Width = 225),
                EDControl(ScriptEdit:
                  Hint = str('Code executed every time an atom enters the conveyor'),
                  Left = 188,
                  Name = str('efRackLoadtime'),
                  TabOrder = 3,
                  Top = 92,
                  Width = 225),
                EDControl(Label:
                  Caption = str('Unload time to outbound [s]:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('StaticText22'),
                  Top = 127,
                  Width = 133),
                EDControl(Label:
                  Caption = str('Load time from rack [s]:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('StaticText21'),
                  Top = 95,
                  Width = 110),
                EDControl(Label:
                  Caption = str('Unload time to rack [s]:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('StaticText20'),
                  Top = 63,
                  Width = 109),
                EDControl(Label:
                  Caption = str('Load time from inbound [s]:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('StaticText19'),
                  Top = 31,
                  Width = 127))))),
        EDControl(SinglePage:
          Caption = str('Pick'),
          Name = str('SinglePage_Pick'),
          PageIndex = 7,
          Controls(
            EDControl(GroupBox:
              Caption = str('Strategy'),
              Height = 505,
              Left = 8,
              Name = str('gbPickStrategy'),
              TabOrder = 1,
              Top = 8,
              Width = 425,
              Controls(
                EDControl(RadioGroup:
                  Caption = str(''),
                  Height = 265,
                  ItemIndex = 0,
                  Items = str('1. Random occupied bin location (of all racks)'#13#10'2. Random occupied bin location (of rack with lower fill level)'#13#10'3. Nearest occupied bin location to row 1 and column 1 (of all racks)'#13#10'4. Farthest occupied bin location to row 1 and column 1 (of all racks)'#13#10'5. Longest waiting product / First in first out'#13#10'6. Shortest waiting product / Last in first out'#13#10'7. Bin location (rack, row and column) is defined by label'#13#10'8. External call (Message to ASRS with pointer of assigned product)'#13#10),
                  Left = 16,
                  Name = str('rgPickStrategy'),
                  TabOrder = 1,
                  Top = 16,
                  Width = 393,
                  Events(
                    Change = str('{--Enable Pick Variables on Pick Strategies 7 (rack + row + col)--}'#13'Case(GuiControl([rgPickStrategy], GuiGet([ItemIndex])),'#13' do('#13'  Guicontrol([stna2], GuiSet([Visible], 1)),'#13'  Guicontrol([stna3], GuiSet([Visible], 1)),'#13'  Guicontrol([stna4], GuiSet([Visible], 1)),'#13'  Guicontrol([PickOfRack], GuiSet([Visible], 0)),'#13'  Guicontrol([PickOfRow], GuiSet([Visible], 0)),'#13'  Guicontrol([PickOfColumn], GuiSet([Visible], 0)),'#13'  Guicontrol([PickOfRack], GuiSet([Enabled], 0)),'#13'  Guicontrol([PickOfRow], GuiSet([Enabled], 0)),'#13'  Guicontrol([PickOfColumn], GuiSet([Enabled], 0))'#13' ),'#13' do('#13'  Guicontrol([stna2], GuiSet([Visible], 1)),'#13'  Guicontrol([stna3], GuiSet([Visible], 1)),'#13'  Guicontrol([stna4], GuiSet([Visible], 1)),'#13'  Guicontrol([PickOfRack], GuiSet([Visible], 0)),'#13'  Guicontrol([PickOfRow], GuiSet([Visible], 0)),'#13'  Guicontrol([PickOfColumn], GuiSet([Visible], 0)),'#13'  Guicontrol([PickOfRack], GuiSet([Enabled], 0)),'#13'  Guicontrol([PickOfRow], GuiSet([Enabled], 0)),'#13'  Guicontrol([PickOfColumn], GuiSet([Enabled], 0))'#13' ),'#13' do('#13'  Guicontrol([stna2], GuiSet([Visible], 1)),'#13'  Guicontrol([stna3], GuiSet([Visible], 1)),'#13'  Guicontrol([stna4], GuiSet([Visible], 1)),'#13'  Guicontrol([PickOfRack], GuiSet([Visible], 0)),'#13'  Guicontrol([PickOfRow], GuiSet([Visible], 0)),'#13'  Guicontrol([PickOfColumn], GuiSet([Visible], 0)),'#13'  Guicontrol([PickOfRack], GuiSet([Enabled], 0)),'#13'  Guicontrol([PickOfRow], GuiSet([Enabled], 0)),'#13'  Guicontrol([PickOfColumn], GuiSet([Enabled], 0))'#13' ),'#13' do('#13'  Guicontrol([stna2], GuiSet([Visible], 1)),'#13'  Guicontrol([stna3], GuiSet([Visible], 1)),'#13'  Guicontrol([stna4], GuiSet([Visible], 1)),'#13'  Guicontrol([PickOfRack], GuiSet([Visible], 0)),'#13'  Guicontrol([PickOfRow], GuiSet([Visible], 0)),'#13'  Guicontrol([PickOfColumn], GuiSet([Visible], 0)),'#13'  Guicontrol([PickOfRack], GuiSet([Enabled], 0)),'#13'  Guicontrol([PickOfRow], GuiSet([Enabled], 0)),'#13'  Guicontrol([PickOfColumn], GuiSet([Enabled], 0))'#13' ),'#13' do('#13'  Guicontrol([stna2], GuiSet([Visible], 1)),'#13'  Guicontrol([stna3], GuiSet([Visible], 1)),'#13'  Guicontrol([stna4], GuiSet([Visible], 1)),'#13'  Guicontrol([PickOfRack], GuiSet([Visible], 0)),'#13'  Guicontrol([PickOfRow], GuiSet([Visible], 0)),'#13'  Guicontrol([PickOfColumn], GuiSet([Visible], 0)),'#13'  Guicontrol([PickOfRack], GuiSet([Enabled], 0)),'#13'  Guicontrol([PickOfRow], GuiSet([Enabled], 0)),'#13'  Guicontrol([PickOfColumn], GuiSet([Enabled], 0))'#13' ),'#13' do('#13'  Guicontrol([stna2], GuiSet([Visible], 1)),'#13'  Guicontrol([stna3], GuiSet([Visible], 1)),'#13'  Guicontrol([stna4], GuiSet([Visible], 1)),'#13'  Guicontrol([PickOfRack], GuiSet([Visible], 0)),'#13'  Guicontrol([PickOfRow], GuiSet([Visible], 0)),'#13'  Guicontrol([PickOfColumn], GuiSet([Visible], 0)),'#13'  Guicontrol([PickOfRack], GuiSet([Enabled], 0)),'#13'  Guicontrol([PickOfRow], GuiSet([Enabled], 0)),'#13'  Guicontrol([PickOfColumn], GuiSet([Enabled], 0))'#13' ),'#13' do('#13'  Guicontrol([stna2], GuiSet([Visible], 0)),'#13'  Guicontrol([stna3], GuiSet([Visible], 0)),'#13'  Guicontrol([stna4], GuiSet([Visible], 0)),'#13'  Guicontrol([PickOfRack], GuiSet([Visible], 1)),'#13'  Guicontrol([PickOfRow], GuiSet([Visible], 1)),'#13'  Guicontrol([PickOfColumn], GuiSet([Visible], 1)),'#13'  Guicontrol([PickOfRack], GuiSet([Enabled], 1)),'#13'  Guicontrol([PickOfRow], GuiSet([Enabled], 1)),'#13'  Guicontrol([PickOfColumn], GuiSet([Enabled], 1))'#13' ),'#13' do('#13'  Guicontrol([stna2], GuiSet([Visible], 1)),'#13'  Guicontrol([stna3], GuiSet([Visible], 1)),'#13'  Guicontrol([stna4], GuiSet([Visible], 1)),'#13'  Guicontrol([PickOfRack], GuiSet([Visible], 0)),'#13'  Guicontrol([PickOfRow], GuiSet([Visible], 0)),'#13'  Guicontrol([PickOfColumn], GuiSet([Visible], 0)),'#13'  Guicontrol([PickOfRack], GuiSet([Enabled], 0)),'#13'  Guicontrol([PickOfRow], GuiSet([Enabled], 0)),'#13'  Guicontrol([PickOfColumn], GuiSet([Enabled], 0))'#13' )'#13')'#13))),
                EDControl(GroupBox:
                  Caption = str('Labels'),
                  Height = 153,
                  Left = 16,
                  Name = str('gbPickLabels'),
                  TabOrder = 2,
                  Top = 296,
                  Width = 393,
                  Controls(
                    EDControl(SyntaxComboBox:
                      Height = 24,
                      Left = 152,
                      Name = str('PickOfRow'),
                      TabOrder = 1,
                      Text = str('SyntaxComboBox2'),
                      Top = 65,
                      Width = 225),
                    EDControl(SyntaxComboBox:
                      Height = 24,
                      Left = 152,
                      Name = str('PickOfColumn'),
                      TabOrder = 2,
                      Text = str('SyntaxComboBox1'),
                      Top = 105,
                      Width = 225),
                    EDControl(Label:
                      Caption = str('n/a'),
                      Color = -16777208,
                      Height = 13,
                      Left = 156,
                      Name = str('stna4'),
                      Top = 106,
                      Width = 17),
                    EDControl(Label:
                      Caption = str('n/a'),
                      Color = -16777208,
                      Height = 13,
                      Left = 156,
                      Name = str('stna3'),
                      Top = 66,
                      Width = 17),
                    EDControl(Label:
                      Caption = str('Column:'),
                      Color = -16777208,
                      Height = 13,
                      Left = 16,
                      Name = str('StaticText49'),
                      Top = 104,
                      Width = 38),
                    EDControl(Label:
                      Caption = str('Row:'),
                      Color = -16777208,
                      Height = 13,
                      Left = 16,
                      Name = str('StaticText48'),
                      Top = 64,
                      Width = 25),
                    EDControl(Label:
                      Caption = str('Rack:'),
                      Color = -16777208,
                      Height = 13,
                      Left = 16,
                      Name = str('StaticText47'),
                      Top = 24,
                      Width = 29),
                    EDControl(Label:
                      Caption = str('n/a'),
                      Color = -16777208,
                      Height = 13,
                      Left = 156,
                      Name = str('stna2'),
                      Top = 26,
                      Width = 17))),
                EDControl(Button:
                  Caption = str('Manual outbound trigger'),
                  Left = 16,
                  Name = str('Trigger manual outbound'),
                  TabOrder = 3,
                  Top = 464,
                  Width = 395,
                  Events(
                    Click = str(#13'{--Message for testing purpose of Outbound triggers first Product of rack--}'#13'Case('#13' WhichIsTrue('#13'  {--both racks are not empty--}'#13'  and('#13'   Content(vtp(Att([hrr_left_ref],GuiAtom))) > 0,'#13'   Content(vtp(Att([hrr_right_ref],GuiAtom))) > 0'#13'  ),'#13'  {--Left rack is not empty--}'#13'  Content(vtp(Att([hrr_left_ref],GuiAtom))) > 0,'#13'  {--Right rack is not empty--}'#13'  Content(vtp(Att([hrr_right_ref],GuiAtom))) > 0,'#13'  {--both racks are empty--}'#13'  and('#13'   Content(vtp(Att([hrr_left_ref],GuiAtom))) = 0,'#13'   Content(vtp(Att([hrr_right_ref],GuiAtom))) = 0'#13'  )'#13' ),'#13' {--Send Message with Pointer of First(rack with larger content) to ASRS--}'#13' Case('#13'  WhichIsTrue('#13'   Content(vtp(Att([hrr_left_ref],GuiAtom))) > Content(vtp(Att([hrr_right_ref],GuiAtom))),'#13'   Content(vtp(Att([hrr_left_ref],GuiAtom))) < Content(vtp(Att([hrr_right_ref],GuiAtom))),'#13'   Content(vtp(Att([hrr_left_ref],GuiAtom))) = Content(vtp(Att([hrr_right_ref],GuiAtom)))'#13'  ),'#13'  SendMessageDirect(GuiAtom,ptv(First(vtp(Att([hrr_left_ref],GuiAtom))))),'#13'  SendMessageDirect(GuiAtom,ptv(First(vtp(Att([hrr_right_ref],GuiAtom))))),'#13'  Case(dUniform(1,2),'#13'   SendMessageDirect(GuiAtom,ptv(First(vtp(Att([hrr_left_ref],GuiAtom))))),'#13'   SendMessageDirect(GuiAtom,ptv(First(vtp(Att([hrr_right_ref],GuiAtom)))))'#13'  )'#13' ),'#13' {--Send Message with Pointer of First(left rack) to ASRS--}'#13' SendMessageDirect(GuiAtom,ptv(First(vtp(Att([hrr_left_ref],GuiAtom))))),'#13' {--Send Message with Pointer of First(left rack) to ASRS--}'#13' SendMessageDirect(GuiAtom,ptv(First(vtp(Att([hrr_right_ref],GuiAtom))))),'#13' {--Fail safe--}'#13' msg([No product assignable. All racks are empty.])'#13')'#13))))),
            EDControl(SmartEdit:
              Left = 176,
              Lines = str(''),
              Name = str('PickOfRack'),
              String = str('{.~1|.}~1'),
              TabOrder = 2,
              Top = 328,
              Width = 225))),
        EDControl(SinglePage:
          Caption = str('Place'),
          Name = str('SinglePage_Place'),
          PageIndex = 8,
          Controls(
            EDControl(GroupBox:
              Caption = str('Strategy'),
              Height = 393,
              Left = 8,
              Name = str('gbPlaceStrategy'),
              TabOrder = 1,
              Top = 8,
              Width = 425,
              Controls(
                EDControl(RadioGroup:
                  Caption = str(''),
                  Height = 193,
                  ItemIndex = 0,
                  Items = str('1. Random free positon (of all racks)'#13#10'2. Random free positon (of rack with lower fill level)'#13#10'3. Nearest free postion to row 1 and column 1 (of all racks)'#13#10'4. Farthest free postion to row 1 and column 1 (of all racks)'#13#10'5. Closest free postion to row and column defined by label (of all racks)'#13#10'6. Define rack, row and column directly by label (user defined search)'#13#10),
                  Left = 16,
                  Name = str('rgPlaceStrategy'),
                  TabOrder = 1,
                  Top = 16,
                  Width = 393,
                  Events(
                    Change = str('{--Enable Place Variables on Place Strategies 5 (row + col) and 6 (rack + row + col)--}'#13'Case(GuiControl([rgPlaceStrategy], GuiGet([ItemIndex])),'#13' do('#13'  Guicontrol([stna5], GuiSet([Visible], 1)),'#13'  Guicontrol([stna6], GuiSet([Visible], 1)),'#13'  Guicontrol([stna7], GuiSet([Visible], 1)),'#13'  Guicontrol([PutInRack], GuiSet([Visible], 0)),'#13'  Guicontrol([PutInRow], GuiSet([Visible], 0)),'#13'  Guicontrol([PutInColumn], GuiSet([Visible], 0)),'#13'  Guicontrol([PutInRack], GuiSet([Enabled], 0)),'#13'  Guicontrol([PutInRow], GuiSet([Enabled], 0)),'#13'  Guicontrol([PutInColumn], GuiSet([Enabled], 0))'#13' ),'#13' do('#13'  Guicontrol([stna5], GuiSet([Visible], 1)),'#13'  Guicontrol([stna6], GuiSet([Visible], 1)),'#13'  Guicontrol([stna7], GuiSet([Visible], 1)),'#13'  Guicontrol([PutInRack], GuiSet([Visible], 0)),'#13'  Guicontrol([PutInRow], GuiSet([Visible], 0)),'#13'  Guicontrol([PutInColumn], GuiSet([Visible], 0)),'#13'  Guicontrol([PutInRack], GuiSet([Enabled], 0)),'#13'  Guicontrol([PutInRow], GuiSet([Enabled], 0)),'#13'  Guicontrol([PutInColumn], GuiSet([Enabled], 0))'#13' ),'#13' do('#13'  Guicontrol([stna5], GuiSet([Visible], 1)),'#13'  Guicontrol([stna6], GuiSet([Visible], 1)),'#13'  Guicontrol([stna7], GuiSet([Visible], 1)),'#13'  Guicontrol([PutInRack], GuiSet([Visible], 0)),'#13'  Guicontrol([PutInRow], GuiSet([Visible], 0)),'#13'  Guicontrol([PutInColumn], GuiSet([Visible], 0)),'#13'  Guicontrol([PutInRack], GuiSet([Enabled], 0)),'#13'  Guicontrol([PutInRow], GuiSet([Enabled], 0)),'#13'  Guicontrol([PutInColumn], GuiSet([Enabled], 0))'#13' ),'#13' do('#13'  Guicontrol([stna5], GuiSet([Visible], 1)),'#13'  Guicontrol([stna6], GuiSet([Visible], 1)),'#13'  Guicontrol([stna7], GuiSet([Visible], 1)),'#13'  Guicontrol([PutInRack], GuiSet([Visible], 0)),'#13'  Guicontrol([PutInRow], GuiSet([Visible], 0)),'#13'  Guicontrol([PutInColumn], GuiSet([Visible], 0)),'#13'  Guicontrol([PutInRack], GuiSet([Enabled], 0)),'#13'  Guicontrol([PutInRow], GuiSet([Enabled], 0)),'#13'  Guicontrol([PutInColumn], GuiSet([Enabled], 0))'#13' ),'#13' do('#13'  Guicontrol([stna5], GuiSet([Visible], 1)),'#13'  Guicontrol([stna6], GuiSet([Visible], 0)),'#13'  Guicontrol([stna7], GuiSet([Visible], 0)),'#13'  Guicontrol([PutInRack], GuiSet([Visible], 0)),'#13'  Guicontrol([PutInRow], GuiSet([Visible], 1)),'#13'  Guicontrol([PutInColumn], GuiSet([Visible], 1)),'#13'  Guicontrol([PutInRack], GuiSet([Enabled], 0)),'#13'  Guicontrol([PutInRow], GuiSet([Enabled], 1)),'#13'  Guicontrol([PutInColumn], GuiSet([Enabled], 1))'#13' ),'#13' do('#13'  Guicontrol([stna5], GuiSet([Visible], 0)),'#13'  Guicontrol([stna6], GuiSet([Visible], 0)),'#13'  Guicontrol([stna7], GuiSet([Visible], 0)),'#13'  Guicontrol([PutInRack], GuiSet([Visible], 1)),'#13'  Guicontrol([PutInRow], GuiSet([Visible], 1)),'#13'  Guicontrol([PutInColumn], GuiSet([Visible], 1)),'#13'  Guicontrol([PutInRack], GuiSet([Enabled], 1)),'#13'  Guicontrol([PutInRow], GuiSet([Enabled], 1)),'#13'  Guicontrol([PutInColumn], GuiSet([Enabled], 1))'#13' )'#13')'#13))),
                EDControl(GroupBox:
                  Caption = str('Labels'),
                  Height = 153,
                  Left = 16,
                  Name = str('gbPlaceLabels'),
                  TabOrder = 2,
                  Top = 224,
                  Width = 393,
                  Controls(
                    EDControl(SyntaxComboBox:
                      Height = 24,
                      Left = 152,
                      Name = str('PutInRow'),
                      TabOrder = 1,
                      Text = str('SyntaxComboBox2'),
                      Top = 65,
                      Width = 225),
                    EDControl(SyntaxComboBox:
                      Height = 24,
                      Left = 152,
                      Name = str('PutInColumn'),
                      TabOrder = 2,
                      Text = str('SyntaxComboBox1'),
                      Top = 105,
                      Width = 225),
                    EDControl(Label:
                      Caption = str('n/a'),
                      Color = -16777208,
                      Height = 13,
                      Left = 156,
                      Name = str('stna7'),
                      Top = 108,
                      Width = 17),
                    EDControl(Label:
                      Caption = str('n/a'),
                      Color = -16777208,
                      Height = 13,
                      Left = 156,
                      Name = str('stna6'),
                      Top = 68,
                      Width = 17),
                    EDControl(Label:
                      Caption = str('Column:'),
                      Color = -16777208,
                      Height = 13,
                      Left = 16,
                      Name = str('StaticText42'),
                      Top = 104,
                      Width = 38),
                    EDControl(Label:
                      Caption = str('Row:'),
                      Color = -16777208,
                      Height = 13,
                      Left = 16,
                      Name = str('StaticText41'),
                      Top = 64,
                      Width = 25),
                    EDControl(Label:
                      Caption = str('Rack:'),
                      Color = -16777208,
                      Height = 13,
                      Left = 16,
                      Name = str('StaticText46'),
                      Top = 24,
                      Width = 29),
                    EDControl(Label:
                      Caption = str('n/a'),
                      Color = -16777208,
                      Height = 13,
                      Left = 156,
                      Name = str('stna5'),
                      Top = 28,
                      Width = 17))))),
            EDControl(SmartEdit:
              Left = 176,
              Lines = str(''),
              Name = str('PutInRack'),
              String = str('{.~1|.}~1'),
              TabOrder = 2,
              Top = 256,
              Width = 225))),
        EDControl(SinglePage:
          Caption = str('Visualization'),
          Name = str('SinglePage_Visu'),
          PageIndex = 9,
          Controls(
            EDControl(GroupBox:
              Caption = str('Settings'),
              Height = 289,
              Left = 8,
              Name = str('gbSettings'),
              TabOrder = 1,
              Top = 8,
              Width = 425,
              Controls(
                EDControl(Colorpicker:
                  Height = 20,
                  Left = 188,
                  Name = str('SRM1Color'),
                  Top = 213,
                  Width = 225),
                EDControl(Colorpicker:
                  Height = 20,
                  Left = 188,
                  Name = str('SRM2Color'),
                  Top = 253,
                  Width = 225),
                EDControl(Colorpicker:
                  Height = 20,
                  Left = 188,
                  Name = str('RackColor'),
                  Top = 85,
                  Width = 225),
                EDControl(Trackbar:
                  Left = 216,
                  Max = 10,
                  Min = 0,
                  Name = str('tbRackTransparency'),
                  Top = 112,
                  TrackPosition = 0,
                  Width = 176,
                  Events(
                    Change = str('Att([hrr_transparency],GuiAtom) := GuiControl([tbRackTransparency],GuiGet([TrackPosition])) / 10'#13))),
                EDControl(ComboBox:
                  Height = 21,
                  Items = str('None'#13#10'Simple'#13#10'Simple wireframed'#13#10'Standard'#13#10'Standard wireframed'#13#10),
                  Left = 188,
                  Name = str('3DIcon'),
                  Style = DropDownList,
                  TabOrder = 1,
                  Top = 50,
                  Width = 225,
                  Events(
                    Change = str('if('#13' and('#13'  {--Number of bin location in all existing racks--}'#13'  Att([hrr_no_rows],GuiAtom) * Att([hrr_no_cols],GuiAtom) * (Att([hrr_left_exists],GuiAtom) + Att([hrr_right_exists],GuiAtom)) > 1000,'#13'  {--Index to draw all bin locations in detail--}'#13'  GuiControl([3DIcon],GuiGet([ItemIndex])) > 3'#13' ),'#13' {--Fail safe 3D engine--}'#13' msg([More than 1000 bin locations to draw. Using simple 3D icon is recommended.])'#13')'#13))),
                EDControl(Label:
                  Caption = str('SRM Second Color:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('StaticText38'),
                  Top = 248,
                  Width = 94),
                EDControl(Label:
                  Caption = str('SRM First Color:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('StaticText37'),
                  Top = 216,
                  Width = 76),
                EDControl(Label:
                  Caption = str('Show 3D contents of right rack:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('StaticText45'),
                  Top = 184,
                  Width = 150),
                EDControl(Label:
                  Caption = str('Show 3D contents of left rack:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('StaticText44'),
                  Top = 152,
                  Width = 144),
                EDControl(Label:
                  Caption = str('Rack Transparency:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('StaticText39'),
                  Top = 120,
                  Width = 97),
                EDControl(Label:
                  Caption = str('Rack Color:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('StaticText36'),
                  Top = 90,
                  Width = 56),
                EDControl(Label:
                  Caption = str('3D Icon:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('StaticText33'),
                  Top = 54,
                  Width = 41),
                EDControl(Label:
                  Caption = str('2D Icon:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('StaticText32'),
                  Top = 20,
                  Width = 41),
                EDControl(Label:
                  Caption = str('0 %'),
                  Color = -16777208,
                  Height = 13,
                  Left = 392,
                  Name = str('StaticText402'),
                  Top = 120,
                  Width = 17),
                EDControl(Label:
                  Caption = str('100 %'),
                  Color = -16777208,
                  Height = 13,
                  Left = 187,
                  Name = str('StaticText40'),
                  Top = 120,
                  Width = 29),
                EDControl(CheckBox:
                  Caption = str(''),
                  Left = 188,
                  Name = str('cbShowContentRightRack'),
                  TabOrder = 3,
                  Top = 184),
                EDControl(CheckBox:
                  Caption = str(''),
                  Left = 188,
                  Name = str('cbShowContentLeftRack'),
                  TabOrder = 2,
                  Top = 152),
                EDControl(Icon:
                  Height = 24,
                  Left = 188,
                  Name = str('2DIcon'),
                  Top = 18,
                  Width = 225)))))))),
  Events(
    Show = str('do('#13#13' {--Update subatom references--}'#13' if('#13'  or('#13'   {--Initial rebuild of ASRS required ?--}  '#13'   Ddb([creatorfirst], GuiAtom) <= 0,'#13'   {--Existing model atoms before first run--}'#13'   Time <= 0'#13'  ),'#13'  do('#13'   {--Disable update for next occurence--}'#13'   Inc(Ddb([creatorfirst], GuiAtom)),'#13'   {--Rebuild whole ASRS--}'#13'   Advanced_ASRS_Rebuild(GuiAtom),'#13'   {--Store reference of main atom to all sub-atoms (ease reference later on)--}'#13'   ForAtomTreeUnder('#13'    GuiAtom,'#13'    do('#13'     setcs(a),'#13'     Att([refasrs],cs) := ptv(GuiAtom)'#13'    )'#13'   )'#13'  )'#13' ),'#13#13' {--Page 1 : General--}'#13#13' Att([OldName], GuiAtom) := Att([TableName], GuiAtom), '#13#13' {Set Caption}'#13' if('#13'  atomexists(m(GuiAtom)),'#13'  GuiControl([Advanced ASRS],GuiSet([Caption],concat(name(m(GuiAtom)), [ - ], name(GuiAtom)))),'#13'  GuiControl([Advanced ASRS],GuiSet([Caption],concat([Baseclass - ], name(GuiAtom))))'#13' ),'#13#13' {Set ActivePage}'#13' GuiControl([MultiPage1]),GuiSet([ActivePage],1),'#13' '#13' {Set TextField}'#13' GuiControl([AtomName],GuiSet([Text],Name(GuiAtom))),'#13' GuiControl([AliasName],GuiSet([Text],textAtt([AliasName],GuiAtom))),'#13#13' {Set CheckBox}'#13' GuiControl([createAlias],GuiSet([Checked], Att([createalias],GuiAtom))),'#13' GuiControl([cbUseAtomName], GuiSet([Checked], Att([UseAtomName], Guiatom))),'#13#13' {--ASRS Trigger on Reset--}'#13' GuiControl([TriggerOnReset], GuiSet([Code], TextAtt([asrs_ResetTrigger], GuiAtom))),'#13' '#13' {--Page 2 : Storage--}'#13#13' {--ASRS Rotation--}'#13' GuiControl([efRotation],GuiSet([Text], TextAtt([asrs_rotation],GuiAtom))), '#13#13' {--ASRS Z location--}'#13' GuiControl([efZLoc],GuiSet([Text], String(zloc(GuiAtom)))), '#13' '#13' {--High Rise Rack Layout--}'#13' GuiControl([rgRackPostions], '#13'  GuiSet('#13'   [ItemIndex], '#13'   Case('#13'    WhichIsTrue('#13'     And('#13'      Att([hrr_left_exists], GuiAtom),'#13'      Att([hrr_right_exists], GuiAtom)'#13'     ),'#13'     Att([hrr_left_exists], GuiAtom),'#13'     Att([hrr_right_exists], GuiAtom)'#13'    ),'#13'    1,'#13'    2,'#13'    3'#13'   )'#13'  )'#13' ),'#13' '#13' {--High Rise Rack Dimensions--}'#13' GuiControl([efRows],GuiSet([Text], TextAtt([hrr_no_rows],GuiAtom))),'#13' GuiControl([efCols],GuiSet([Text], TextAtt([hrr_no_cols],GuiAtom))),'#13' '#13' {--High Rise Rack Sizes--}'#13' GuiControl([efBinLocationsHeight],GuiSet([Text], TextAtt([hrr_row_size],GuiAtom))),'#13' GuiControl([efBinLocationsWidth],GuiSet([Text], TextAtt([hrr_col_size],GuiAtom))),'#13' GuiControl([efBinLocationsDepth],GuiSet([Text], TextAtt([hrr_depth],GuiAtom))),'#13' GuiControl([efAisleWidth],GuiSet([Text], TextAtt([asrs_aisle_width],GuiAtom))),'#13' '#13' {--Page 3 : Inbound--}'#13#13' {--Inbound Side--}'#13' GuiControl([rgInputSide], GuiSet([ItemIndex], Att([input_side], GuiAtom))),'#13' '#13' {--Inbound Position--}'#13' GuiControl([efInputRow],GuiSet([Text], TextAtt([input_row],GuiAtom))),'#13' GuiControl([efInputCol],GuiSet([Text], TextAtt([input_col],GuiAtom))),'#13#13' {--Input Strategy--}'#13' FillPredefinedLogicList([seInputStrategy], [getInputStrategy]),'#13' GuiControl([seInputStrategy],GuiSet([String],textatt([InStrategy], Rank(2, GuiAtom)))), '#13#13' {--Inbound Triggers--}'#13' GuiControl([scbInputTriggerOnEntry],GuiSet([CodeItems], concat(char(1),[objectstart],char(1),[code:],TextAtt([EntryTrigger],vtp(Att([input_ref],GuiAtom))),char(1),[objectend], getTriggerEnterExit))),'#13' GuiControl([scbInputTriggerOnEntry],GuiSet([ItemIndex], 1)),        '#13#13' GuiControl([scbInputTriggerOnExit],GuiSet([CodeItems], concat(char(1),[objectstart],char(1),[code:],TextAtt([ExitTrigger],vtp(Att([input_ref],GuiAtom))),char(1),[objectend], getTriggerEnterExit))),'#13' GuiControl([scbInputTriggerOnExit],GuiSet([ItemIndex], 1)), '#13#13' {--Page 4 : Outbound--}'#13#13' {--Outbound Side--}'#13' GuiControl([rgOutputSide], GuiSet([ItemIndex], Att([output_side], GuiAtom))),'#13' '#13' {--Outbound Position--}'#13' GuiControl([efOutputRow],GuiSet([Text], TextAtt([output_row],GuiAtom))),'#13' GuiControl([efOutputCol],GuiSet([Text], TextAtt([output_col],GuiAtom))),'#13#13' {--SendTo--}'#13' FillPredefinedLogicList([seSendTo], [getSendTo]),'#13' GuiControl([seSendTo],GuiSet([String],textatt([SendTo], Rank(3,GuiAtom)))), '#13#13' {--Outbound Triggers--}'#13' GuiControl([scbOutputTriggerOnEntry],GuiSet([CodeItems], concat(char(1),[objectstart],char(1),[code:],TextAtt([EntryTrigger],vtp(Att([output_ref],GuiAtom))),char(1),[objectend], getTriggerEnterExit))),'#13' GuiControl([scbOutputTriggerOnEntry],GuiSet([ItemIndex], 1)),        '#13#13' GuiControl([scbOutputTriggerOnExit],GuiSet([CodeItems], concat(char(1),[objectstart],char(1),[code:],TextAtt([ExitTrigger],vtp(Att([output_ref],GuiAtom))),char(1),[objectend], getTriggerEnterExit))),'#13' GuiControl([scbOutputTriggerOnExit],GuiSet([ItemIndex], 1)), '#13#13' {--Page 5 : Motion--}'#13' '#13' {--SRM Movement Strategy--}'#13' GuiControl([rgMovementStrategy], GuiSet([ItemIndex], Att([srm_move_strategy], GuiAtom))),'#13#13' {--SRM Speed Parameters--}'#13' GuiControl([scb_xSpeed],GuiSet([CodeItems], concat(char(1),[objectstart],char(1),[code:],TextAtt([srm_speed_x],GuiAtom),char(1),[objectend], getDefaultSpeed))),'#13' GuiControl([scb_xSpeed],GuiSet([ItemIndex], 1)),  '#13' '#13' GuiControl([scb_xAcceleration],GuiSet([CodeItems], concat(char(1),[objectstart],char(1),[code:],TextAtt([srm_acc_x],GuiAtom),char(1),[objectend], getDefaultSpeed))),'#13' GuiControl([scb_xAcceleration],GuiSet([ItemIndex], 1)),       '#13#13' GuiControl([scb_xDeceleration],GuiSet([CodeItems], concat(char(1),[objectstart],char(1),[code:],TextAtt([srm_dec_x],GuiAtom),char(1),[objectend], getDefaultSpeed))),'#13' GuiControl([scb_xDeceleration],GuiSet([ItemIndex], 1)),       '#13' '#13' {--Hoist Speed Parameters--}'#13' GuiControl([scb_zSpeed],GuiSet([CodeItems], concat(char(1),[objectstart],char(1),[code:],TextAtt([srm_speed_z],GuiAtom),char(1),[objectend], getDefaultSpeed))),'#13' GuiControl([scb_zSpeed],GuiSet([ItemIndex], 1)),  '#13' '#13' GuiControl([scb_zAcceleration],GuiSet([CodeItems], concat(char(1),[objectstart],char(1),[code:],TextAtt([srm_acc_z],GuiAtom),char(1),[objectend], getDefaultSpeed))),'#13' GuiControl([scb_zAcceleration],GuiSet([ItemIndex], 1)),       '#13#13' GuiControl([scb_zDeceleration],GuiSet([CodeItems], concat(char(1),[objectstart],char(1),[code:],TextAtt([srm_dec_z],GuiAtom),char(1),[objectend], getDefaultSpeed))),'#13' GuiControl([scb_zDeceleration],GuiSet([ItemIndex], 1)),       '#13' '#13' {--Shuttle Speed Parameters--}'#13' GuiControl([scb_ySpeed],GuiSet([CodeItems], concat(char(1),[objectstart],char(1),[code:],TextAtt([srm_speed_y],GuiAtom),char(1),[objectend], getDefaultSpeed))),'#13' GuiControl([scb_ySpeed],GuiSet([ItemIndex], 1)),  '#13' '#13' GuiControl([scb_yAcceleration],GuiSet([CodeItems], concat(char(1),[objectstart],char(1),[code:],TextAtt([srm_acc_y],GuiAtom),char(1),[objectend], getDefaultSpeed))),'#13' GuiControl([scb_yAcceleration],GuiSet([ItemIndex], 1)),       '#13#13' GuiControl([scb_yDeceleration],GuiSet([CodeItems], concat(char(1),[objectstart],char(1),[code:],TextAtt([srm_dec_y],GuiAtom),char(1),[objectend], getDefaultSpeed))),'#13' GuiControl([scb_yDeceleration],GuiSet([ItemIndex], 1)),       '#13#13' {--Page 6 : Load--}'#13#13' {--SRM Load and Unload times--}'#13' GuiControl([efInputLoadtime], GuiSet([Code], TextAtt([srm_input_loadtime], GuiAtom))),'#13' GuiControl([efRackUnloadtime], GuiSet([Code], TextAtt([srm_hrr_unloadtime], GuiAtom))),'#13' GuiControl([efRackLoadtime], GuiSet([Code], TextAtt([srm_hrr_loadtime], GuiAtom))),'#13' GuiControl([efOutputUnloadtime], GuiSet([Code], TextAtt([srm_output_unloadtime], GuiAtom))),'#13#13' {--ASRS Pick Order--}'#13' GuiControl([rgPickOrder], GuiSet([ItemIndex], Att([asrs_pick_order], GuiAtom))),'#13' '#13' {--Enable Pick Variable on Pick Order 6 (conditional label)--}'#13' Case(GuiControl([rgPickOrder], GuiGet([ItemIndex])),'#13'  do('#13'   Guicontrol([stna1], GuiSet([Visible], 1)),'#13'   Guicontrol([smeConditionalOrderCode], GuiSet([Visible], 0)),'#13'   Guicontrol([smeConditionalOrderCode], GuiSet([Enabled], 0))'#13'  ),'#13'  do('#13'   Guicontrol([stna1], GuiSet([Visible], 1)),'#13'   Guicontrol([smeConditionalOrderCode], GuiSet([Visible], 0)),'#13'   Guicontrol([smeConditionalOrderCode], GuiSet([Enabled], 0))'#13'  ),'#13'  do('#13'   Guicontrol([stna1], GuiSet([Visible], 1)),'#13'   Guicontrol([smeConditionalOrderCode], GuiSet([Visible], 0)),'#13'   Guicontrol([smeConditionalOrderCode], GuiSet([Enabled], 0))'#13'  ),'#13'  do('#13'   Guicontrol([stna1], GuiSet([Visible], 1)),'#13'   Guicontrol([smeConditionalOrderCode], GuiSet([Visible], 0)),'#13'   Guicontrol([smeConditionalOrderCode], GuiSet([Enabled], 0))'#13'  ),'#13'  do('#13'   Guicontrol([stna1], GuiSet([Visible], 1)),'#13'   Guicontrol([smeConditionalOrderCode], GuiSet([Visible], 0)),'#13'   Guicontrol([smeConditionalOrderCode], GuiSet([Enabled], 0))'#13'  ),'#13'  do('#13'   Guicontrol([stna1], GuiSet([Visible], 0)),'#13'   Guicontrol([smeConditionalOrderCode], GuiSet([Visible], 1)),'#13'   Guicontrol([smeConditionalOrderCode], GuiSet([Enabled], 1))'#13'  ),'#13'  do('#13'   Guicontrol([stna1], GuiSet([Visible], 1)),'#13'   Guicontrol([smeConditionalOrderCode], GuiSet([Visible], 0)),'#13'   Guicontrol([smeConditionalOrderCode], GuiSet([Enabled], 0))'#13'  )'#13' ),'#13' '#13' {--Conditional Order Label--} '#13' repeat(6,'#13'  GuiControl([smeConditionalOrderCode],GuiList([Lines],[Add], Advanced_ASRS_get_order_strategy(Count)))'#13' ),'#13' GuiControl([smeConditionalOrderCode],GuiSet([String],textatt([asrs_pick_order_code],GuiAtom))), '#13'  '#13' {--Page 7 : Pick Strategy--}'#13#13' {--ASRS Pick Strategy--}'#13' GuiControl([rgPickStrategy], GuiSet([ItemIndex], Att([asrs_pick_strategy], GuiAtom))),'#13' '#13' {--Enable Pick Variables on Pick Strategies 7 (rack + row + col)--}'#13' Case(GuiControl([rgPickStrategy], GuiGet([ItemIndex])),'#13'  do('#13'   Guicontrol([stna2], GuiSet([Visible], 1)),'#13'   Guicontrol([stna3], GuiSet([Visible], 1)),'#13'   Guicontrol([stna4], GuiSet([Visible], 1)),'#13'   Guicontrol([PickOfRack], GuiSet([Visible], 0)),'#13'   Guicontrol([PickOfRow], GuiSet([Visible], 0)),'#13'   Guicontrol([PickOfColumn], GuiSet([Visible], 0)),'#13'   Guicontrol([PickOfRack], GuiSet([Enabled], 0)),'#13'   Guicontrol([PickOfRow], GuiSet([Enabled], 0)),'#13'   Guicontrol([PickOfColumn], GuiSet([Enabled], 0))'#13'  ),'#13'  do('#13'   Guicontrol([stna2], GuiSet([Visible], 1)),'#13'   Guicontrol([stna3], GuiSet([Visible], 1)),'#13'   Guicontrol([stna4], GuiSet([Visible], 1)),'#13'   Guicontrol([PickOfRack], GuiSet([Visible], 0)),'#13'   Guicontrol([PickOfRow], GuiSet([Visible], 0)),'#13'   Guicontrol([PickOfColumn], GuiSet([Visible], 0)),'#13'   Guicontrol([PickOfRack], GuiSet([Enabled], 0)),'#13'   Guicontrol([PickOfRow], GuiSet([Enabled], 0)),'#13'   Guicontrol([PickOfColumn], GuiSet([Enabled], 0))'#13'  ),'#13'  do('#13'   Guicontrol([stna2], GuiSet([Visible], 1)),'#13'   Guicontrol([stna3], GuiSet([Visible], 1)),'#13'   Guicontrol([stna4], GuiSet([Visible], 1)),'#13'   Guicontrol([PickOfRack], GuiSet([Visible], 0)),'#13'   Guicontrol([PickOfRow], GuiSet([Visible], 0)),'#13'   Guicontrol([PickOfColumn], GuiSet([Visible], 0)),'#13'   Guicontrol([PickOfRack], GuiSet([Enabled], 0)),'#13'   Guicontrol([PickOfRow], GuiSet([Enabled], 0)),'#13'   Guicontrol([PickOfColumn], GuiSet([Enabled], 0))'#13'  ),'#13'  do('#13'   Guicontrol([stna2], GuiSet([Visible], 1)),'#13'   Guicontrol([stna3], GuiSet([Visible], 1)),'#13'   Guicontrol([stna4], GuiSet([Visible], 1)),'#13'   Guicontrol([PickOfRack], GuiSet([Visible], 0)),'#13'   Guicontrol([PickOfRow], GuiSet([Visible], 0)),'#13'   Guicontrol([PickOfColumn], GuiSet([Visible], 0)),'#13'   Guicontrol([PickOfRack], GuiSet([Enabled], 0)),'#13'   Guicontrol([PickOfRow], GuiSet([Enabled], 0)),'#13'   Guicontrol([PickOfColumn], GuiSet([Enabled], 0))'#13'  ),'#13'  do('#13'   Guicontrol([stna2], GuiSet([Visible], 1)),'#13'   Guicontrol([stna3], GuiSet([Visible], 1)),'#13'   Guicontrol([stna4], GuiSet([Visible], 1)),'#13'   Guicontrol([PickOfRack], GuiSet([Visible], 0)),'#13'   Guicontrol([PickOfRow], GuiSet([Visible], 0)),'#13'   Guicontrol([PickOfColumn], GuiSet([Visible], 0)),'#13'   Guicontrol([PickOfRack], GuiSet([Enabled], 0)),'#13'   Guicontrol([PickOfRow], GuiSet([Enabled], 0)),'#13'   Guicontrol([PickOfColumn], GuiSet([Enabled], 0))'#13'  ),'#13'  do('#13'   Guicontrol([stna2], GuiSet([Visible], 1)),'#13'   Guicontrol([stna3], GuiSet([Visible], 1)),'#13'   Guicontrol([stna4], GuiSet([Visible], 1)),'#13'   Guicontrol([PickOfRack], GuiSet([Visible], 0)),'#13'   Guicontrol([PickOfRow], GuiSet([Visible], 0)),'#13'   Guicontrol([PickOfColumn], GuiSet([Visible], 0)),'#13'   Guicontrol([PickOfRack], GuiSet([Enabled], 0)),'#13'   Guicontrol([PickOfRow], GuiSet([Enabled], 0)),'#13'   Guicontrol([PickOfColumn], GuiSet([Enabled], 0))'#13'  ),'#13'  do('#13'   Guicontrol([stna2], GuiSet([Visible], 0)),'#13'   Guicontrol([stna3], GuiSet([Visible], 0)),'#13'   Guicontrol([stna4], GuiSet([Visible], 0)),'#13'   Guicontrol([PickOfRack], GuiSet([Visible], 1)),'#13'   Guicontrol([PickOfRow], GuiSet([Visible], 1)),'#13'   Guicontrol([PickOfColumn], GuiSet([Visible], 1)),'#13'   Guicontrol([PickOfRack], GuiSet([Enabled], 1)),'#13'   Guicontrol([PickOfRow], GuiSet([Enabled], 1)),'#13'   Guicontrol([PickOfColumn], GuiSet([Enabled], 1))'#13'  ),'#13'  do('#13'   Guicontrol([stna2], GuiSet([Visible], 1)),'#13'   Guicontrol([stna3], GuiSet([Visible], 1)),'#13'   Guicontrol([stna4], GuiSet([Visible], 1)),'#13'   Guicontrol([PickOfRack], GuiSet([Visible], 0)),'#13'   Guicontrol([PickOfRow], GuiSet([Visible], 0)),'#13'   Guicontrol([PickOfColumn], GuiSet([Visible], 0)),'#13'   Guicontrol([PickOfRack], GuiSet([Enabled], 0)),'#13'   Guicontrol([PickOfRow], GuiSet([Enabled], 0)),'#13'   Guicontrol([PickOfColumn], GuiSet([Enabled], 0))'#13'  )'#13' ),'#13' '#13' {--Rack Pick Label--}'#13' repeat(8,'#13'  GuiControl([PickOfRack],GuiList([Lines],[Add], Advanced_ASRS_get_pick_strategy(Count)))'#13' ),'#13' GuiControl([PickOfRack],GuiSet([String],textatt([asrs_hrr_rack_to_pick],GuiAtom))),   '#13#13' {--Row Pick Label--}'#13' GuiControl('#13'  [PickOfRow],'#13'  GuiSet('#13'   [CodeItems], '#13'   concat(char(1),[objectstart],char(1),[code:],TextAtt([asrs_hrr_row_to_pick],GuiAtom),char(1),[objectend], '#13'    ['#1'objectstart'#1'code:label([?],i)'#1'objectend'#1'objectstart'#1'code:if(=(?,?),?,?)'#1'objectend'#1'objectstart'#1'code:cell(?,?,?)'#1'objectend'#1'objectstart'#1'code:MatrixGetRow'#1'objectend]'#13'   )'#13'  )'#13' ),'#13' GuiControl([PickOfRow],GuiSet([ItemIndex], 1)),   '#13#13' {--Column Pick Label--}'#13' GuiControl('#13'  [PickOfColumn],'#13'  GuiSet('#13'   [CodeItems], '#13'   concat(char(1),[objectstart],char(1),[code:],TextAtt([asrs_hrr_col_to_pick],GuiAtom),char(1),[objectend], '#13'    ['#1'objectstart'#1'code:label([?],i)'#1'objectend'#1'objectstart'#1'code:if(=(?,?),?,?)'#1'objectend'#1'objectstart'#1'code:cell(?,?,?)'#1'objectend'#1'objectend'#1'objectstart'#1'code:MatrixGetColumn'#1'objectend]'#13'   )'#13'  )'#13' ),'#13' GuiControl([PickOfColumn],GuiSet([ItemIndex], 1)),         '#13#13' {--Page 8 : Place Strategy--}'#13#13' {--ASRS Place Strategy--}'#13' GuiControl([rgPlaceStrategy], GuiSet([ItemIndex], Att([asrs_place_strategy], GuiAtom))),'#13' '#13' {--Enable Place Variables on Place Strategies 5 (row + col) and 6 (rack + row + col)--}'#13' Case(GuiControl([rgPlaceStrategy], GuiGet([ItemIndex])),'#13'  do('#13'   Guicontrol([stna5], GuiSet([Visible], 1)),'#13'   Guicontrol([stna6], GuiSet([Visible], 1)),'#13'   Guicontrol([stna7], GuiSet([Visible], 1)),'#13'   Guicontrol([PutInRack], GuiSet([Visible], 0)),'#13'   Guicontrol([PutInRow], GuiSet([Visible], 0)),'#13'   Guicontrol([PutInColumn], GuiSet([Visible], 0)),'#13'   Guicontrol([PutInRack], GuiSet([Enabled], 0)),'#13'   Guicontrol([PutInRow], GuiSet([Enabled], 0)),'#13'   Guicontrol([PutInColumn], GuiSet([Enabled], 0))'#13'  ),'#13'  do('#13'   Guicontrol([stna5], GuiSet([Visible], 1)),'#13'   Guicontrol([stna6], GuiSet([Visible], 1)),'#13'   Guicontrol([stna7], GuiSet([Visible], 1)),'#13'   Guicontrol([PutInRack], GuiSet([Visible], 0)),'#13'   Guicontrol([PutInRow], GuiSet([Visible], 0)),'#13'   Guicontrol([PutInColumn], GuiSet([Visible], 0)),'#13'   Guicontrol([PutInRack], GuiSet([Enabled], 0)),'#13'   Guicontrol([PutInRow], GuiSet([Enabled], 0)),'#13'   Guicontrol([PutInColumn], GuiSet([Enabled], 0))'#13'  ),'#13'  do('#13'   Guicontrol([stna5], GuiSet([Visible], 1)),'#13'   Guicontrol([stna6], GuiSet([Visible], 1)),'#13'   Guicontrol([stna7], GuiSet([Visible], 1)),'#13'   Guicontrol([PutInRack], GuiSet([Visible], 0)),'#13'   Guicontrol([PutInRow], GuiSet([Visible], 0)),'#13'   Guicontrol([PutInColumn], GuiSet([Visible], 0)),'#13'   Guicontrol([PutInRack], GuiSet([Enabled], 0)),'#13'   Guicontrol([PutInRow], GuiSet([Enabled], 0)),'#13'   Guicontrol([PutInColumn], GuiSet([Enabled], 0))'#13'  ),'#13'  do('#13'   Guicontrol([stna5], GuiSet([Visible], 1)),'#13'   Guicontrol([stna6], GuiSet([Visible], 1)),'#13'   Guicontrol([stna7], GuiSet([Visible], 1)),'#13'   Guicontrol([PutInRack], GuiSet([Visible], 0)),'#13'   Guicontrol([PutInRow], GuiSet([Visible], 0)),'#13'   Guicontrol([PutInColumn], GuiSet([Visible], 0)),'#13'   Guicontrol([PutInRack], GuiSet([Enabled], 0)),'#13'   Guicontrol([PutInRow], GuiSet([Enabled], 0)),'#13'   Guicontrol([PutInColumn], GuiSet([Enabled], 0))'#13'  ),'#13'  do('#13'   Guicontrol([stna5], GuiSet([Visible], 1)),'#13'   Guicontrol([stna6], GuiSet([Visible], 0)),'#13'   Guicontrol([stna7], GuiSet([Visible], 0)),'#13'   Guicontrol([PutInRack], GuiSet([Visible], 0)),'#13'   Guicontrol([PutInRow], GuiSet([Visible], 1)),'#13'   Guicontrol([PutInColumn], GuiSet([Visible], 1)),'#13'   Guicontrol([PutInRack], GuiSet([Enabled], 0)),'#13'   Guicontrol([PutInRow], GuiSet([Enabled], 1)),'#13'   Guicontrol([PutInColumn], GuiSet([Enabled], 1))'#13'  ),'#13'  do('#13'   Guicontrol([stna5], GuiSet([Visible], 0)),'#13'   Guicontrol([stna6], GuiSet([Visible], 0)),'#13'   Guicontrol([stna7], GuiSet([Visible], 0)),'#13'   Guicontrol([PutInRack], GuiSet([Visible], 1)),'#13'   Guicontrol([PutInRow], GuiSet([Visible], 1)),'#13'   Guicontrol([PutInColumn], GuiSet([Visible], 1)),'#13'   Guicontrol([PutInRack], GuiSet([Enabled], 1)),'#13'   Guicontrol([PutInRow], GuiSet([Enabled], 1)),'#13'   Guicontrol([PutInColumn], GuiSet([Enabled], 1))'#13'  )'#13' ),'#13' '#13' {--Rack Place Label--}'#13' repeat(6,'#13'  GuiControl([PutInRack],GuiList([Lines],[Add], Advanced_ASRS_get_place_strategy(Count)))'#13' ),'#13' GuiControl([PutInRack],GuiSet([String],textatt([asrs_hrr_rack_to_place],GuiAtom))), '#13#13' {--Row Place Label--}'#13' GuiControl('#13'  [PutInRow],'#13'  GuiSet('#13'   [CodeItems], '#13'   concat(char(1),[objectstart],char(1),[code:],TextAtt([asrs_hrr_row_to_place],GuiAtom),char(1),[objectend], '#13'    ['#1'objectstart'#1'code:label([?],i)'#1'objectend'#1'objectstart'#1'code:if(=(?,?),?,?)'#1'objectend'#1'objectstart'#1'code:cell(?,?,?)'#1'objectend'#1'objectstart'#1'code:MatrixGetRow'#1'objectend]'#13'   )'#13'  )'#13' ),'#13' GuiControl([PutInRow],GuiSet([ItemIndex], 1)),   '#13#13' {--Column Place Label--}'#13' GuiControl('#13'  [PutInColumn],'#13'  GuiSet('#13'   [CodeItems], '#13'   concat(char(1),[objectstart],char(1),[code:],TextAtt([asrs_hrr_col_to_place],GuiAtom),char(1),[objectend], '#13'    ['#1'objectstart'#1'code:label([?],i)'#1'objectend'#1'objectstart'#1'code:if(=(?,?),?,?)'#1'objectend'#1'objectstart'#1'code:cell(?,?,?)'#1'objectend'#1'objectend'#1'objectstart'#1'code:MatrixGetColumn'#1'objectend]'#13'   )'#13'  )'#13' ),'#13' GuiControl([PutInColumn],GuiSet([ItemIndex], 1)),         '#13' '#13' {--Page 9 : Visualization--}'#13#13' {--2D Icon--}'#13' GuiControl([2DIcon],GuiSet([Icon], Icon(GuiAtom))),'#13' '#13' {--3D Icon--}'#13' GuiControl([3DIcon],GuiSet([ItemIndex], Att([asrs_3DIcon],GuiAtom))),  '#13' '#13' {--Show Rack Content--}'#13' Case(GuiControl([rgRackPostions], GuiGet([ItemIndex])),'#13'  do('#13'   Guicontrol([cbShowContentLeftRack], GuiSet([Enabled], 1)),'#13'   Guicontrol([cbShowContentRightRack], GuiSet([Enabled], 1))'#13'  ),'#13'  do('#13'   Guicontrol([cbShowContentLeftRack], GuiSet([Enabled], 1)),'#13'   Guicontrol([cbShowContentRightRack], GuiSet([Enabled], 0))'#13'  ),'#13'  do('#13'   Guicontrol([cbShowContentLeftRack], GuiSet([Enabled], 0)),'#13'   Guicontrol([cbShowContentRightRack], GuiSet([Enabled], 1))'#13'  )'#13' ),'#13' '#13' GuiControl([cbShowContentLeftRack],GuiSet([Checked], Att([hrr_left_show_content],GuiAtom))),'#13' GuiControl([cbShowContentRightRack],GuiSet([Checked], Att([hrr_right_show_content],GuiAtom))),'#13#13' {--Color--}'#13' GuiControl([SRM1Color],GuiSet([Color], Color(GuiAtom))),'#13' GuiControl([SRM2Color],GuiSet([Color], Color(vtp(Att([srm_srm_ref],GuiAtom))))),'#13' GuiControl([RackColor],GuiSet([Color], Color(vtp(Att([hrr_left_ref],GuiAtom))))),'#13' '#13' {--Rack Transparency--}'#13' GuiControl([tbRackTransparency],GuiSet([TrackPosition], Att([hrr_transparency],GuiAtom) * 10)),'#13'  '#13' {Position the form}'#13' Gui_PositionGuiAroundAtom(GuiControl([Advanced ASRS])),'#13' '#13' { *** position the form *** }'#13' GuiControl([Advanced ASRS], GuiSet([Top], MouseY - (0.5 * GuiControl([Advanced ASRS], GuiGet([Height]))))),'#13' GuiControl([Advanced ASRS], GuiSet([Left], MouseX - (0.5 * GuiControl([Advanced ASRS], GuiGet([Width]))))),'#13'  '#13' if(GuiControl([Advanced ASRS], GuiGet([Top])) < 0, GuiControl([Advanced ASRS], GuiSet([Top], 0))),'#13' if(GuiControl([Advanced ASRS], GuiGet([Left])) < 0, GuiControl([Advanced ASRS], GuiSet([Left], 0))),'#13#13' if(GuiControl([Advanced ASRS], GuiGet([Top])) > ScreenHeight - GuiControl([Advanced ASRS], GuiGet([Height])), GuiControl([Advanced ASRS], GuiSet([Top], ScreenHeight - 50 - GuiControl([Advanced ASRS], GuiGet([Height]))))),'#13' if(GuiControl([Advanced ASRS], GuiGet([Left])) > ScreenWidth - GuiControl([Advanced ASRS], GuiGet([Width])), GuiControl([Advanced ASRS], GuiSet([Left], ScreenWidth - 10 - GuiControl([Advanced ASRS], GuiGet([Width]))))),'#13' '#13' GuiRun([Update])'#13')'#13#13#13)))