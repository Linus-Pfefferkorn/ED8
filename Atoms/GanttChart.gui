EDControl(EditForm:
  BorderIcons = set(SystemMenu),
  BorderStyle = Single,
  Caption = str('Gantt Chart'),
  Height = 446,
  Name = str('GanttChart'),
  Position = Default,
  ShowHint = True,
  Top = 217,
  Visible = True,
  Width = 395,
  Controls(
    EDControl(MultiPage:
      ActivePage = 3,
      Align = Client,
      Anchors = set(Left,Top,Right,Bottom),
      Height = 370,
      Left = 0,
      Name = str('MultiPage1'),
      TabOrder = 1,
      Top = 0,
      Width = 395,
      Controls(
        EDControl(SinglePage:
          Caption = str('General'),
          Name = str('SinglePage1'),
          PageIndex = 1,
          Controls(
            EDControl(GroupBox:
              Caption = str(''),
              Height = 64,
              Left = 8,
              Name = str('GroupBox1'),
              TabOrder = 1,
              Top = 8,
              Width = 370,
            Controls(
EDControl(Edit:
              Height = 21,
              Left = 132,
              Name = str('AtomName'),
              TabOrder = 2,
              Top = 26,
              Width = 225),
            EDControl(Label:
              Caption = str('Atom name:'),
              Color = -16777208,
              Left = 12,
              Name = str('StaticText1'),
              Top = 32,
              Width = 60))),
EDControl(GroupBox:
              Caption = str('Label Settings'),
              Height = 168,
              Left = 8,
              Name = str('GroupBox42'),
              TabOrder = 3,
              Top = 88,
              Width = 369,
            Controls(
EDControl(Label:
              Caption = str('Sequence label:'),
              Color = -16777208,
              Left = 12,
              Name = str('StaticText232102'),
              Top = 128,
              Width = 81),
            EDControl(Label:
              Caption = str('Overview label:'),
              Color = -16777208,
              Left = 12,
              Name = str('StaticText232103'),
              Top = 32,
              Width = 77),
            EDControl(Label:
              Caption = str('Activities label:'),
              Color = -16777208,
              Left = 12,
              Name = str('StaticText2321032'),
              Top = 96,
              Width = 74),
            EDControl(Label:
              Caption = str('Time label:'),
              Color = -16777208,
              Left = 12,
              Name = str('StaticText2321022'),
              Top = 64,
              Width = 55),
            EDControl(Edit:
              Height = 21,
              Left = 132,
              Name = str('OverviewLabel'),
              TabOrder = 4,
              Top = 26,
              Width = 225),
            EDControl(Edit:
              Height = 21,
              Left = 132,
              Name = str('TimeLabel'),
              TabOrder = 5,
              Top = 58,
              Width = 225),
            EDControl(Edit:
              Height = 21,
              Left = 132,
              Name = str('ActivitiesLabel'),
              TabOrder = 6,
              Top = 90,
              Width = 225),
            EDControl(Edit:
              Height = 21,
              Left = 132,
              Name = str('SequenceLabel'),
              TabOrder = 7,
              Top = 122,
              Width = 225))),
EDControl(GroupBox:
              Caption = str('Miscelleanous'),
              Height = 64,
              Left = 8,
              Name = str('GroupBox2'),
              TabOrder = 8,
              Top = 272,
              Width = 370,
            Controls(
EDControl(Button:
              Caption = str('&Display chart'),
              Left = 12,
              Name = str('btnDisplayGanttChart'),
              TabOrder = 9,
              Top = 24,
              Width = 100,
              Events(
                Click = str('Do('#13' { Empty any existing Gantt Chart. }'#13' GanttClear,'#13' { Set the labels for this type of chart (which is Gantt). }'#13' GanttLabels(TextAtt([overviewlabel],GuiAtom), TextAtt([timelabel],GuiAtom), TextAtt([activitylabel],GuiAtom), TextAtt([sequencelabel],GuiAtom)),'#13' '#13' { Declare a number of variables that we will use later on. }'#13' Var([activitycount], vbValue),'#13' Var([sequencecount], vbValue),'#13' Var([atmSelected], vbAtom),'#13' Var([imported], vbValue),'#13' '#13' { Initialize the variables. }'#13' activitycount := Att([activitycount], GuiAtom) := 0,'#13' sequencecount := Att([sequencecount], GuiAtom) := 0,'#13' atmSelected := First(GuiAtom),'#13' imported := Att([imported], GuiAtom),'#13' '#13' { Repeat for all rows in the table of the selected atom. }'#13' { Note: atmSelected is a ActivityInfo atom. }'#13' Repeat(nRows(atmSelected),'#13'  { Test if there are any values in the specified cells. }'#13'  if(And(Cell(Count, 4, atmSelected) > 0, Cell(Cell(Count, 4, atmSelected), 3, atmSelected) > 0),'#13'   Do('#13'    { There is a value which means an additional activity. }'#13'    activitycount := activitycount + 1,'#13'    GanttAddActivity(Cell(Cell(Count, 4, atmSelected), 2, atmSelected, 2)),'#13'    SetLabel(Cell(Cell(Count, 4, atmSelected), 1, atmSelected, 2), activitycount, atmSelected)'#13'   )'#13'  )'#13' ),'#13' '#13' { Repeat for all rows in the table of the selected atom.}'#13' { Note: atmSelected is a ActivityInfo atom. }'#13' Repeat(nRows(atmSelected),'#13'  { If the value in the cell is smaller than 0 update the designated label. }'#13'  if(Cell(Count, 3, atmSelected) < 0,'#13'   SetLabel(Cell(Count, 1, atmSelected, 2), 1000 + activitycount, atmSelected)'#13'  )'#13' ),'#13#13' { Repeat for all rows in the table of the selected atom. }'#13' Repeat(nRows(GuiAtom),'#13'  if(Label(Cell(Count, 2, GuiAtom, 2), atmSelected) > 0,'#13'   { Activity already defined}'#13'   Do('#13'    if(sequencecount <> Cell(Count, 5, GuiAtom),'#13'     Do('#13'      sequencecount := Cell(Count, 5, GuiAtom),'#13'      if(GuiControl([chkCustom], GuiGet([Checked])),'#13'        GanttAddSequence(Cell(Count, 6, GuiAtom, 2)),'#13'        GanttAddSequence(Concat(String(sequencecount), [_]))'#13'      )'#13'     )'#13'    ),'#13'    { else add a new job. }'#13'    GanttAddJob(sequencecount, Cell(Count, 3, GuiAtom), Cell(Count, 4, GuiAtom), Label(Cell(Count, 2, GuiAtom, 2), atmSelected)), '#13'    1'#13'   ),'#13'   { else test if there is a value in column 2. }'#13'   if(Or(Cell(Count, 2, GuiAtom) > 0, StringLength(Cell(Count, 2, GuiAtom, 2)) > 0),'#13'    Do('#13'     SetTable(nRows(atmSelected) + 1, 4, atmSelected),'#13'     SetLabel(Cell(Count, 2, GuiAtom, 2), nRows(atmSelected), atmSelected),'#13'     SetCell(nRows(atmSelected), 1, Cell(Count, 2, GuiAtom), atmSelected),'#13'     if(imported <> 0,'#13'      SetCell(nRows(atmSelected), 2, Cell(nRows(atmSelected), 1, atmSelected, 2), atmSelected),'#13'      { else }'#13'      SetCell(nRows(atmSelected), 2, Name(AtomByID(Cell(nRows(atmSelected), 1, atmSelected), Model)), atmSelected)'#13'     ),'#13'     GanttAddActivity(Cell(nRows(atmSelected), 2, atmSelected, 2)),'#13'     activitycount := activitycount + 1,'#13'     SetCell(nRows(atmSelected), 3, activitycount, atmSelected),'#13'     SetCell(nRows(atmSelected), 4, activitycount, atmSelected),'#13'     if(sequencecount <> Cell(Count, 5, GuiAtom),'#13'      Do('#13'       sequencecount := Cell(Count, 5, GuiAtom),'#13'       GanttAddSequence(Concat(String(sequencecount), [_]))'#13'      )'#13'     ),'#13'     GanttAddJob(sequencecount, Cell(Count, 3, GuiAtom), Cell(Count, 4, GuiAtom), Label(Cell(Count, 2, GuiAtom, 2), atmSelected)),'#13'     1'#13'    )   '#13'   )'#13'  )'#13' ),'#13' '#13' Repeat(nRows(First(GuiAtom)),'#13'  SetLabel(Cell(Count, 1, First(GuiAtom), 2), 0, First(GuiAtom))'#13' ),'#13#13' { Don''t show the leg at default. } '#13' GanttLegVisible(False, False),'#13' { Show the Gantt chart. }'#13' GanttShow'#13')'#13))))))),
EDControl(SinglePage:
          Caption = str('Import data'),
          Name = str('SinglePage2'),
          PageIndex = 2,
          Controls(
            EDControl(GroupBox:
              Caption = str('Column Numbers'),
              Height = 264,
              Left = 8,
              Name = str('GroupBox32'),
              TabOrder = 1,
              Top = 8,
              Width = 370,
              Controls(
                EDControl(CheckBox:
                  Caption = str(''),
                  Left = 244,
                  Name = str('chkCustom'),
                  TabOrder = 1,
                  Top = 190,
                  Width = 20,
                  Events(
                    Change = str('{ Change the enable setting of the sequence name column according to the value of the checkbox}'#13'If('#13' GuiControl([chkCustom], GuiGet([Checked])) = True,'#13' Do('#13'  GuiControl([ColumnSequenceNames], GuiSet([Enabled], True)),'#13'  GuiControl([txtSequenceNames], GuiSet([Enabled], True))'#13' ),'#13' Do('#13'  GuiControl([ColumnSequenceNames], GuiSet([Enabled], False)),'#13'  GuiControl([txtSequenceNames], GuiSet([Enabled], False))'#13' )'#13')'#13))),
EDControl(Label:
              Caption = str('Job numbers:'),
              Color = -16777208,
              Left = 12,
              Name = str('StaticText22'),
              Top = 32,
              Width = 67),
            EDControl(Label:
              Caption = str('Activities:'),
              Color = -16777208,
              Left = 12,
              Name = str('StaticText222'),
              Top = 64,
              Width = 49),
            EDControl(Label:
              Caption = str('Start time [s]:'),
              Color = -16777208,
              Left = 12,
              Name = str('StaticText2222'),
              Top = 96),
            EDControl(Label:
              Caption = str('End time [s]:'),
              Color = -16777208,
              Left = 12,
              Name = str('StaticText2223'),
              Top = 128,
              Width = 62),
            EDControl(Label:
              Caption = str('Sequence numbers:'),
              Color = -16777208,
              Left = 12,
              Name = str('StaticText22233'),
              Top = 160,
              Width = 99),
            EDControl(Label:
              Caption = str('Use custom name for sequences:'),
              Color = -16777208,
              Left = 12,
              Name = str('StaticText222333'),
              Top = 192,
              Width = 162),
            EDControl(Edit:
              Height = 21,
              Left = 156,
              Name = str('ColumnForJobNumbers'),
              TabOrder = 2,
              Top = 26,
              Width = 100),
            EDControl(Edit:
              Height = 21,
              Left = 156,
              Name = str('ColumnForActivities'),
              TabOrder = 3,
              Top = 58,
              Width = 100),
            EDControl(Edit:
              Height = 21,
              Left = 156,
              Name = str('ColumnForStartTime'),
              TabOrder = 4,
              Top = 90,
              Width = 100),
            EDControl(Edit:
              Height = 21,
              Left = 156,
              Name = str('ColumnForEndTime'),
              TabOrder = 5,
              Top = 122,
              Width = 100),
            EDControl(Edit:
              Height = 21,
              Left = 156,
              Name = str('ColumnSequenceNumbers'),
              TabOrder = 7,
              Top = 154,
              Width = 100),
            EDControl(Label:
              Caption = str('Sequence names:'),
              Color = -16777208,
              Enabled = False,
              Left = 12,
              Name = str('txtSequenceNames'),
              Top = 224,
              Width = 90),
            EDControl(Edit:
              Enabled = False,
              Height = 21,
              Left = 156,
              Name = str('ColumnSequenceNames'),
              TabOrder = 6,
              Top = 218,
              Width = 100))),
EDControl(GroupBox:
              Caption = str('Miscelleanous'),
              Height = 64,
              Left = 8,
              Name = str('GroupBox23'),
              TabOrder = 8,
              Top = 288,
              Width = 370,
            Controls(
EDControl(Button:
              Caption = str('&Import data'),
              Left = 12,
              Name = str('btnImportData'),
              TabOrder = 9,
              Top = 24,
              Width = 100,
              Events(
                Click = str('Do('#13' Var([atmSelected], vbAtom),'#13' '#13' SelectAtom(Model, In(1, GuiAtom), [Select atom for data import]), '#13' '#13' atmSelected := a,'#13' '#13' SetAtt(16, 1, GuiAtom),'#13' SetTable(0, 0, GuiAtom),'#13' SetTable(nRows(atmSelected), 6, GuiAtom),'#13' '#13' Repeat('#13'  nRows(atmSelected),'#13'  Do('#13'   SetCell(Count, 1, Cell(Count, Att([JobIdCol], GuiAtom), atmSelected), GuiAtom),'#13'   SetCell(Count, 2, Cell(Count, Att([ActivityCol], GuiAtom), atmSelected), GuiAtom),'#13'   SetCell(Count, 3, Cell(Count, Att([BeginCol], GuiAtom), atmSelected), GuiAtom),'#13'   SetCell(Count, 4, Cell(Count, Att([EndCol], GuiAtom), atmSelected), GuiAtom),'#13'   SetCell(Count, 5, Cell(Count, Att([SequenceCol], GuiAtom), atmSelected), GuiAtom),'#13'   If('#13'    GuiControl([chkCustom], GuiGet([Checked])) = True,'#13'    SetCell(Count, 6, Cell(Count, Att([SequenceNameCol], GuiAtom), atmSelected, 2), GuiAtom),'#13'    SetCell(Count, 6, 0, GuiAtom)'#13'   )'#13'  )'#13' ),'#13' '#13' Msg(Concat(String(nRows(atmSelected)), [ rows were imported succesfully from ], Name(atmSelected)))'#13')'#13))))))),
EDControl(SinglePage:
          Caption = str('Specific'),
          Name = str('SinglePage3'),
          PageIndex = 3,
          Controls(
            EDControl(GroupBox:
              Caption = str('Settings'),
              Height = 192,
              Left = 8,
              Name = str('GroupBox22'),
              TabOrder = 1,
              Top = 8,
              Width = 369,
            Controls(
EDControl(Label:
              Caption = str('Standalone import:'),
              Color = -16777208,
              Left = 12,
              Name = str('StaticText2321023'),
              Top = 32,
              Width = 92),
            EDControl(CheckBox:
              Caption = str(''),
              Left = 152,
              Name = str('StandaloneImport'),
              TabOrder = 2,
              Top = 28),
            EDControl(Label:
              Caption = str('Fix the activities:'),
              Color = -16777208,
              Left = 12,
              Name = str('StaticText23210232'),
              Top = 64,
              Width = 82),
            EDControl(CheckBox:
              Caption = str(''),
              Left = 152,
              Name = str('FixTheActivities'),
              TabOrder = 3,
              Top = 60),
            EDControl(Label:
              Caption = str('Log from time [s]:'),
              Color = -16777208,
              Left = 12,
              Name = str('StaticText23210233'),
              Top = 96,
              Width = 84),
            EDControl(ScriptEdit:
              Left = 152,
              Name = str('LogFromTime'),
              TabOrder = 4,
              Top = 90,
              Width = 200),
            EDControl(Label:
              Caption = str('Log until time [s]:'),
              Color = -16777208,
              Left = 12,
              Name = str('StaticText23210234'),
              Top = 128,
              Width = 83),
            EDControl(ScriptEdit:
              Left = 152,
              Name = str('LogUntilTime'),
              TabOrder = 5,
              Top = 122,
              Width = 200),
            EDControl(Label:
              Caption = str('Maximum jobs recorded'),
              Color = -16777208,
              Left = 12,
              Name = str('StaticText23210235'),
              Top = 160,
              Width = 115),
            EDControl(ScriptEdit:
              Left = 152,
              Name = str('MaximumJobsRecorded'),
              TabOrder = 6,
              Top = 154,
              Width = 200))),
EDControl(GroupBox:
              Caption = str('Miscelleanous'),
              Height = 64,
              Left = 8,
              Name = str('GroupBox232'),
              TabOrder = 7,
              Top = 216,
              Width = 370,
            Controls(
EDControl(Button:
              Caption = str('C&hange order'),
              Left = 12,
              Name = str('btnChangeOrder'),
              TabOrder = 8,
              Top = 24,
              Width = 100,
              Events(
                Click = str('do('#13'   setlabel([t-ganntguiref],ptv(guiAtom),model),'#13#13#13'  GuiDestroy([GanttChartOrderChanging]),'#13'  GuiRegister(PDir([\Atoms\GanttChartOrderChanging.gui]), 1),'#13'  GuiCreate([GanttChartOrderChanging], [GanttChartOrderChanging], 0, GuiAtom, 0, 1)'#13')'#13'  '#13))))))))),
    EDControl(Panel:
      Align = Bottom,
      Anchors = set(Left,Right,Bottom),
      BevelOuter = None,
      Caption = str(''),
      Height = 40,
      Left = 0,
      Name = str('Panel1'),
      TabOrder = 2,
      Top = 370,
      Width = 395,
      Controls(
        EDControl(Button:
          Caption = str('&Help'),
          Left = 8,
          Name = str('btnHelp'),
          TabOrder = 1,
          Top = 8,
          Events(
            Click = str('Help(PDir([HELP\ED Help.hlp]), [Gantt Chart])'#13))),
        EDControl(Button:
          Caption = str('&Ok'),
          Default = True,
          Left = 144,
          Name = str('btnOk'),
          TabOrder = 2,
          Top = 8,
          Events(
            Click = str('Do('#13' GuiControl([btnApply]),'#13' GuiRun([Click]),'#13' GuiDestroy'#13')'#13))),
        EDControl(Button:
          Cancel = True,
          Caption = str('&Cancel'),
          Left = 230,
          Name = str('btnCancel'),
          TabOrder = 3,
          Top = 8,
          Events(
            Click = str('GuiDestroy '#13))),
        EDControl(Button:
          Caption = str('&Apply'),
          Left = 312,
          Name = str('btnApply'),
          TabOrder = 4,
          Top = 8,
          Events(
            Click = str('do('#13' '#13'  {Save TextField}'#13'  '#13'  Name(GuiAtom) := GuiControl([AtomName],GuiGet([Text])),'#13#13'  TextAtt([overviewlabel],GuiAtom) := GuiControl([OverviewLabel],GuiGet([Text])),'#13'  '#13'  TextAtt([timelabel],GuiAtom) := GuiControl([TimeLabel],GuiGet([Text])),'#13'  '#13'  TextAtt([activitylabel],GuiAtom) := GuiControl([ActivitiesLabel],GuiGet([Text])),'#13'  '#13'  TextAtt([sequencelabel],GuiAtom) := GuiControl([SequenceLabel],GuiGet([Text])),'#13'  '#13'  Att([jobidcol],GuiAtom) := Value(GuiControl([ColumnForJobNumbers],GuiGet([Text]))),'#13'  '#13'  Att([activitycol],GuiAtom) := value(GuiControl([ColumnForActivities],GuiGet([Text]))),'#13'  '#13'  Att([begincol],GuiAtom) := Value(GuiControl([ColumnForStarttime],GuiGet([Text]))),'#13'  '#13'  Att([endcol],GuiAtom) := Value(GuiControl([ColumnForEndtime],GuiGet([Text]))),'#13'  '#13'  Att([sequencecol],GuiAtom) := Value(GuiControl([ColumnSequenceNumbers],GuiGet([Text]))),'#13'  '#13'  Att([SequenceNameCol],GuiAtom) := Value(GuiControl([ColumnSequenceNames],GuiGet([Text]))),'#13#13'  {Save CheckBox}'#13'  '#13'  Att([imported],GuiAtom) := GuiControl([StandaloneImport],GuiGet([Checked])),'#13'  '#13'  Att([fixedactivities],GuiAtom) := GuiControl([FixTheActivities],GuiGet([Checked])),'#13'  '#13'  Att([Customlabel], GuiAtom) := GuiControl([chkCustom], GuiGet([Checked])),'#13#13'  {Save 4D ScriptField}'#13'  '#13'  SetExprAtt([logfrom],GuiControl([LogFromTime],GuiGet([Code])),GuiAtom),'#13#13'  SetExprAtt([loguntil],GuiControl([LogUntilTime],GuiGet([Code])),GuiAtom),'#13#13'  SetExprAtt([maxjobs],GuiControl([MaximumJobsRecorded],GuiGet([Code])),GuiAtom) '#13')'#13)))))),
  Events(
    Show = str('do('#13' '#13'  {Set Caption}'#13'  if('#13'   atomexists(m(GuiAtom)),'#13'   GuiControl([GanttChart],GuiSet([Caption],concat(name(m(GuiAtom)), [ - ], name(GuiAtom)))),'#13'   GuiControl([GanttChart],GuiSet([Caption],concat([Baseclass - ], name(GuiAtom))))'#13'  ),'#13' '#13'  {Set ActivePage}'#13'     '#13'  GuiControl([MultiPage1]),GuiSet([ActivePage],1),'#13'      '#13'  {Set TextField}'#13'  '#13'  GuiControl([AtomName],GuiSet([Text],name(GuiAtom))),'#13'  '#13'  GuiControl([OverviewLabel],GuiSet([Text],TextAtt([overviewlabel],GuiAtom))),'#13'  '#13'  GuiControl([TimeLabel],GuiSet([Text],TextAtt([timelabel],GuiAtom))),'#13'  '#13'  GuiControl([ActivitiesLabel],GuiSet([Text],TextAtt([activitylabel],GuiAtom))),'#13#13'  GuiControl([SequenceLabel],GuiSet([Text],TextAtt([sequencelabel],GuiAtom))),'#13'  '#13'  GuiControl([ColumnForJobNumbers],GuiSet([Text],TextAtt([jobidcol],GuiAtom))),'#13'  '#13'  GuiControl([ColumnForActivities],GuiSet([Text],TextAtt([activitycol],GuiAtom))),'#13#13'  GuiControl([ColumnForStarttime],GuiSet([Text],TextAtt([begincol],GuiAtom))),'#13'  '#13'  GuiControl([ColumnForEndtime],GuiSet([Text],TextAtt([endcol],GuiAtom))),'#13'  '#13'  GuiControl([ColumnSequenceNumbers],GuiSet([Text],TextAtt([sequencecol],GuiAtom))),'#13'  '#13'  GuiControl([ColumnSequenceNames],GuiSet([Text],TextAtt([SequenceNameCol],GuiAtom))),'#13' '#13'  {Set CheckBox}'#13'  '#13'  GuiControl([StandaloneImport],GuiSet([Checked], Att([imported],GuiAtom))),'#13'  '#13'  GuiControl([FixTheActivities],GuiSet([Checked], Att([fixedactivities],GuiAtom))),'#13'  '#13'  GuiControl([chkCustom], GuiSet([Checked], Att([Customlabel], GuiAtom))),'#13'  '#13'  If('#13'   GuiControl([chkCustom], GuiGet([Checked])) = TRUE,'#13'   Do('#13'    GuiControl([ColumnSequenceNames], GuiSet([Enabled], TRUE)),'#13'    GuiControl([txtSequenceNames], GuiSet([Enabled], TRUE))'#13'   )'#13'  ),'#13#13'  {Set 4D ScriptField}'#13'  '#13'  GuiControl([LogFromTime],GuiSet([Code], TextAtt([logfrom],GuiAtom))),'#13'  '#13'  GuiControl([LogUntilTime],GuiSet([Code], TextAtt([loguntil],GuiAtom))),'#13'  '#13'  GuiControl([MaximumJobsRecorded],GuiSet([Code], TextAtt([maxjobs],GuiAtom))),'#13'  '#13'  {Position the form}'#13'  Gui_PositionGuiAroundAtom(GuiControl([GanttChart])),       '#13#13'  GuiRun([Update])'#13')'#13)))

