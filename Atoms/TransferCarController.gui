EDControl(EditForm:
  BorderIcons = set(SystemMenu),
  BorderStyle = Single,
  Caption = str('Transfer Car-Controller'),
  Height = 600,
  Left = 127,
  Name = str('formTransferCarController'),
  ShowHint = True,
  Top = 94,
  Visible = True,
  Width = 395,
  Controls(
    EDControl(MultiPage:
      ActivePage = 1,
      Height = 560,
      Left = 0,
      Name = str('MultiPage1'),
      TabOrder = 1,
      Top = 0,
      Width = 395,
      Controls(
        EDControl(SinglePage:
          Caption = str('General'),
          Name = str('spGeneral'),
          PageIndex = 1,
          Controls(
            EDControl(GroupBox:
              Caption = str('General'),
              Height = 193,
              Left = 8,
              Name = str('GroupBox1223'),
              TabOrder = 1,
              Top = 8,
              Width = 370,
              Controls(
                EDControl(Edit:
                  Height = 21,
                  Left = 160,
                  Name = str('ebName'),
                  TabOrder = 1,
                  Top = 24,
                  Width = 193),
                EDControl(Edit:
                  Height = 21,
                  Left = 160,
                  Name = str('ebRotation'),
                  TabOrder = 2,
                  Top = 56,
                  Width = 105),
                EDControl(Edit:
                  Height = 21,
                  Left = 160,
                  Name = str('ebLength'),
                  TabOrder = 3,
                  Top = 88,
                  Width = 105),
                EDControl(Edit:
                  Height = 21,
                  Left = 160,
                  Name = str('ebWidth'),
                  TabOrder = 4,
                  Top = 120,
                  Width = 105),
                EDControl(Edit:
                  Height = 21,
                  Left = 160,
                  Name = str('ebZLocation'),
                  TabOrder = 5,
                  Top = 152,
                  Width = 105),
                EDControl(Label:
                  Caption = str('Atom name:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 16,
                  Name = str('Label1'),
                  Top = 32,
                  Width = 56),
                EDControl(Label:
                  Caption = str('Rotation [°]:'),
                  Color = -50331640,
                  Height = 13,
                  Left = 16,
                  Name = str('Label122'),
                  Top = 64,
                  Width = 56),
                EDControl(Label:
                  Caption = str('Length [m]:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 16,
                  Name = str('Label132'),
                  Top = 96,
                  Width = 53),
                EDControl(Label:
                  Caption = str('Width [m]:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 16,
                  Name = str('Label142'),
                  Top = 128,
                  Width = 48),
                EDControl(Label:
                  Caption = str('Z location [m]:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 16,
                  Name = str('Label152'),
                  Top = 160,
                  Width = 67))),
            EDControl(GroupBox:
              Caption = str('History'),
              Height = 73,
              Left = 8,
              Name = str('GroupBox2'),
              TabOrder = 2,
              Top = 216,
              Width = 369,
              Controls(
                EDControl(Label:
                  Caption = str('Save finsihed orders:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 16,
                  Name = str('Label6'),
                  Top = 32,
                  Width = 99),
                EDControl(CheckBox:
                  Caption = str(''),
                  Left = 160,
                  Name = str('chbWriteFinishedOrders'),
                  TabOrder = 1,
                  Top = 32,
                  Width = 33))))),
        EDControl(SinglePage:
          Caption = str('Transfer car'),
          Name = str('spTransferCar'),
          PageIndex = 2,
          Controls(
            EDControl(GroupBox:
              Caption = str('General'),
              Height = 57,
              Left = 16,
              Name = str('GroupBox122'),
              TabOrder = 3,
              Top = 8,
              Visible = False,
              Width = 370,
              Controls(
                EDControl(ComboBox:
                  Height = 21,
                  Left = 184,
                  Name = str('cobNoOfTransferCars'),
                  Style = DropDownList,
                  TabOrder = 1,
                  Top = 24,
                  Width = 81,
                  Events(
                    Change = str('do('#13' { start with first transfer car after changinfg the number of cars }'#13' label([CurrentTransferCarPage], GuiAtom) := 1,'#13' '#13' { set table dimension }'#13' GuiControl([tblGUITransferCar],'#13'  do('#13'   GuiSet([RowCount], GuiControl([cobNoOfTransferCars], GuiGet([ItemIndex])) + 1),'#13'   GuiSet([ColCount], BUILDUPTABLETRANSFERCAR_NUMBEROFCOLUMNS + 1)'#13'  )'#13' ),'#13' '#13' { update transfer car index in tblGUITransferCar }'#13' Repeat('#13'  GuiControl([cobNoOfTransferCars], GuiGet([ItemIndex])),'#13'  GuiControl([tblGUITransferCar], GuiSet([Cells], Count, BUILDUPTABLETRANSFERCAR_COLUMN_TRANSFERCARID, string(Count)))'#13' ),'#13' '#13' { make sure tblGUITransferCar contains at least necessary default contents }'#13' Repeat('#13'  GuiControl([cobNoOfTransferCars], GuiGet([ItemIndex])),'#13'  do('#13'   { '' transfer car name }'#13'   if('#13'    StringLength(GuiControl([tblGUITransferCar], GuiGet([Cells], Count, BUILDUPTABLETRANSFERCAR_COLUMN_TRANSFERCARNAME))) = 0,'#13'    GuiControl([tblGUITransferCar],'#13'     GuiSet('#13'      [Cells],'#13'      Count,'#13'      BUILDUPTABLETRANSFERCAR_COLUMN_TRANSFERCARNAME,'#13'      concat([TransferCar], string(label([CurrentTransferCarPage], GuiAtom)))'#13'     )'#13'    )'#13'   ),'#13#13'   { '' initial x location }'#13'   if('#13'    value(GuiControl([tblGUITransferCar], GuiGet([Cells], Count, BUILDUPTABLETRANSFERCAR_COLUMN_XSTARTLOCATION))) <= 0,'#13'    GuiControl([tblGUITransferCar],'#13'     GuiSet('#13'      [Cells],'#13'      Count,'#13'      BUILDUPTABLETRANSFERCAR_COLUMN_XSTARTLOCATION,'#13'      [0]'#13'     )'#13'    )'#13'   ),'#13'   '#13'   { '' initial transport height }'#13'   if('#13'    value(GuiControl([tblGUITransferCar], GuiGet([Cells], Count, BUILDUPTABLETRANSFERCAR_COLUMN_TRANSPORTHEIGHT))) <= 0,'#13'    GuiControl([tblGUITransferCar],'#13'     GuiSet('#13'      [Cells],'#13'      Count,'#13'      BUILDUPTABLETRANSFERCAR_COLUMN_TRANSPORTHEIGHT,'#13'      [1]'#13'     )'#13'    )'#13'   ),'#13'   '#13'   { '' motion sequence }'#13'   if('#13'    value(GuiControl([tblGUITransferCar], GuiGet([Cells], Count, BUILDUPTABLETRANSFERCAR_COLUMN_MOTIONSEQUENCE))) <= 0,'#13'    GuiControl([tblGUITransferCar],'#13'     GuiSet('#13'      [Cells],'#13'      Count,'#13'      BUILDUPTABLETRANSFERCAR_COLUMN_MOTIONSEQUENCE,'#13'      [1]'#13'     )'#13'    )'#13'   ),'#13#13'   { '' storage unit width }'#13'   if('#13'    value(GuiControl([tblGUITransferCar], GuiGet([Cells], Count, BUILDUPTABLETRANSFERCAR_COLUMN_WIDTHOFSTORAGEUNIT))) <= 0,'#13'    GuiControl([tblGUITransferCar],'#13'     GuiSet('#13'      [Cells],'#13'      Count,'#13'      BUILDUPTABLETRANSFERCAR_COLUMN_WIDTHOFSTORAGEUNIT,'#13'      [1]'#13'     )'#13'    )'#13'   ),'#13#13'   {'' no. of storage units }'#13'   if('#13'    value(GuiControl([tblGUITransferCar], GuiGet([Cells], Count, BUILDUPTABLETRANSFERCAR_COLUMN_NOOFSTORAGEUNITS))) <= 0,'#13'    GuiControl([tblGUITransferCar],'#13'     GuiSet('#13'      [Cells],'#13'      Count,'#13'      BUILDUPTABLETRANSFERCAR_COLUMN_NOOFSTORAGEUNITS,'#13'      [1]'#13'     )'#13'    )'#13'   ),'#13#13'   { '' 3D animation }'#13'   if('#13'    value(GuiControl([tblGUITransferCar], GuiGet([Cells], Count, BUILDUPTABLETRANSFERCAR_COLUMN_3DANIMATION))) <= 0,'#13'    GuiControl([tblGUITransferCar],'#13'     GuiSet('#13'      [Cells],'#13'      Count,'#13'      BUILDUPTABLETRANSFERCAR_COLUMN_3DANIMATION,'#13'      [1]'#13'     )'#13'    )'#13'   )'#13'  )'#13' ),'#13' '#13' GuiRun([Update])'#13')'#13))),
                EDControl(Label:
                  Caption = str('No. of transfer cars:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 16,
                  Name = str('Label2'),
                  Top = 32,
                  Width = 93))),
            EDControl(GroupBox:
              Caption = str('Single transfer car'),
              Height = 353,
              Left = 8,
              Name = str('gboSingelTransferCar'),
              TabOrder = 1,
              Top = 8,
              Width = 370,
              Controls(
                EDControl(Edit:
                  Height = 21,
                  Left = 160,
                  Name = str('ebInitialXLocation'),
                  TabOrder = 2,
                  Top = 56,
                  Width = 81,
                  Events(
                    Change = str('GuiControl([tblGUITransferCar],'#13' GuiSet('#13'  [Cells],'#13'  label([CurrentTransferCarPage], GuiAtom),'#13'  BUILDUPTABLETRANSFERCAR_COLUMN_XSTARTLOCATION,'#13'  GuiControl([ebInitialXLocation], GuiGet([Text]))'#13' )'#13')'#13),
                    Exit = str('{ // check user input }'#13'if('#13' IsNumeric(GuiControl([ebInitialXLocation], GuiGet([Text]))),'#13#13' { valid user input }'#13' do('#13'  GuiControl([tblGUITransferCar],'#13'   GuiSet('#13'    [Cells],'#13'    label([CurrentTransferCarPage], GuiAtom),'#13'    BUILDUPTABLETRANSFERCAR_COLUMN_XSTARTLOCATION,'#13'    GuiControl([ebInitialXLocation], GuiGet([Text]))'#13'   )'#13'  )'#13' ),'#13#13' { invalid user input - set default name in field and GUI table }'#13' do('#13'  GuiControl([ebInitialXLocation], GuiSet([Text], [0])),'#13'  GuiControl([tblGUITransferCar],'#13'   GuiSet('#13'    [Cells],'#13'    label([CurrentTransferCarPage], GuiAtom),'#13'    BUILDUPTABLETRANSFERCAR_COLUMN_XSTARTLOCATION,'#13'    [0]'#13'   )'#13'  ),'#13'  msg([Invalid user input!], 1)'#13' )'#13')'#13))),
                EDControl(ComboBox:
                  Height = 21,
                  Left = 160,
                  Name = str('cobNoOfStorageUnits'),
                  Style = DropDownList,
                  TabOrder = 5,
                  Top = 152,
                  Width = 81,
                  Events(
                    Change = str('GuiControl([tblGUITransferCar],'#13' GuiSet('#13'  [Cells],'#13'  label([CurrentTransferCarPage], GuiAtom),'#13'  BUILDUPTABLETRANSFERCAR_COLUMN_NOOFSTORAGEUNITS,'#13'  string(GuiControl([cobNoOfStorageUnits], GuiGet([ItemIndex])))'#13' )'#13')'#13#13))),
                EDControl(Edit:
                  Height = 21,
                  Left = 160,
                  Name = str('ebStorageUnitWidth'),
                  TabOrder = 6,
                  Top = 184,
                  Width = 81,
                  Events(
                    Change = str('GuiControl([tblGUITransferCar],'#13' GuiSet('#13'  [Cells],'#13'  label([CurrentTransferCarPage], GuiAtom),'#13'  BUILDUPTABLETRANSFERCAR_COLUMN_WIDTHOFSTORAGEUNIT,'#13'  GuiControl([ebStorageUnitWidth], GuiGet([Text]))'#13' )'#13')'#13),
                    Exit = str('{ // check user input }'#13'if('#13' IsNumeric(GuiControl([ebStorageUnitWidth], GuiGet([Text]))),'#13#13' { valid user input }'#13' do('#13'  GuiControl([tblGUITransferCar],'#13'   GuiSet('#13'    [Cells],'#13'    label([CurrentTransferCarPage], GuiAtom),'#13'    BUILDUPTABLETRANSFERCAR_COLUMN_WIDTHOFSTORAGEUNIT,'#13'    GuiControl([ebStorageUnitWidth], GuiGet([Text]))'#13'   )'#13'  )'#13' ),'#13#13' { invalid user input - set default name in field and GUI table }'#13' do('#13'  GuiControl([ebStorageUnitWidth], GuiSet([Text], [1])),'#13'  GuiControl([tblGUITransferCar],'#13'   GuiSet('#13'    [Cells],'#13'    label([CurrentTransferCarPage], GuiAtom),'#13'    BUILDUPTABLETRANSFERCAR_COLUMN_WIDTHOFSTORAGEUNIT,'#13'    [1]'#13'   )'#13'  ),'#13'  msg([Invalid user input!], 1)'#13' )'#13')'#13))),
                EDControl(ComboBox:
                  Height = 21,
                  Items = str('Simple box'#13#10'Roll conveyor'#13#10'Belt conveyor'#13#10'Chain conveyor'#13#10),
                  Left = 160,
                  Name = str('cobTransferCar3DAnimation'),
                  Style = DropDownList,
                  TabOrder = 7,
                  Top = 216,
                  Width = 193,
                  Events(
                    Change = str('GuiControl([tblGUITransferCar],'#13' GuiSet('#13'  [Cells],'#13'  label([CurrentTransferCarPage], GuiAtom),'#13'  BUILDUPTABLETRANSFERCAR_COLUMN_3DANIMATION,'#13'  string(GuiControl([cobTransferCar3DAnimation], GuiGet([ItemIndex])))'#13' )'#13')'#13))),
                EDControl(Edit:
                  Height = 21,
                  Left = 160,
                  Name = str('ebTransferCarName'),
                  TabOrder = 1,
                  Top = 24,
                  Width = 193,
                  Events(
                    Change = str('GuiControl([tblGUITransferCar],'#13' GuiSet('#13'  [Cells],'#13'  label([CurrentTransferCarPage], GuiAtom),'#13'  BUILDUPTABLETRANSFERCAR_COLUMN_TRANSFERCARNAME,'#13'  GuiControl([ebTransferCarName], GuiGet([Text]))'#13' )'#13')'#13),
                    Exit = str('{ // check user input }'#13'if('#13' StringLength(GuiControl([ebTransferCarName], GuiGet([Text]))) > 0,'#13#13' { valid user input }'#13' do('#13'  GuiControl([tblGUITransferCar],'#13'   GuiSet('#13'    [Cells],'#13'    label([CurrentTransferCarPage], GuiAtom),'#13'    BUILDUPTABLETRANSFERCAR_COLUMN_TRANSFERCARNAME,'#13'    GuiControl([ebTransferCarName], GuiGet([Text]))'#13'   )'#13'  )'#13' ),'#13#13' { invalid user input - set default name in field and GUI table }'#13' do('#13'  GuiControl([ebTransferCarName], GuiSet([Text], concat([TransferCar], string(label([CurrentTransferCarPage], GuiAtom))))),'#13'  GuiControl([tblGUITransferCar],'#13'   GuiSet('#13'    [Cells],'#13'    label([CurrentTransferCarPage], GuiAtom),'#13'    BUILDUPTABLETRANSFERCAR_COLUMN_TRANSFERCARNAME,'#13'    concat([TransferCar], string(label([CurrentTransferCarPage], GuiAtom)))'#13'   )'#13'  ),'#13'  msg([Invalid user input!], 1)'#13' )'#13')'#13))),
                EDControl(Table:
                  DefaultWidth = 45,
                  Height = 51,
                  Left = 248,
                  Name = str('tblGUITransferCar'),
                  Options = set(FixedVertLine,FixedHorzLine,VertLine,HorzLine,RangeSelect,Editing),
                  TabOrder = 14,
                  Top = 154,
                  Visible = False,
                  Width = 104),
                EDControl(Button:
                  Caption = str('|<'),
                  Left = 16,
                  Name = str('btnMoveToFirstTCar'),
                  TabOrder = 8,
                  Top = 312,
                  Events(
                    Click = str('do('#13' label([CurrentTransferCarPage], GuiAtom) := 1,'#13' '#13' GuiRun([Update])'#13')'#13))),
                EDControl(Button:
                  Caption = str('<<'),
                  Left = 104,
                  Name = str('btnStepOneBackTCar'),
                  TabOrder = 9,
                  Top = 312,
                  Events(
                    Click = str('do('#13' dec(label([CurrentTransferCarPage], GuiAtom)),'#13' '#13' GuiRun([Update])'#13')'#13))),
                EDControl(Button:
                  Caption = str('>>'),
                  Left = 192,
                  Name = str('btnStepOneAheadTCar'),
                  TabOrder = 10,
                  Top = 312,
                  Events(
                    Click = str('do('#13' inc(label([CurrentTransferCarPage], GuiAtom)),'#13' '#13' GuiRun([Update])'#13')'#13))),
                EDControl(Button:
                  Caption = str('>|'),
                  Left = 280,
                  Name = str('btnMoveToLastTCar'),
                  TabOrder = 11,
                  Top = 312,
                  Events(
                    Click = str('do('#13' label([CurrentTransferCarPage], GuiAtom) := GuiControl([cobNoOfTransferCars], GuiGet([ItemIndex])),'#13' '#13' GuiRun([Update])'#13')'#13))),
                EDControl(Button:
                  Caption = str('Delete dataset'),
                  Height = 22,
                  Left = 251,
                  Name = str('btnDeleteTCar'),
                  TabOrder = 13,
                  Top = 88,
                  Width = 100,
                  Events(
                    Click = str('do('#13' { update no of transfer cars - reduce total amount by one (one minimum!) }'#13' GuiControl([cobNoOfTransferCars], GuiSet([ItemIndex], '#13'  GuiControl([cobNoOfTransferCars], GuiGet([ItemIndex])) - 1)'#13' ),'#13#13' { update tblGUITransferCar - delete refering row }'#13' GuiControl([tblGUITransferCar], GuiList([Rows], [Delete], label([CurrentTransferCarPage], GuiAtom) + 1)),'#13#13' { update index label to current transfer car page }'#13' if('#13'  label([CurrentTransferCarPage], GuiAtom) > 1,'#13'  label([CurrentTransferCarPage], GuiAtom) := label([CurrentTransferCarPage], GuiAtom) - 1,'#13'  label([CurrentTransferCarPage], GuiAtom) := 1'#13' ),'#13#13' { update transfer car index in tblGUITransferCar }'#13' Repeat('#13'  GuiControl([cobNoOfTransferCars], GuiGet([ItemIndex])),'#13'  GuiControl([tblGUITransferCar], GuiSet([Cells], Count, BUILDUPTABLETRANSFERCAR_COLUMN_TRANSFERCARID, string(Count)))'#13' ),'#13#13' GuiRun([Update])'#13')'#13))),
                EDControl(Edit:
                  Height = 21,
                  Left = 160,
                  Name = str('ebInitialTransportHeight'),
                  TabOrder = 3,
                  Top = 88,
                  Width = 81,
                  Events(
                    Change = str('GuiControl([tblGUITransferCar],'#13' GuiSet('#13'  [Cells],'#13'  label([CurrentTransferCarPage], GuiAtom),'#13'  BUILDUPTABLETRANSFERCAR_COLUMN_TRANSPORTHEIGHT,'#13'  GuiControl([ebInitialTransportHeight], GuiGet([Text]))'#13' )'#13')'#13),
                    Exit = str('{ // check user input }'#13'if('#13' IsNumeric(GuiControl([ebInitialTransportHeight], GuiGet([Text]))),'#13#13' { valid user input }'#13' do('#13'  GuiControl([tblGUITransferCar],'#13'   GuiSet('#13'    [Cells],'#13'    label([CurrentTransferCarPage], GuiAtom),'#13'    BUILDUPTABLETRANSFERCAR_COLUMN_TRANSPORTHEIGHT,'#13'    GuiControl([ebInitialTransportHeight], GuiGet([Text]))'#13'   )'#13'  )'#13' ),'#13#13' { invalid user input - set default name in field and GUI table }'#13' do('#13'  GuiControl([ebInitialTransportHeight], GuiSet([Text], [1])),'#13'  GuiControl([tblGUITransferCar],'#13'   GuiSet('#13'    [Cells],'#13'    label([CurrentTransferCarPage], GuiAtom),'#13'    BUILDUPTABLETRANSFERCAR_COLUMN_TRANSPORTHEIGHT,'#13'    [0]'#13'   )'#13'  ),'#13'  msg([Invalid user input!], 1)'#13' )'#13')'#13))),
                EDControl(ComboBox:
                  Height = 21,
                  Items = str('Move first and lift at location'#13#10'Move and lift together'#13#10),
                  Left = 160,
                  Name = str('cobMotionSequence'),
                  Style = DropDownList,
                  TabOrder = 4,
                  Top = 120,
                  Width = 193,
                  Events(
                    Change = str('GuiControl([tblGUITransferCar],'#13' GuiSet('#13'  [Cells],'#13'  label([CurrentTransferCarPage], GuiAtom),'#13'  BUILDUPTABLETRANSFERCAR_COLUMN_MOTIONSEQUENCE,'#13'  string(GuiControl([cobMotionSequence], GuiGet([ItemIndex])))'#13' )'#13')'#13))),
                EDControl(Button:
                  Caption = str('View dataset'),
                  Height = 22,
                  Left = 251,
                  Name = str('btnShowAllParameters2'),
                  TabOrder = 12,
                  Top = 56,
                  Width = 100,
                  Events(
                    Click = str('do('#13' GuiDestroy([TransferCar]),'#13' GuiRegister(PDir([\Atoms\TransferCar.gui]), 1),'#13' GuiCreate([formTransferCar], [TransferCar], 0, GuiAtom, 0, 2)'#13')'#13))),
                EDControl(Label:
                  Caption = str('Name:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('Label222'),
                  Top = 32,
                  Width = 31),
                EDControl(Label:
                  Caption = str('Initial x-location [m]:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('Label2222'),
                  Top = 64,
                  Width = 92),
                EDControl(Label:
                  Caption = str('Initial transport height [m]:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('Label223'),
                  Top = 96,
                  Width = 120),
                EDControl(Label:
                  Caption = str('Motion sequence:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('Label224'),
                  Top = 128,
                  Width = 85),
                EDControl(Label:
                  Caption = str('No. of storage units:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('Label225'),
                  Top = 160,
                  Width = 95),
                EDControl(Label:
                  Caption = str('Width of storage unit [m]:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('Label226'),
                  Top = 192,
                  Width = 118),
                EDControl(Label:
                  Caption = str('3D Icon:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('Label227'),
                  Top = 224,
                  Width = 41))),
            EDControl(GroupBox:
              Caption = str('Check or modify current settings'),
              Height = 65,
              Left = 8,
              Name = str('GroupBox5'),
              TabOrder = 2,
              Top = 368,
              Width = 370,
              Controls(
                EDControl(Button:
                  Caption = str('Rebuild transfer cars'),
                  Left = 16,
                  Name = str('btnUpdateTCar2'),
                  TabOrder = 1,
                  Top = 24,
                  Width = 163,
                  Events(
                    Click = str('do('#13' '#13' {--Step 1 : update transfer car table--}'#13#13' var([tblBuildUpTransferCar], vbAtom, TransferCarController__GetBuildUpTableTransferCar(GuiAtom)),'#13' var([valNoofRows], vbValue),'#13#13' { get table dimensions and setup atom table accordingly }'#13' valNoofRows := GuiControl([tblGUITransferCar], GuiGet([RowCount])) - 1,'#13' SetTable(valNoofRows, BUILDUPTABLETRANSFERCAR_NUMBEROFCOLUMNS, tblBuildUpTransferCar),'#13#13' { copy GUI table into atom table - container transfer car table }'#13' GuiControl([tblGUITransferCar],'#13'  GuiList([Cells], [Save],'#13'   tblBuildUpTransferCar,'#13'   1, 1, 1, 1, '#13'   valNoofRows, BUILDUPTABLETRANSFERCAR_NUMBEROFCOLUMNS'#13'  )'#13' ),'#13#13' {--Step 2 : rebuild transfer cars--}'#13' '#13' TransferCarController__CreateTransferCar(GuiAtom)'#13' '#13')'#13))),
                EDControl(Button:
                  Caption = str('View transfer car table'),
                  Left = 192,
                  Name = str('btnCurrentTransferCarTable'),
                  TabOrder = 2,
                  Top = 24,
                  Width = 163,
                  Events(
                    Click = str('do('#13' BuildUpTableTransferCar__Headers(TransferCarController__GetBuildUpTableTransferCar(GuiAtom)),'#13' EditTable(TransferCarController__GetBuildUpTableTransferCar(GuiAtom))'#13')'#13))))))),
        EDControl(SinglePage:
          Caption = str('Transfer station'),
          Name = str('spTransferStation'),
          PageIndex = 3,
          Controls(
            EDControl(GroupBox:
              Caption = str('General'),
              Height = 57,
              Left = 8,
              Name = str('GroupBox1222'),
              TabOrder = 1,
              Top = 8,
              Width = 370,
              Controls(
                EDControl(ComboBox:
                  Height = 21,
                  Left = 160,
                  Name = str('cobNoOfTransferStations'),
                  Style = DropDownList,
                  TabOrder = 1,
                  Top = 24,
                  Width = 81,
                  Events(
                    Change = str('do('#13' { start with first transfer station after changinfg the number of stations }'#13' label([CurrentTransferStationPage], GuiAtom) := 1,'#13' '#13' { set table dimension }'#13' GuiControl([tblGUITransferStation],'#13'  do('#13'   GuiSet([RowCount], GuiControl([cobNoOfTransferStations], GuiGet([ItemIndex])) + 1),'#13'   GuiSet([ColCount], BUILDUPTABLETRANSFERSTATION_NUMBEROFCOLUMNS + 1)'#13'  )'#13' ),'#13' '#13' { update transfer station index in tblGUITransferStation }'#13' Repeat('#13'  GuiControl([cobNoOfTransferStations], GuiGet([ItemIndex])),'#13'  GuiControl([tblGUITransferStation], GuiSet([Cells], Count, BUILDUPTABLETRANSFERSTATION_COLUMN_TRANSFERSTATIONID, string(Count)))'#13' ),'#13' '#13' { make sure tblGUITransferStation contains at least necessary default contents }'#13' Repeat('#13'  GuiControl([cobNoOfTransferStations], GuiGet([ItemIndex])),'#13'  do('#13'   '#13'   { '' transfer station ID }'#13'   if('#13'    StringLength(GuiControl([tblGUITransferStation], GuiGet([Cells], Count, BUILDUPTABLETRANSFERSTATION_COLUMN_ID))) = 0,'#13'    GuiControl([tblGUITransferStation],'#13'     GuiSet('#13'      [Cells],'#13'      Count,'#13'      BUILDUPTABLETRANSFERSTATION_COLUMN_ID,'#13'      String(Count)'#13'     )'#13'    )'#13'   ),'#13'   '#13'   { '' transfer station name }'#13'   if('#13'    StringLength(GuiControl([tblGUITransferStation], GuiGet([Cells], Count, BUILDUPTABLETRANSFERSTATION_COLUMN_TRANSFERSTATIONNAME))) = 0,'#13'    GuiControl([tblGUITransferStation],'#13'     GuiSet('#13'      [Cells],'#13'      Count,'#13'      BUILDUPTABLETRANSFERSTATION_COLUMN_TRANSFERSTATIONNAME,'#13'      concat([TS-], string(Count))'#13'     )'#13'    )'#13'   ),'#13#13'   { '' x location first port }'#13'   if('#13'    value(GuiControl([tblGUITransferStation], GuiGet([Cells], Count, BUILDUPTABLETRANSFERSTATION_COLUMN_XLOCATION))) <= 0,'#13'    GuiControl([tblGUITransferStation],'#13'     GuiSet('#13'      [Cells],'#13'      Count,'#13'      BUILDUPTABLETRANSFERSTATION_COLUMN_XLOCATION,'#13'      [0]'#13'     )'#13'    )'#13'   ),'#13'   '#13'   {'' no. of ports }'#13'   if('#13'    value(GuiControl([tblGUITransferStation], GuiGet([Cells], Count, BUILDUPTABLETRANSFERSTATION_COLUMN_NUMBEROFPORTS))) <= 0,'#13'    GuiControl([tblGUITransferStation],'#13'     GuiSet('#13'      [Cells],'#13'      Count,'#13'      BUILDUPTABLETRANSFERSTATION_COLUMN_NUMBEROFPORTS,'#13'      [1]'#13'     )'#13'    )'#13'   ),'#13#13'   { '' port length }'#13'   if('#13'    value(GuiControl([tblGUITransferStation], GuiGet([Cells], Count, BUILDUPTABLETRANSFERSTATION_COLUMN_LENGTHOFPORT))) <= 0,'#13'    GuiControl([tblGUITransferStation],'#13'     GuiSet('#13'      [Cells],'#13'      Count,'#13'      BUILDUPTABLETRANSFERSTATION_COLUMN_LENGTHOFPORT,'#13'      [1]'#13'     )'#13'    )'#13'   ),'#13#13'   { '' port width }'#13'   if('#13'    value(GuiControl([tblGUITransferStation], GuiGet([Cells], Count, BUILDUPTABLETRANSFERSTATION_COLUMN_WIDTHOFPORT))) <= 0,'#13'    GuiControl([tblGUITransferStation],'#13'     GuiSet('#13'      [Cells],'#13'      Count,'#13'      BUILDUPTABLETRANSFERSTATION_COLUMN_WIDTHOFPORT,'#13'      [1]'#13'     )'#13'    )'#13'   ),'#13'   '#13'   { '' port type }'#13'   if('#13'    value(GuiControl([tblGUITransferStation], GuiGet([Cells], Count, BUILDUPTABLETRANSFERSTATION_COLUMN_PORTTYPE))) <= 0,'#13'    GuiControl([tblGUITransferStation],'#13'     GuiSet('#13'      [Cells],'#13'      Count,'#13'      BUILDUPTABLETRANSFERSTATION_COLUMN_PORTTYPE,'#13'      [3]'#13'     )'#13'    )'#13'   ),'#13'   '#13'   { '' port position }'#13'   if('#13'    value(GuiControl([tblGUITransferStation], GuiGet([Cells], Count, BUILDUPTABLETRANSFERSTATION_COLUMN_YPOSITION))) <= 0,'#13'    GuiControl([tblGUITransferStation],'#13'     GuiSet('#13'      [Cells],'#13'      Count,'#13'      BUILDUPTABLETRANSFERSTATION_COLUMN_YPOSITION,'#13'      [1]'#13'     )'#13'    )'#13'   ),'#13#13'   { '' 3D animation }'#13'   if('#13'    value(GuiControl([tblGUITransferStation], GuiGet([Cells], Count, BUILDUPTABLETRANSFERSTATION_COLUMN_3DANIMATION))) <= 0,'#13'    GuiControl([tblGUITransferStation],'#13'     GuiSet('#13'      [Cells],'#13'      Count,'#13'      BUILDUPTABLETRANSFERSTATION_COLUMN_3DANIMATION,'#13'      [1]'#13'     )'#13'    )'#13'   ),'#13'   '#13'   { '' description }'#13'   if('#13'    StringLength(GuiControl([tblGUITransferStation], GuiGet([Cells], Count, BUILDUPTABLETRANSFERSTATION_COLUMN_DESCRIPTION))) = 0,'#13'    GuiControl([tblGUITransferStation],'#13'     GuiSet('#13'      [Cells],'#13'      Count,'#13'      BUILDUPTABLETRANSFERSTATION_COLUMN_DESCRIPTION,'#13'      concat([Station], string(Count))'#13'     )'#13'    )'#13'   ),'#13'   '#13'   { '' height }'#13'   if('#13'    StringLength(GuiControl([tblGUITransferStation], GuiGet([Cells], Count, BUILDUPTABLETRANSFERSTATION_COLUMN_HEIGHTOFPORT))) = 0,'#13'    GuiControl([tblGUITransferStation],'#13'     GuiSet('#13'      [Cells],'#13'      Count,'#13'      BUILDUPTABLETRANSFERSTATION_COLUMN_HEIGHTOFPORT,'#13'      [1]'#13'     )'#13'    )'#13'   ),'#13'   '#13'   { '' entrytrigger }'#13'   if('#13'    StringLength(GuiControl([tblGUITransferStation], GuiGet([Cells], Count, BUILDUPTABLETRANSFERSTATION_COLUMN_ENTRYTRIGGER))) = 0,'#13'    GuiControl([tblGUITransferStation],'#13'     GuiSet('#13'      [Cells],'#13'      Count,'#13'      BUILDUPTABLETRANSFERSTATION_COLUMN_ENTRYTRIGGER,'#13'      [0]'#13'     )'#13'    )'#13'   ),'#13'   '#13'   { '' exittrigger }'#13'   if('#13'    StringLength(GuiControl([tblGUITransferStation], GuiGet([Cells], Count, BUILDUPTABLETRANSFERSTATION_COLUMN_EXITTRIGGER))) = 0,'#13'    GuiControl([tblGUITransferStation],'#13'     GuiSet('#13'      [Cells],'#13'      Count,'#13'      BUILDUPTABLETRANSFERSTATION_COLUMN_EXITTRIGGER,'#13'      [0]'#13'     )'#13'    )'#13'   ),'#13'   '#13'   { '' send to }'#13'   if('#13'    StringLength(GuiControl([tblGUITransferStation], GuiGet([Cells], Count, BUILDUPTABLETRANSFERSTATION_COLUMN_SENDTO))) = 0,'#13'    GuiControl([tblGUITransferStation],'#13'     GuiSet('#13'      [Cells],'#13'      Count,'#13'      BUILDUPTABLETRANSFERSTATION_COLUMN_SENDTO,'#13'      [{.~1|~1~.}1]'#13'     )'#13'    )'#13'   ),'#13'   '#13'   { '' station ID }'#13'   if('#13'    Value(GuiControl([tblGUITransferStation], GuiGet([Cells], Count, BUILDUPTABLETRANSFERSTATION_COLUMN_STATIONID))) <= 0,'#13'    GuiControl([tblGUITransferStation],'#13'     GuiSet('#13'      [Cells],'#13'      Count,'#13'      BUILDUPTABLETRANSFERSTATION_COLUMN_STATIONID,'#13'      String(Count)'#13'     )'#13'    )'#13'   ),'#13'   '#13'   { '' port ID }'#13'   if('#13'    Value(GuiControl([tblGUITransferStation], GuiGet([Cells], Count, BUILDUPTABLETRANSFERSTATION_COLUMN_PORTID))) <= 0,'#13'    GuiControl([tblGUITransferStation],'#13'     GuiSet('#13'      [Cells],'#13'      Count,'#13'      BUILDUPTABLETRANSFERSTATION_COLUMN_PORTID,'#13'      String(Count)'#13'     )'#13'    )'#13'   ),'#13'   '#13'   { '' entrydirection }'#13'   if('#13'    StringLength(GuiControl([tblGUITransferStation], GuiGet([Cells], Count, BUILDUPTABLETRANSFERSTATION_COLUMN_DIRECTIONATENTRY))) = 0,'#13'    GuiControl([tblGUITransferStation],'#13'     GuiSet('#13'      [Cells],'#13'      Count,'#13'      BUILDUPTABLETRANSFERSTATION_COLUMN_DIRECTIONATENTRY,'#13'      [{.~1|1. Product enters from the top. ~TRANSFERSTATION_DIRECTION_TOP~..}TRANSFERSTATION_DIRECTION_TOP]'#13'     )'#13'    )'#13'   ),   '#13'   '#13'   { '' exitdirection }'#13'   if('#13'    StringLength(GuiControl([tblGUITransferStation], GuiGet([Cells], Count, BUILDUPTABLETRANSFERSTATION_COLUMN_DIRECTIONATEXIT))) = 0,'#13'    GuiControl([tblGUITransferStation],'#13'     GuiSet('#13'      [Cells],'#13'      Count,'#13'      BUILDUPTABLETRANSFERSTATION_COLUMN_DIRECTIONATEXIT,'#13'      [{.~1|2. Product exits at the bottom. ~TRANSFERSTATION_DIRECTION_BOTTOM~..}TRANSFERSTATION_DIRECTION_BOTTOM]'#13'     )'#13'    )'#13'   ),      '#13'   '#13'   { '' speed }'#13'   if('#13'    value(GuiControl([tblGUITransferStation], GuiGet([Cells], Count, BUILDUPTABLETRANSFERSTATION_COLUMN_SPEED))) <= 0,'#13'    GuiControl([tblGUITransferStation],'#13'     GuiSet('#13'      [Cells],'#13'      Count,'#13'      BUILDUPTABLETRANSFERSTATION_COLUMN_SPEED,'#13'      [1]'#13'     )'#13'    )'#13'   ),'#13'   '#13'   { '' acceleration }'#13'   if('#13'    value(GuiControl([tblGUITransferStation], GuiGet([Cells], Count, BUILDUPTABLETRANSFERSTATION_COLUMN_ACCELERATION))) <= 0,'#13'    GuiControl([tblGUITransferStation],'#13'     GuiSet('#13'      [Cells],'#13'      Count,'#13'      BUILDUPTABLETRANSFERSTATION_COLUMN_ACCELERATION,'#13'      [1]'#13'     )'#13'    )'#13'   ),   '#13'   '#13'   { '' deceleration }'#13'   if('#13'    value(GuiControl([tblGUITransferStation], GuiGet([Cells], Count, BUILDUPTABLETRANSFERSTATION_COLUMN_DECELERATION))) <= 0,'#13'    GuiControl([tblGUITransferStation],'#13'     GuiSet('#13'      [Cells],'#13'      Count,'#13'      BUILDUPTABLETRANSFERSTATION_COLUMN_DECELERATION,'#13'      [1]'#13'     )'#13'    )'#13'   ),   '#13'   '#13'   { '' color }'#13'   if('#13'    value(GuiControl([tblGUITransferStation], GuiGet([Cells], Count, BUILDUPTABLETRANSFERSTATION_COLUMN_COLOR))) <= 0,'#13'    GuiControl([tblGUITransferStation],'#13'     GuiSet('#13'      [Cells],'#13'      Count,'#13'      BUILDUPTABLETRANSFERSTATION_COLUMN_COLOR,'#13'      [255]'#13'     )'#13'    )'#13'   )'#13'  )'#13' ),'#13' '#13' GuiRun([Update])'#13')'#13))),
                EDControl(Label:
                  Caption = str('No. of transfer stations:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('Label3'),
                  Top = 32,
                  Width = 109))),
            EDControl(GroupBox:
              Caption = str('Single transfer station'),
              Height = 353,
              Left = 8,
              Name = str('gboSingelTransferStation'),
              TabOrder = 2,
              Top = 72,
              Width = 370,
              Controls(
                EDControl(Edit:
                  Height = 21,
                  Left = 160,
                  Name = str('ebTransferStationName'),
                  TabOrder = 1,
                  Top = 24,
                  Width = 193,
                  Events(
                    Change = str('GuiControl([tblGUITransferStation],'#13' GuiSet('#13'  [Cells],'#13'  label([CurrentTransferStationPage], GuiAtom),'#13'  BUILDUPTABLETRANSFERSTATION_COLUMN_TRANSFERSTATIONNAME,'#13'  GuiControl([ebTransferStationName], GuiGet([Text]))'#13' )'#13')'#13),
                    Exit = str('{ // check user input }'#13'if('#13' StringLength(GuiControl([ebTransferStationName], GuiGet([Text]))) > 0,'#13#13' { valid user input }'#13' do('#13'  GuiControl([tblGUITransferStation],'#13'   GuiSet('#13'    [Cells],'#13'    label([CurrentTransferStationPage], GuiAtom),'#13'    BUILDUPTABLETRANSFERSTATION_COLUMN_TRANSFERSTATIONNAME,'#13'    GuiControl([ebTransferStationName], GuiGet([Text]))'#13'   )'#13'  )'#13' ),'#13#13' { invalid user input - set default name in field and GUI table }'#13' do('#13'  GuiControl([ebTransferStationName], GuiSet([Text], concat([TransferStation], string(label([CurrentTransferStationPage], GuiAtom))))),'#13'  GuiControl([tblGUITransferStation],'#13'   GuiSet('#13'    [Cells],'#13'    label([CurrentTransferStationPage], GuiAtom),'#13'    BUILDUPTABLETRANSFERSTATION_COLUMN_TRANSFERSTATIONNAME,'#13'    concat([TransferStation], string(label([CurrentTransferStationPage], GuiAtom)))'#13'   )'#13'  ),'#13'  msg([Invalid user input!], 1)'#13' )'#13')'#13))),
                EDControl(Edit:
                  Height = 21,
                  Left = 160,
                  Name = str('ebXLocationTStation'),
                  TabOrder = 2,
                  Top = 56,
                  Width = 81,
                  Events(
                    Change = str('GuiControl([tblGUITransferStation],'#13' GuiSet('#13'  [Cells],'#13'  label([CurrentTransferStationPage], GuiAtom),'#13'  BUILDUPTABLETRANSFERSTATION_COLUMN_XLOCATION,'#13'  GuiControl([ebXLocationTStation], GuiGet([Text]))'#13' )'#13')'#13),
                    Exit = str('{ // check user input }'#13'if('#13' IsNumeric(GuiControl([ebXLocationTStation], GuiGet([Text]))),'#13#13' { valid user input }'#13' do('#13'  GuiControl([tblGUITransferStation],'#13'   GuiSet('#13'    [Cells],'#13'    label([CurrentTransferStationPage], GuiAtom),'#13'    BUILDUPTABLETRANSFERSTATION_COLUMN_XLOCATION,'#13'    GuiControl([ebXLocationTStation], GuiGet([Text]))'#13'   )'#13'  )'#13' ),'#13#13' { invalid user input - set default x location in field and GUI table - simply place at zero location }'#13' do('#13'  GuiControl([ebXLocationTStation], GuiSet([Text], [0])),'#13'  GuiControl([tblGUITransferStation],'#13'   GuiSet('#13'    [Cells],'#13'    label([CurrentTransferStationPage], GuiAtom),'#13'    BUILDUPTABLETRANSFERSTATION_COLUMN_XLOCATION,'#13'    [0]'#13'   )'#13'  ),'#13'  msg([Invalid user input!], 1)'#13' )'#13')'#13))),
                EDControl(Edit:
                  Height = 21,
                  Left = 160,
                  Name = str('ebTransferStationID'),
                  TabOrder = 3,
                  Top = 88,
                  Width = 81,
                  Events(
                    Change = str('GuiControl([tblGUITransferStation],'#13' GuiSet('#13'  [Cells],'#13'  label([CurrentTransferStationPage], GuiAtom),'#13'  BUILDUPTABLETRANSFERSTATION_COLUMN_TRANSFERSTATIONID,'#13'  GuiControl([ebTransferStationID], GuiGet([Text]))'#13' )'#13')'#13),
                    Exit = str('{ // check user input }'#13'if('#13' IsNumeric(GuiControl([ebTransferStationID], GuiGet([Text]))),'#13#13' { valid user input }'#13' do('#13'  GuiControl([tblGUITransferStation],'#13'   GuiSet('#13'    [Cells],'#13'    label([CurrentTransferStationPage], GuiAtom),'#13'    BUILDUPTABLETRANSFERSTATION_COLUMN_TRANSFERSTATIONID,'#13'    GuiControl([ebTransferStationID], GuiGet([Text]))'#13'   )'#13'  )'#13' ),'#13#13' { invalid user input - set default transferstation id in field and GUI table - id as current transfer station index }'#13' do('#13'  GuiControl([ebTransferStationID], GuiSet([Text], [0])),'#13'  GuiControl([tblGUITransferStation],'#13'   GuiSet('#13'    [Cells],'#13'    label([CurrentTransferStationPage], GuiAtom),'#13'    BUILDUPTABLETRANSFERSTATION_COLUMN_TRANSFERSTATIONID,'#13'    string(label([CurrentTransferStationPage], GuiAtom))'#13'   )'#13'  ),'#13'  msg([Invalid user input!], 1)'#13' )'#13')'#13))),
                EDControl(ComboBox:
                  Height = 21,
                  Left = 160,
                  Name = str('cobNoOfPorts'),
                  Style = DropDownList,
                  TabOrder = 4,
                  Top = 120,
                  Width = 81,
                  Events(
                    Change = str('GuiControl([tblGUITransferStation],'#13' GuiSet('#13'  [Cells],'#13'  label([CurrentTransferStationPage], GuiAtom),'#13'  BUILDUPTABLETRANSFERSTATION_COLUMN_NUMBEROFPORTS,'#13'  string(GuiControl([cobNoOfPorts], GuiGet([ItemIndex])))'#13' )'#13')'#13))),
                EDControl(Edit:
                  Height = 21,
                  Left = 160,
                  Name = str('ebPortsLength'),
                  TabOrder = 5,
                  Top = 152,
                  Width = 81,
                  Events(
                    Change = str('GuiControl([tblGUITransferStation],'#13' GuiSet('#13'  [Cells],'#13'  label([CurrentTransferStationPage], GuiAtom),'#13'  BUILDUPTABLETRANSFERSTATION_COLUMN_LENGTHOFPORT,'#13'  GuiControl([ebPortsLength], GuiGet([Text]))'#13' )'#13')'#13),
                    Exit = str('{ // check user input }'#13'if('#13' IsNumeric(GuiControl([ebPortsLength], GuiGet([Text]))),'#13#13' { valid user input }'#13' do('#13'  GuiControl([tblGUITransferStation],'#13'   GuiSet('#13'    [Cells],'#13'    label([CurrentTransferStationPage], GuiAtom),'#13'    BUILDUPTABLETRANSFERSTATION_COLUMN_LENGTHOFPORT,'#13'    GuiControl([ebPortsLength], GuiGet([Text]))'#13'   )'#13'  )'#13' ),'#13#13' { invalid user input - set default port length in field and GUI table - use 1 m as default width }'#13' do('#13'  GuiControl([ebPortsLength], GuiSet([Text], [1])),'#13'  GuiControl([tblGUITransferStation],'#13'   GuiSet('#13'    [Cells],'#13'    label([CurrentTransferStationPage], GuiAtom),'#13'    BUILDUPTABLETRANSFERSTATION_COLUMN_LENGTHOFPORT,'#13'    [1]'#13'   )'#13'  ),'#13'  msg([Invalid user input!], 1)'#13' )'#13')'#13))),
                EDControl(Edit:
                  Height = 21,
                  Left = 160,
                  Name = str('ebPortsWidth'),
                  TabOrder = 6,
                  Top = 184,
                  Width = 81,
                  Events(
                    Change = str('GuiControl([tblGUITransferStation],'#13' GuiSet('#13'  [Cells],'#13'  label([CurrentTransferStationPage], GuiAtom),'#13'  BUILDUPTABLETRANSFERSTATION_COLUMN_WIDTHOFPORT,'#13'  GuiControl([ebPortsWidth], GuiGet([Text]))'#13' )'#13')'#13),
                    Exit = str('{ // check user input }'#13'if('#13' IsNumeric(GuiControl([ebPortsWidth], GuiGet([Text]))),'#13#13' { valid user input }'#13' do('#13'  GuiControl([tblGUITransferStation],'#13'   GuiSet('#13'    [Cells],'#13'    label([CurrentTransferStationPage], GuiAtom),'#13'    BUILDUPTABLETRANSFERSTATION_COLUMN_WIDTHOFPORT,'#13'    GuiControl([ebPortsWidth], GuiGet([Text]))'#13'   )'#13'  )'#13' ),'#13#13' { invalid user input - set default port width in field and GUI table - use 1 m as default width }'#13' do('#13'  GuiControl([ebPortsWidth], GuiSet([Text], [1])),'#13'  GuiControl([tblGUITransferStation],'#13'   GuiSet('#13'    [Cells],'#13'    label([CurrentTransferStationPage], GuiAtom),'#13'    BUILDUPTABLETRANSFERSTATION_COLUMN_WIDTHOFPORT,'#13'    [1]'#13'   )'#13'  ),'#13'  msg([Invalid user input!], 1)'#13' )'#13')'#13))),
                EDControl(ComboBox:
                  Height = 21,
                  Items = str('Pick'#13#10'Place'#13#10'Pick and place'#13#10),
                  Left = 160,
                  Name = str('cobPortType'),
                  Style = DropDownList,
                  TabOrder = 7,
                  Top = 216,
                  Width = 193,
                  Events(
                    Change = str('GuiControl([tblGUITransferStation],'#13' GuiSet('#13'  [Cells],'#13'  label([CurrentTransferStationPage], GuiAtom),'#13'  BUILDUPTABLETRANSFERSTATION_COLUMN_PORTTYPE,'#13'  string(GuiControl([cobPortType], GuiGet([ItemIndex])))'#13' )'#13')'#13))),
                EDControl(ComboBox:
                  Height = 21,
                  Items = str('up'#13#10'down'#13#10),
                  Left = 160,
                  Name = str('cobPosition'),
                  Style = DropDownList,
                  TabOrder = 8,
                  Top = 248,
                  Width = 193,
                  Events(
                    Change = str('GuiControl([tblGUITransferStation],'#13' GuiSet('#13'  [Cells],'#13'  label([CurrentTransferStationPage], GuiAtom),'#13'  BUILDUPTABLETRANSFERSTATION_COLUMN_YPOSITION,'#13'  string(GuiControl([cobPosition], GuiGet([ItemIndex])))'#13' )'#13')'#13))),
                EDControl(ComboBox:
                  Height = 21,
                  Items = str('Simple box'#13#10'Roll conveyor'#13#10'Belt conveyor'#13#10'Chain conveyor'#13#10),
                  Left = 160,
                  Name = str('cobTransferStation3DAnimation'),
                  Style = DropDownList,
                  TabOrder = 9,
                  Top = 280,
                  Width = 193,
                  Events(
                    Change = str('GuiControl([tblGUITransferStation],'#13' GuiSet('#13'  [Cells],'#13'  label([CurrentTransferStationPage], GuiAtom),'#13'  BUILDUPTABLETRANSFERSTATION_COLUMN_3DANIMATION,'#13'  string(GuiControl([cobTransferStation3DAnimation], GuiGet([ItemIndex])))'#13' )'#13')'#13))),
                EDControl(Button:
                  Caption = str('|<'),
                  Left = 16,
                  Name = str('btnMoveToFirstTStation'),
                  TabOrder = 10,
                  Top = 312,
                  Events(
                    Click = str('do('#13' label([CurrentTransferStationPage], GuiAtom) := 1,'#13' '#13' GuiRun([Update])'#13')'#13))),
                EDControl(Button:
                  Caption = str('<<'),
                  Left = 104,
                  Name = str('btnStepOneBackTStation'),
                  TabOrder = 11,
                  Top = 312,
                  Events(
                    Click = str('do('#13' dec(label([CurrentTransferStationPage], GuiAtom)),'#13' '#13' GuiRun([Update])'#13')'#13))),
                EDControl(Button:
                  Caption = str('>>'),
                  Left = 192,
                  Name = str('btnStepOneAheadTStation'),
                  TabOrder = 12,
                  Top = 312,
                  Events(
                    Click = str('do('#13' inc(label([CurrentTransferStationPage], GuiAtom)),'#13' '#13' GuiRun([Update])'#13')'#13))),
                EDControl(Button:
                  Caption = str('>|'),
                  Left = 280,
                  Name = str('btnMoveToLastTStation'),
                  TabOrder = 13,
                  Top = 312,
                  Events(
                    Click = str('do('#13' label([CurrentTransferStationPage], GuiAtom) := GuiControl([cobNoOfTransferStations], GuiGet([ItemIndex])),'#13#13' GuiRun([Update])'#13')'#13))),
                EDControl(Button:
                  Caption = str('View dataset'),
                  Height = 22,
                  Left = 251,
                  Name = str('btnShowAllParameters'),
                  TabOrder = 14,
                  Top = 56,
                  Width = 100,
                  Events(
                    Click = str('do('#13' GuiDestroy([TransferStation]),'#13' GuiRegister(PDir([\Atoms\TransferStation.gui]), 1),'#13' GuiCreate([formTransferStation], [TransferStation], 0, GuiAtom, 0, 2)'#13')'#13))),
                EDControl(Button:
                  Caption = str('Delete dataset'),
                  Height = 22,
                  Left = 251,
                  Name = str('btnDeleteTStation'),
                  TabOrder = 15,
                  Top = 88,
                  Width = 100,
                  Events(
                    Click = str('do('#13' { update no of transfer stations - reduce total amount by one (one minimum!) }'#13' GuiControl([cobNoOfTransferStations], GuiSet([ItemIndex], '#13'  GuiControl([cobNoOfTransferStations], GuiGet([ItemIndex])) - 1)'#13' ),'#13#13' { update tblGUITransferStation - delete refering row }'#13' GuiControl([tblGUITransferStation], GuiList([Rows], [Delete], label([CurrentTransferStationPage], GuiAtom) + 1)),'#13#13' { update index label to current transfer station page }'#13' if('#13'  label([CurrentTransferStationPage], GuiAtom) > 1,'#13'  label([CurrentTransferStationPage], GuiAtom) := label([CurrentTransferStationPage], GuiAtom) - 1,'#13'  label([CurrentTransferStationPage], GuiAtom) := 1'#13' ),'#13#13' { update transfer station index in tblGUITransferStation }'#13' Repeat('#13'  GuiControl([cobNoOfTransferStations], GuiGet([ItemIndex])),'#13'  GuiControl([tblGUITransferStation], GuiSet([Cells], Count, BUILDUPTABLETRANSFERSTATION_COLUMN_TRANSFERSTATIONID, string(Count)))'#13' ),'#13#13' GuiRun([Update])'#13')'#13))),
                EDControl(Table:
                  DefaultWidth = 45,
                  Height = 83,
                  Left = 248,
                  Name = str('tblGUITransferStation'),
                  Options = set(FixedVertLine,FixedHorzLine,VertLine,HorzLine,RangeSelect,Editing),
                  TabOrder = 16,
                  Top = 120,
                  Visible = False,
                  Width = 104),
                EDControl(Label:
                  Caption = str('Name:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('Label4'),
                  Top = 32,
                  Width = 31),
                EDControl(Label:
                  Caption = str('X-location [m]:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('Label42'),
                  Top = 64,
                  Width = 67),
                EDControl(Label:
                  Caption = str('Routing [ID]:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('Label43'),
                  Top = 96,
                  Width = 60),
                EDControl(Label:
                  Caption = str('No. of ports:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('Label44'),
                  Top = 128,
                  Width = 58),
                EDControl(Label:
                  Caption = str('Length of port [m]:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('Label45'),
                  Top = 160,
                  Width = 86),
                EDControl(Label:
                  Caption = str('Width of port [m]:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('Label46'),
                  Top = 192,
                  Width = 81),
                EDControl(Label:
                  Caption = str('Port type:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('Label47'),
                  Top = 224,
                  Width = 45),
                EDControl(Label:
                  Caption = str('Position:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('Label48'),
                  Top = 256,
                  Width = 40),
                EDControl(Label:
                  Caption = str('3D Icon:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('Label49'),
                  Top = 288,
                  Width = 41))),
            EDControl(GroupBox:
              Caption = str('Check or modify current settings'),
              Height = 97,
              Left = 8,
              Name = str('GroupBox52'),
              TabOrder = 3,
              Top = 432,
              Width = 370,
              Controls(
                EDControl(Button:
                  Caption = str('View transfer station table'),
                  Left = 192,
                  Name = str('btnCurrentTransferStationTable'),
                  TabOrder = 3,
                  Top = 24,
                  Width = 163,
                  Events(
                    Click = str('do('#13' BuildUpTableTransferStation__Headers(TransferCarController__GetBuildUpTableTransferStation(GuiAtom)),'#13' EditTable(TransferCarController__GetBuildUpTableTransferStation(GuiAtom))'#13')'#13))),
                EDControl(Button:
                  Caption = str('Rebuild transfer stations'),
                  Left = 16,
                  Name = str('btnUpdateTStation'),
                  TabOrder = 2,
                  Top = 56,
                  Width = 163,
                  Events(
                    Click = str('do('#13' { --Step 1 : update transfer station table-- }'#13' var([tblBuildUpTransferStation], vbAtom, TransferCarController__GetBuildUpTableTransferStation(GuiAtom)),'#13' var([valNoofRows], vbValue),'#13#13' { get table dimensions and setup atom table accordingly }'#13' valNoofRows := GuiControl([tblGUITransferStation], GuiGet([RowCount])) - 1,'#13' SetTable(valNoofRows, BUILDUPTABLETRANSFERSTATION_NUMBEROFCOLUMNS, tblBuildUpTransferStation),'#13#13' { copy GUI table into atom table - container transfer station table }'#13' GuiControl([tblGUITransferStation],'#13'  GuiList([Cells], [Save],'#13'   tblBuildUpTransferStation,'#13'   1, 1, 1, 1,'#13'   valNoofRows, BUILDUPTABLETRANSFERSTATION_NUMBEROFCOLUMNS'#13'  )'#13' ),'#13#13' { --Step 2 : update transfer station port table-- }'#13' TransferCarController__CreateBuildUpTableTransferStationPort(GuiAtom),'#13#13' { --Step 3 : rebuild transfer stations-- }'#13' TransferCarController__CreateTransferStation(GuiAtom)'#13')'#13))),
                EDControl(Button:
                  Caption = str('View transfer station port table'),
                  Left = 192,
                  Name = str('btnCurrentTransferStationPortTable'),
                  TabOrder = 4,
                  Top = 56,
                  Width = 163,
                  Events(
                    Click = str('do('#13' BuildUpTableTransferStationPort__Headers(TransferCarController__GetBuildUpTableTransferStationPort(GuiAtom)),'#13' EditTable(TransferCarController__GetBuildUpTableTransferStationPort(GuiAtom))'#13')'#13))),
                EDControl(Button:
                  Caption = str('Update transfer stations'),
                  Left = 16,
                  Name = str('btnUpdateTransferStation'),
                  TabOrder = 1,
                  Top = 24,
                  Width = 163,
                  Events(
                    Click = str('do('#13' var([tblBuildUpTransferStation], vbAtom, TransferCarController__GetBuildUpTableTransferStation(GuiAtom)),'#13' var([valNoofRows], vbValue),'#13#13' valNoofRows := GuiControl([tblGUITransferStation], GuiGet([RowCount])) - 1,'#13#13' { // Check if basic structure has been unchanged -> else layout needs to be rebuilt! }'#13' if('#13'  not(nRows(tblBuildUpTransferStation) = valNoofRows),'#13#13'  { update impossible because of different number of transfer stations }'#13'  do('#13'   msg(concat([Number of transfer stations have been changed], lf, [Please, rebuild transfer stations first.])),'#13'   return(-1)'#13'  ),'#13#13'  { number of transfer station match, continue check on number of ports for each transfer station }'#13'  do('#13'   var([bPortMatching], vbValue, true),'#13'   '#13'   LoopUntil('#13'    bPortMatching = false,'#13'    do('#13'     if('#13'      not('#13'       Cell(Count, BUILDUPTABLETRANSFERSTATION_COLUMN_NUMBEROFPORTS, tblBuildUpTransferStation) ='#13'        value(GuiControl([tblGUITransferStation], GuiGet([Cells], Count, BUILDUPTABLETRANSFERSTATION_COLUMN_NUMBEROFPORTS)))'#13'      ),'#13'      do('#13'       bPortMatching := false'#13'      )'#13'     )'#13'    ),'#13'    nRows(tblBuildUpTransferStation)'#13'   ),'#13#13'   if('#13'    bPortMatching = false,'#13#13'    { update impossible because at least at one station the number of ports differ }'#13'    do('#13'     msg(concat([Number of ports have been changed], lf, [Please, rebuild transfer stations first.])),'#13'     return(-1)'#13'    )'#13'   )'#13'  )'#13' ),'#13#13' { // In case that the basic structure has been unchanged then continue with updating of the transfer car system }'#13#13' { --Step 1 : update transfer station table-- }'#13#13' { copy GUI table into atom table - container transfer station table }'#13' GuiControl([tblGUITransferStation],'#13'  GuiList([Cells], [Save],'#13'   tblBuildUpTransferStation,'#13'   1, 1, 1, 1,'#13'   valNoofRows, BUILDUPTABLETRANSFERSTATION_NUMBEROFCOLUMNS'#13'  )'#13' ),'#13#13' { --Step 2 : update transfer station port table-- }'#13' TransferCarController__CreateBuildUpTableTransferStationPort(GuiAtom),'#13#13' { --Step 3 : update transfer stations-- }'#13' TransferCarController__UpdateTransferStationSettings(GuiAtom)'#13')'#13))))))),
        EDControl(SinglePage:
          Caption = str('Transfer strategies'),
          Name = str('spTransferStrategies'),
          PageIndex = 4,
          Controls(
            EDControl(GroupBox:
              Caption = str('System type'),
              Height = 73,
              Left = 8,
              Name = str('GroupBox4'),
              TabOrder = 1,
              Top = 8,
              Width = 369,
              Controls(
                EDControl(ComboBox:
                  Height = 21,
                  Items = str('Push system'#13#10'Pull system'#13#10),
                  Left = 160,
                  Name = str('cobSystemType'),
                  Style = DropDownList,
                  TabOrder = 1,
                  Top = 28,
                  Width = 193))),
            EDControl(GroupBox:
              Caption = str('Order sequence'),
              Height = 73,
              Left = 8,
              Name = str('GroupBox1'),
              TabOrder = 3,
              Top = 88,
              Width = 369),
            EDControl(GroupBox:
              Caption = str('Control system'),
              Height = 225,
              Left = 8,
              Name = str('GroupBox6'),
              TabOrder = 4,
              Top = 168,
              Width = 369,
              Controls(
                EDControl(Button:
                  Caption = str('Control transfer car'),
                  Left = 160,
                  Name = str('btnControlTransferCar'),
                  TabOrder = 5,
                  Top = 184,
                  Width = 193,
                  Events(
                    Click = str('EditTable(TransferCarController__GetControlTransferCar(GuiAtom))'#13))),
                EDControl(Button:
                  Caption = str('Control transfer station'),
                  Left = 160,
                  Name = str('btnControlTransferStation'),
                  TabOrder = 4,
                  Top = 144,
                  Width = 193,
                  Events(
                    Click = str('EditTable(TransferCarController__GetControlTransferStation(GuiAtom))'#13))),
                EDControl(Button:
                  Caption = str('Finished orders'),
                  Left = 160,
                  Name = str('btnFinishedOrders'),
                  TabOrder = 3,
                  Top = 104,
                  Width = 193,
                  Events(
                    Click = str('EditTable(TransferCarController__GetFinishedOrders(GuiAtom))'#13))),
                EDControl(Button:
                  Caption = str('Dispatch orders'),
                  Left = 160,
                  Name = str('btnDispatchOrders'),
                  TabOrder = 2,
                  Top = 64,
                  Width = 193,
                  Events(
                    Click = str('EditTable(TransferCarController__GetDispatchOrders(GuiAtom))'#13))),
                EDControl(Button:
                  Caption = str('Routing plan'),
                  Left = 160,
                  Name = str('btnRoutingPlan'),
                  TabOrder = 1,
                  Top = 24,
                  Width = 193,
                  Events(
                    Click = str('EditTable(TransferCarController__GetRoutingPlan(GuiAtom))'#13))),
                EDControl(Label:
                  Caption = str('Number Of Labels:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 152,
                  Name = str('Label5'),
                  Top = 160,
                  Visible = False,
                  Width = 88))),
            EDControl(Table:
              Height = 83,
              Left = 24,
              Name = str('tblStaticOptions'),
              Options = set(FixedVertLine,FixedHorzLine,VertLine,HorzLine,RangeSelect,ColSizing,Editing),
              TabOrder = 5,
              Top = 183,
              Visible = False,
              Width = 336),
            EDControl(Table:
              Height = 115,
              Left = 24,
              Name = str('tblVariableOptions'),
              Options = set(FixedVertLine,FixedHorzLine,VertLine,HorzLine,RangeSelect,ColSizing,Editing),
              RowCount = 7,
              TabOrder = 6,
              Top = 352,
              Visible = False,
              Width = 336),
            EDControl(ComboBox:
              Height = 21,
              Items = str('0'#13#10'1'#13#10'2'#13#10'3'#13#10'4'#13#10'5'#13#10'6'#13#10),
              Left = 272,
              Name = str('cbNumberOfLabels'),
              Style = DropDownList,
              TabOrder = 7,
              Top = 318,
              Visible = False,
              Width = 89,
              Events(
                Change = str('do('#13' GuiControl([tblVariableOptions], GuiSet([RowCount], GuiControl([cbNumberOfLabels], GuiGet([ItemIndex])))),'#13' GuiControl([tblVariableOptions], GUISet([FixedRows], 1)),'#13' GuiControl([tblVariableOptions], GuiSet([Height], 19 + 16 * (GuiControl([cbNumberOfLabels], GuiGet([ItemIndex])) - 1))),'#13'  '#13' Repeat('#13'  LISTTRANSFERSTRATEGIES_NUMBEROFSTATICOPTIONS + GuiControl([cbNumberOfLabels], GuiGet([ItemIndex])), '#13'  GuiControl([tblVariableOptions], GuiSet([Cells], Count, 0, string(LISTTRANSFERSTRATEGIES_NUMBEROFSTATICOPTIONS + Count)))'#13' ),'#13' '#13' if('#13'  GuiControl([cbNumberOfLabels], GuiGet([ItemIndex])) = 1,'#13'  GuiControl([tblVariableOptions], GUISet([Visible], false)),'#13'  GuiControl([tblVariableOptions], GUISet([Visible], false)) { true - aber momentan auf false gesetzt! }'#13' ),'#13' '#13' GuiControl([tblVariableOptions], GuiSet([Cells], 0, 1, TransferCarLanguageString(512))),'#13' GuiControl([tblVariableOptions], GuiSet([Cells], 0, 2, TransferCarLanguageString(513))),'#13' GuiControl([tblVariableOptions], GuiSet([Cells], 0, 3, TransferCarLanguageString(514))),'#13' GuiControl([tblVariableOptions], GuiSet([Cells], 0, 4, TransferCarLanguageString(515)))'#13')'#13))),
            EDControl(GroupBox:
              Caption = str('Static Options'),
              Height = 121,
              Left = 16,
              Name = str('gboStaticOptions'),
              TabOrder = 8,
              Top = 206,
              Visible = False,
              Width = 345),
            EDControl(GroupBox:
              Caption = str('Variable Options'),
              Height = 137,
              Left = 60,
              Name = str('gboVariableOptions'),
              TabOrder = 9,
              Top = 368,
              Visible = False,
              Width = 273),
            EDControl(SmartEdit:
              Left = 168,
              Lines = str(''),
              Name = str('smeTransferStrategy'),
              String = str('{.~1|.}~1'),
              TabOrder = 2,
              Top = 116,
              Width = 193))),
        EDControl(SinglePage:
          Caption = str('Language'),
          Name = str('spLanguage'),
          PageIndex = 5,
          Visible = False,
          Controls(
            EDControl(GroupBox:
              Caption = str(''),
              Height = 353,
              Left = 4,
              Name = str('GroupBox3'),
              TabOrder = 4,
              Top = 8,
              Width = 393),
            EDControl(ComboBox:
              Height = 21,
              Left = 168,
              Name = str('cbLanguage'),
              Style = DropDownList,
              TabOrder = 1,
              Top = 32,
              Width = 201),
            EDControl(Button:
              Caption = str('Adopt language setting'),
              Left = 168,
              Name = str('btnAdoptLanguage'),
              TabOrder = 2,
              Top = 72,
              Width = 203,
              Events(
                Click = str('do('#13' Stop, Reset,'#13' '#13' TransferCarController__SetLanguage(GuiAtom, GuiControl([cbLanguage], GuiGet([ItemIndex]))),'#13' LANGUAGE_INDEX := TransferCarController__GetLanguage(GuiAtom),'#13' '#13' GuiRun([Update]),'#13' RoutingPlan__Headers(TransferCarController__GetRoutingPlan(GuiAtom)),'#13' ControlTransferCar__Headers(TransferCarController__GetControlTransferCar(GuiAtom)),'#13' ControlTransferStation__Headers(TransferCarController__GetControlTransferStation(GuiAtom)),'#13' DispatchOrders__Headers(TransferCarController__GetDispatchOrders(GuiAtom)),'#13' FinishedOrders__Headers(TransferCarController__GetFinishedOrders(GuiAtom)),'#13' BuildUpTableTransferCar__Headers(TransferCarController__GetBuildUpTableTransferCar(GuiAtom)),'#13' BuildUpTableTransferStation__Headers(TransferCarController__GetBuildUpTableTransferStation(GuiAtom)),'#13' BuildUpTableTransferStationPort__Headers(TransferCarController__GetBuildUpTableTransferStationPort(GuiAtom))'#13')'#13))),
            EDControl(StaticText:
              BorderStyle = None,
              Caption = str('Language'),
              Color = -16777208,
              Left = 20,
              Name = str('stLanguage'),
              Top = 32,
              Width = 52))))),
    EDControl(Panel:
      BevelOuter = None,
      Caption = str(''),
      Height = 40,
      Left = 0,
      Name = str('Panel1'),
      TabOrder = 2,
      Top = 560,
      Width = 395,
      Controls(
        EDControl(Button:
          Caption = str('Apply'),
          Left = 312,
          Name = str('btnApply'),
          TabOrder = 4,
          Top = 8,
          Events(
            Click = str('do('#13' { // page General }'#13' Name(GuiAtom) := GuiControl([ebName], GuiGet([Text])),'#13' RotationAs(GuiAtom) := value(GuiControl([ebRotation], GuiGet([Text]))),'#13' xSize(GuiAtom) := value(GuiControl([ebLength], GuiGet([Text]))),'#13' ySize(GuiAtom) := value(GuiControl([ebWidth], GuiGet([Text]))),'#13' zLoc(GuiAtom) := value(GuiControl([ebZLocation], GuiGet([Text]))),'#13#13' TransferCarController__SetWriteTransportHistory(GuiAtom, GuiControl([chbWriteFinishedOrders], GuiGet([Checked]))),'#13#13' { // page Strategies }'#13' {var([lstTransferStrategies], vbAtom, TransferCarController__GetListTransferStrategies(GuiAtom)),'#13'  ListTransferStrategies__SetNoOfLabels(lstTransferStrategies, GuiControl([cbNumberOfLabels], GuiGet([ItemIndex])))}'#13' TransferCarController__SetSystemType(GuiAtom, GuiControl([cobSystemType], GuiGet([ItemIndex]))),'#13#13' SetExprAtt([TransferStrategy], GuiControl([smeTransferStrategy], GuiGet([String])),GuiAtom),'#13#13' { // divers }'#13' var([atmControlTransferCar], vbAtom, TransferCarController__GetControlTransferCar(GuiAtom)),'#13' var([atmControlTransferStation], vbAtom, TransferCarController__GetControlTransferStation(GuiAtom)),'#13' var([atmTransferCar], vbAtom),'#13' var([atmTransferStation], vbAtom),'#13' var([atmStorageUnit], vbAtom),'#13' var([indexer], vbValue, 1),'#13#13' { update width of transfer car and storage unit with width of transfer car controller }'#13' Repeat('#13'  Content(atmControlTransferCar),'#13'  do('#13'   atmTransferCar := rank(indexer, atmControlTransferCar),'#13'   ySize(atmTransferCar) := ySize(GuiAtom),'#13'   yLoc(atmTransferCar) := (ySize(GuiAtom) - ySize(atmTransferCar)) / 2,'#13#13'   Repeat('#13'    Content(atmTransferCar),'#13'    do('#13'     atmStorageUnit := rank(Count, atmTransferCar),'#13#13'     xSize(atmStorageUnit) := ySize(GuiAtom)'#13'    )'#13'   ),'#13'   inc(indexer)'#13'  )'#13' ),'#13' indexer := 1,'#13#13' { // initialize y- & z-position on transfer station }'#13' Repeat('#13'  Content(atmControlTransferStation),'#13'  do('#13'   atmTransferStation := rank(indexer, atmControlTransferStation),'#13'   Case('#13'    TransferStation__GetPosition(atmTransferStation),'#13'    yLoc(atmTransferStation) := -(xSize(atmTransferStation)),'#13'    yLoc(atmTransferStation) := ySize(GuiAtom)'#13'   ),'#13'   zLoc(atmTransferStation) := 0,'#13#13'   inc(indexer)'#13'  )'#13' )'#13')'#13))),
        EDControl(Button:
          Caption = str('&Cancel'),
          Left = 230,
          Name = str('btnCancel'),
          TabOrder = 3,
          Top = 8,
          Events(
            Click = str('GuiDestroy'#13))),
        EDControl(Button:
          Caption = str('&Ok'),
          Left = 144,
          Name = str('btnOk'),
          TabOrder = 2,
          Top = 8,
          Events(
            Click = str('do('#13' GuiControl([btnApply]),'#13' GuiRun([Click]),'#13' '#13' GuiDestroy'#13')'#13))),
        EDControl(Button:
          Caption = str('&Help'),
          Left = 8,
          Name = str('btnHelp'),
          TabOrder = 1,
          Top = 8,
          Events(
            Click = str('Help(PDir([HELP\ED Help.hlp]), [Transfer Car])'#13)))))),
  Events(
    Show = str('do('#13' GuiControl([MultiPage1]), GuiSet([ActivePage], 1),'#13#13' { * page language settings }'#13' {TransferCarController__SetLanguageStringInGui,}'#13#13' { * page General }'#13' GuiControl([ebName], GuiSet([Text], Name(GuiAtom))),'#13' GuiControl([ebRotation], GuiSet([Text], string(RotationAs(GuiAtom)))),'#13' GuiControl([ebLength], GuiSet([Text], string(xSize(GuiAtom)))),'#13' GuiControl([ebWidth], GuiSet([Text], string(ySize(GuiAtom)))),'#13' GuiControl([ebZLocation], GuiSet([Text], string(zLoc(GuiAtom)))),'#13#13' GuiControl([chbWriteFinishedOrders], GuiSet([Checked], TransferCarController__GetWriteTransportHistory(GuiAtom))),'#13#13#13' { * page Transfer car }'#13' var([tblBuildUpTransferCar], vbAtom, TransferCarController__GetBuildUpTableTransferCar(GuiAtom)),'#13' var([valNoOfTransferCars], vbValue),'#13#13' {Trace(String(GuiControl([cobNoOfTransferCars], GuiList([Items], [Count])))),}'#13' label([CurrentTransferCarPage], GuiAtom) := 1,'#13#13' { // get transfer cars settings }'#13#13' { fill combo box for transfer cars with max. no. of possible cars }'#13' {GuiControl([cobNoOfTransferCars], GuiList([Items], [Clear])),}'#13' Repeat('#13'  TransferCarController__GetMaxNoofTransferCars(GuiAtom),'#13'  GuiControl([cobNoOfTransferCars], GuiList([Items], [Insert], Count, string(Count)))'#13' ),'#13#13' { check if table for transfer cars exceeds that max. no. of cars }'#13' if('#13'  nRows(tblBuildUpTransferCar) = 0,'#13'  valNoOfTransferCars := 1,'#13'  if('#13'   nRows(tblBuildUpTransferCar) > TransferCarController__GetMaxNoofTransferCars(GuiAtom),'#13'   valNoOfTransferCars := TransferCarController__GetMaxNoofTransferCars(GuiAtom),'#13'   valNoOfTransferCars := nRows(tblBuildUpTransferCar)'#13'  )'#13' ),'#13#13' { finally get the correct item index }'#13' GuiControl([cobNoOfTransferCars], GuiSet([ItemIndex], valNoOfTransferCars)),'#13#13' { copy BuildUpTableTransferCar table into temporary GuiTransferCar table - add 1 as cells are zero based! }'#13' GuiControl([tblGUITransferCar],'#13'  do('#13'   GuiSet([RowCount], valNoOfTransferCars + 1),'#13'   GuiSet([ColCount], BUILDUPTABLETRANSFERCAR_NUMBEROFCOLUMNS + 1)'#13'  )'#13' ),'#13' GuiControl([tblGUITransferCar], GuiList([Cells], [Load], tblBuildUpTransferCar, 1, 1, 1, 1, nRows(tblBuildUpTransferCar), BUILDUPTABLETRANSFERCAR_NUMBEROFCOLUMNS)),'#13#13' GuiControl([tblGUITransferCar], GuiSet([Cells], 0, 1, [ID])),'#13' GuiControl([tblGUITransferCar], GuiSet([Cells], 0, 2, [Name])),'#13' GuiControl([tblGUITransferCar], GuiSet([Cells], 0, 3, [X loc])),'#13' GuiControl([tblGUITransferCar], GuiSet([Cells], 0, 4, [Transport height])),'#13' GuiControl([tblGUITransferCar], GuiSet([Cells], 0, 5, [Motion sequence])),'#13' GuiControl([tblGUITransferCar], GuiSet([Cells], 0, 6, [No. of storage units])),'#13' GuiControl([tblGUITransferCar], GuiSet([Cells], 0, 7, [Width of storage unit])),'#13' GuiControl([tblGUITransferCar], GuiSet([Cells], 0, 8, [3D animation])),'#13' GuiControl([tblGUITransferCar], GuiSet([Cells], 0, 9,  [Description])),'#13' GuiControl([tblGUITransferCar], GuiSet([Cells], 0, 10, [Lenth])),'#13' GuiControl([tblGUITransferCar], GuiSet([Cells], 0, 11, [Width])),'#13' GuiControl([tblGUITransferCar], GuiSet([Cells], 0, 12, [Entrytrigger])),'#13' GuiControl([tblGUITransferCar], GuiSet([Cells], 0, 13, [Exittrigger])),'#13' GuiControl([tblGUITransferCar], GuiSet([Cells], 0, 14, [CarId])),'#13' GuiControl([tblGUITransferCar], GuiSet([Cells], 0, 15, [EmptySpeed])),'#13' GuiControl([tblGUITransferCar], GuiSet([Cells], 0, 16, [EmptyAcceleration])),'#13' GuiControl([tblGUITransferCar], GuiSet([Cells], 0, 17, [EmptyDeceleration])),'#13' GuiControl([tblGUITransferCar], GuiSet([Cells], 0, 18, [LoadedSpeed])),'#13' GuiControl([tblGUITransferCar], GuiSet([Cells], 0, 19, [LoadedAcceleration])),'#13' GuiControl([tblGUITransferCar], GuiSet([Cells], 0, 20, [ELoadedDeceleration])),'#13' GuiControl([tblGUITransferCar], GuiSet([Cells], 0, 21, [ConveySpeed])),'#13' GuiControl([tblGUITransferCar], GuiSet([Cells], 0, 22, [ConveyAcceleration])),'#13' GuiControl([tblGUITransferCar], GuiSet([Cells], 0, 23, [ConveyDeceleration])),'#13' GuiControl([tblGUITransferCar], GuiSet([Cells], 0, 24, [VerticalSpeed])),'#13' GuiControl([tblGUITransferCar], GuiSet([Cells], 0, 25, [VerticalAcceleration])),'#13' GuiControl([tblGUITransferCar], GuiSet([Cells], 0, 26, [VerticalDeceleration])),'#13' GuiControl([tblGUITransferCar], GuiSet([Cells], 0, 27, [Color])),'#13' GuiControl([tblGUITransferCar], GuiSet([Cells], 0, 28, [LoadTime])),'#13' GuiControl([tblGUITransferCar], GuiSet([Cells], 0, 29, [UnloadTime])),'#13' '#13' { fill combo box for transfer cars with max. no. of possible cars }'#13' Repeat('#13'  TransferCarController__GetMaxNoofStorageUnits(GuiAtom),'#13'  GuiControl([cobNoOfStorageUnits], GuiList([Items], [Insert], Count, string(Count)))'#13' ),'#13#13#13' { * page Transfer station }'#13' var([tblBuildUpTransferStation], vbAtom, TransferCarController__GetBuildUpTableTransferStation(GuiAtom)),'#13' var([valNoOfTransferStations], vbValue),'#13' '#13' label([CurrentTransferStationPage], GuiAtom) := 1,'#13' '#13' '#13' { fill combo box for transfer stations with max. no. of possible stations }'#13' {GuiControl([cobNoOfTransferStations], GuiList([Items], [Clear])),}'#13' Repeat('#13'  TransferCarController__GetMaxNoofTransferStations(GuiAtom),'#13'  GuiControl([cobNoOfTransferStations], GuiList([Items], [Insert], Count, string(Count)))'#13' ),'#13#13' { check if table for transfer stations exceeds that max. no. of stations }'#13' if('#13'  nRows(tblBuildUpTransferStation) = 0,'#13'  valNoOfTransferStations := 1,'#13'  if('#13'   nRows(tblBuildUpTransferStation) > TransferCarController__GetMaxNoofTransferStations(GuiAtom),'#13'   valNoOfTransferStations := TransferCarController__GetMaxNoofTransferStations(GuiAtom),'#13'   valNoOfTransferStations := nRows(tblBuildUpTransferStation)'#13'  )'#13' ),'#13#13' { finally get the correct item index }'#13' GuiControl([cobNoOfTransferStations], GuiSet([ItemIndex], valNoOfTransferStations)),'#13' '#13' { copy BuildUpTransferStation table into temporary GuiTransferStation table - add 1 as cells are zero based! }'#13' GuiControl([tblGUITransferStation], '#13'  do('#13'   GuiSet([RowCount], valNoOfTransferStations + 1),'#13'   GuiSet([ColCount], BUILDUPTABLETRANSFERSTATION_NUMBEROFCOLUMNS + 1)'#13'  )'#13' ),'#13' GuiControl([tblGUITransferStation], '#13'  GuiList([Cells], [Load], '#13'   tblBuildUpTransferStation, '#13'   1, 1, 1, 1, '#13'   nRows(tblBuildUpTransferStation), BUILDUPTABLETRANSFERSTATION_NUMBEROFCOLUMNS'#13'  )'#13' ),'#13' GuiControl([tblGUITransferStation], GuiSet([Cells], 0, 1,  [ID])),'#13' GuiControl([tblGUITransferStation], GuiSet([Cells], 0, 2,  [TS Name])),'#13' GuiControl([tblGUITransferStation], GuiSet([Cells], 0, 3,  [TS ID])),'#13' GuiControl([tblGUITransferStation], GuiSet([Cells], 0, 4,  [X loc])),'#13' GuiControl([tblGUITransferStation], GuiSet([Cells], 0, 5,  [No. ports])),'#13' GuiControl([tblGUITransferStation], GuiSet([Cells], 0, 6,  [Length])),'#13' GuiControl([tblGUITransferStation], GuiSet([Cells], 0, 7,  [Width])),'#13' GuiControl([tblGUITransferStation], GuiSet([Cells], 0, 8,  [Port type])),'#13' GuiControl([tblGUITransferStation], GuiSet([Cells], 0, 9,  [Position])),'#13' GuiControl([tblGUITransferStation], GuiSet([Cells], 0, 10, [3D animation])),'#13' GuiControl([tblGUITransferStation], GuiSet([Cells], 0, 11, [Description])),'#13' GuiControl([tblGUITransferStation], GuiSet([Cells], 0, 12, [Height])),'#13' GuiControl([tblGUITransferStation], GuiSet([Cells], 0, 13, [Entrytrigger])),'#13' GuiControl([tblGUITransferStation], GuiSet([Cells], 0, 14, [Exittrigger])),'#13' GuiControl([tblGUITransferStation], GuiSet([Cells], 0, 15, [Sendto])),'#13' GuiControl([tblGUITransferStation], GuiSet([Cells], 0, 16, [Station ID])),'#13' GuiControl([tblGUITransferStation], GuiSet([Cells], 0, 17, [Port ID])),'#13' GuiControl([tblGUITransferStation], GuiSet([Cells], 0, 18, [Direction at exit])),'#13' GuiControl([tblGUITransferStation], GuiSet([Cells], 0, 19, [Direction at entry])),'#13' GuiControl([tblGUITransferStation], GuiSet([Cells], 0, 20, [Speed])),'#13' GuiControl([tblGUITransferStation], GuiSet([Cells], 0, 21, [Acceleration])),'#13' GuiControl([tblGUITransferStation], GuiSet([Cells], 0, 22, [Deceleration])),'#13' GuiControl([tblGUITransferStation], GuiSet([Cells], 0, 23, [Color])),'#13' '#13' { fill combo box for transfer stations with max. no. of possible stations }'#13' Repeat('#13'  TransferCarController__GetMaxNoofPorts(GuiAtom),'#13'  GuiControl([cobNoOfPorts], GuiList([Items], [Insert], Count, string(Count)))'#13' ),'#13#13#13' { * page Transfer strategies }'#13' var([lstTransferStrategies], vbAtom, TransferCarController__GetListTransferStrategies(GuiAtom)),'#13' var([indexerRow], vbValue, 1),'#13' var([indexerCol], vbValue, 1),'#13' '#13' { fill table with static options }'#13' GuiControl([tblStaticOptions], GuiSet([Cells], 0, 1, TransferCarLanguageString(511))),'#13' GuiControl([tblStaticOptions], GuiSet([Cells], 0, 2, TransferCarLanguageString(513))),'#13' GuiControl([tblStaticOptions], GuiSet([Cells], 0, 3, TransferCarLanguageString(514))),'#13' GuiControl([tblStaticOptions], GuiSet([Cells], 0, 4, TransferCarLanguageString(515))),'#13#13' Repeat(4, GuiControl([tblStaticOptions], GuiSet([Cells], Count, 0, string(Count)))),'#13' '#13' GuiControl([tblStaticOptions], GuiSet([ColWidths], 0, 24)),'#13' GuiControl([tblStaticOptions], GuiSet([ColWidths], 1, 110)),'#13' GuiControl([tblStaticOptions], GuiSet([ColWidths], 2, 108)),'#13' GuiControl([tblStaticOptions], GuiSet([ColWidths], 3, 54)),'#13' GuiControl([tblStaticOptions], GuiSet([ColWidths], 4, 64)),'#13' '#13' Repeat('#13'  LISTTRANSFERSTRATEGIES_NUMBEROFSTATICOPTIONS,'#13'  do(  '#13'   Repeat('#13'    nCols(lstTransferStrategies),'#13'    do('#13'     GuiControl([tblStaticOptions],'#13'      GuiSet([Cells], indexerRow, indexerCol, Cell(indexerRow, indexerCol, lstTransferStrategies))),'#13'     '#13'     inc(indexerCol)'#13'    )'#13'   ),'#13'   '#13'   indexerCol := 1,'#13'   inc(indexerRow)'#13'  )'#13' ),'#13#13' { fill table with variable options - the user can use labels to influence the transfer (in case this table is used at all!) }'#13' GuiControl([cbNumberOfLabels], GuiSet([ItemIndex], ListTransferStrategies__GetNoOfLabels(lstTransferStrategies) + 1)),'#13#13' GuiControl([tblVariableOptions], GuiSet([ColWidths], 0, 24)),'#13' GuiControl([tblVariableOptions], GuiSet([ColWidths], 1, 110)),'#13' GuiControl([tblVariableOptions], GuiSet([ColWidths], 2, 108)),'#13' GuiControl([tblVariableOptions], GuiSet([ColWidths], 3, 54)),'#13' GuiControl([tblVariableOptions], GuiSet([ColWidths], 4, 64)),'#13#13' GuiControl([cbNumberOfLabels], GuiRun([Change])),'#13#13' GuiControl([cobSystemType], GuiSet([ItemIndex], TransferCarController__GetSystemType(GuiAtom))),'#13#13' Repeat(5,'#13'  GuiControl([smeTransferStrategy], GuiList([Lines], [Add], getTransferCarStrategy(Count)))'#13' ),'#13' GuiControl([smeTransferStrategy], GuiSet([String], TextAtt([TransferStrategy], GuiAtom))),'#13#13#13' { * Position the form }'#13' Gui_PositionGuiAroundAtom(GuiControl([formTransferCarController])),'#13#13' GuiRun([Update])'#13')'#13),
    Update = str('do('#13' { *** Update Transfer Car *** }'#13#13' { // show or hide & enable or disable buttons }'#13' if('#13'  GuiControl([cobNoOfTransferCars], GuiGet([ItemIndex])) = 1,'#13#13'  { only one transfer car }'#13'  do('#13'   { hide all buttons - no move between transfer car sheets possible }'#13'   GuiControl([btnMoveToFirstTCar], GuiSet([Visible], false)),'#13'   GuiControl([btnStepOneBackTCar], GuiSet([Visible], false)),'#13'   GuiControl([btnStepOneAheadTCar], GuiSet([Visible], false)),'#13'   GuiControl([btnMoveToLastTCar], GuiSet([Visible], false)),'#13'   GuiControl([btnDeleteTCar], GuiSet([Visible], false))'#13'  ),'#13#13'  { multiple transfer cars }'#13'  do('#13'   { show all buttons to move between transfer car sheets }'#13'   GuiControl([btnMoveToFirstTCar], GuiSet([Visible], true)),'#13'   GuiControl([btnStepOneBackTCar], GuiSet([Visible], true)),'#13'   GuiControl([btnStepOneAheadTCar], GuiSet([Visible], true)),'#13'   GuiControl([btnMoveToLastTCar], GuiSet([Visible], true)),'#13'   GuiControl([btnDeleteTCar], GuiSet([Visible], true)),'#13#13'   { start with first transfer car therefore enable backwards move }'#13'   Case('#13'    WhichIsTrue('#13'     label([CurrentTransferCarPage], GuiAtom) = 1,'#13'     label([CurrentTransferCarPage], GuiAtom) = GuiControl([cobNoOfTransferCars], GuiGet([ItemIndex])),'#13'     1'#13'    ),'#13#13'    { a. first transfer car - disable backward move }'#13'    do('#13'     GuiControl([btnMoveToFirstTCar], GuiSet([Enabled], false)),'#13'     GuiControl([btnStepOneBackTCar], GuiSet([Enabled], false)),'#13'     GuiControl([btnStepOneAheadTCar], GuiSet([Enabled], true)),'#13'     GuiControl([btnMoveToLastTCar], GuiSet([Enabled], true))'#13'    ),'#13#13'    { b. last transfer car - disable forward move }'#13'    do('#13'     GuiControl([btnMoveToFirstTCar], GuiSet([Enabled], true)),'#13'     GuiControl([btnStepOneBackTCar], GuiSet([Enabled], true)),'#13'     GuiControl([btnStepOneAheadTCar], GuiSet([Enabled], false)),'#13'     GuiControl([btnMoveToLastTCar], GuiSet([Enabled], false))'#13'    ),'#13#13'    { c. somewhere in between - no need to disable a button }'#13'    do('#13'     GuiControl([btnMoveToFirstTCar], GuiSet([Enabled], true)),'#13'     GuiControl([btnStepOneBackTCar], GuiSet([Enabled], true)),'#13'     GuiControl([btnStepOneAheadTCar], GuiSet([Enabled], true)),'#13'     GuiControl([btnMoveToLastTCar], GuiSet([Enabled], true))'#13'    )'#13'   )'#13'  )'#13' ),'#13#13' { // update settings of transfer cars }'#13' GuiControl([gboSingelTransferCar], GuiSet([Caption], concat([Single transfer car (], string(label([CurrentTransferCarPage], GuiAtom)), [)]))),'#13#13' { '' transfer car name }'#13' GuiControl([ebTransferCarName], GuiSet([Text],'#13'  GuiControl([tblGUITransferCar], GuiGet([Cells], label([CurrentTransferCarPage], GuiAtom), BUILDUPTABLETRANSFERCAR_COLUMN_TRANSFERCARNAME)))'#13' ),'#13#13' { '' initial x location }'#13' GuiControl([ebInitialXLocation], GuiSet([Text],'#13'  GuiControl([tblGUITransferCar], GuiGet([Cells], label([CurrentTransferCarPage], GuiAtom), BUILDUPTABLETRANSFERCAR_COLUMN_XSTARTLOCATION)))'#13' ),'#13' '#13' { '' initial transport height }'#13' GuiControl([ebInitialTransportHeight], GuiSet([Text],'#13'  GuiControl([tblGUITransferCar], GuiGet([Cells], label([CurrentTransferCarPage], GuiAtom), BUILDUPTABLETRANSFERCAR_COLUMN_TRANSPORTHEIGHT)))'#13' ),'#13#13' { '' motion sequence }'#13' GuiControl([cobMotionSequence], GuiSet([ItemIndex],'#13'  value(GuiControl([tblGUITransferCar], GuiGet([Cells], label([CurrentTransferCarPage], GuiAtom), BUILDUPTABLETRANSFERCAR_COLUMN_MOTIONSEQUENCE))))'#13' ),'#13' '#13' { '' storage unit width }'#13' GuiControl([ebStorageUnitWidth], GuiSet([Text],'#13'  GuiControl([tblGUITransferCar], GuiGet([Cells], label([CurrentTransferCarPage], GuiAtom), BUILDUPTABLETRANSFERCAR_COLUMN_WIDTHOFSTORAGEUNIT)))'#13' ),'#13' { '' no. of storage units }'#13' GuiControl([cobNoOfStorageUnits], GuiSet([ItemIndex],'#13'  value(GuiControl([tblGUITransferCar], GuiGet([Cells], label([CurrentTransferCarPage], GuiAtom), BUILDUPTABLETRANSFERCAR_COLUMN_NOOFSTORAGEUNITS))))'#13' ),'#13#13' { '' 3D animation }'#13' GuiControl([cobTransferCar3DAnimation], GuiSet([ItemIndex],'#13'  value(GuiControl([tblGUITransferCar], GuiGet([Cells], label([CurrentTransferCarPage], GuiAtom), BUILDUPTABLETRANSFERCAR_COLUMN_3DANIMATION))))'#13' ),'#13' '#13#13' { *** Update Transfer Station *** } '#13' { // show or hide & enable or disable buttons }'#13' if('#13'  GuiControl([cobNoOfTransferStations], GuiGet([ItemIndex])) = 1,'#13#13'  { only one transfer station }'#13'  do('#13'   { hide all buttons - no move between transfer station sheets possible }'#13'   GuiControl([btnMoveToFirstTStation], GuiSet([Visible], false)),'#13'   GuiControl([btnStepOneBackTStation], GuiSet([Visible], false)),'#13'   GuiControl([btnStepOneAheadTStation], GuiSet([Visible], false)),'#13'   GuiControl([btnMoveToLastTStation], GuiSet([Visible], false)),'#13'   GuiControl([btnDeleteTStation], GuiSet([Visible], false))'#13'  ),'#13#13'  { multiple transfer staions }'#13'  do('#13'   { show all buttons to move between transfer car sheets }'#13'   GuiControl([btnMoveToFirstTStation], GuiSet([Visible], true)),'#13'   GuiControl([btnStepOneBackTStation], GuiSet([Visible], true)),'#13'   GuiControl([btnStepOneAheadTStation], GuiSet([Visible], true)),'#13'   GuiControl([btnMoveToLastTStation], GuiSet([Visible], true)),'#13'   GuiControl([btnDeleteTStation], GuiSet([Visible], true)),'#13#13'   { start with first transfer car therefore enable backwards move }'#13'   Case('#13'    WhichIsTrue('#13'     label([CurrentTransferStationPage], GuiAtom) = 1,'#13'     label([CurrentTransferStationPage], GuiAtom) = GuiControl([cobNoOfTransferStations], GuiGet([ItemIndex])),'#13'     1'#13'    ),'#13#13'    { a. first transfer car - disable backward move }'#13'    do('#13'     GuiControl([btnMoveToFirstTStation], GuiSet([Enabled], false)),'#13'     GuiControl([btnStepOneBackTStation], GuiSet([Enabled], false)),'#13'     GuiControl([btnStepOneAheadTStation], GuiSet([Enabled], true)),'#13'     GuiControl([btnMoveToLastTStation], GuiSet([Enabled], true))'#13'    ),'#13#13'    { b. last transfer car - disable forward move }'#13'    do('#13'     GuiControl([btnMoveToFirstTStation], GuiSet([Enabled], true)),'#13'     GuiControl([btnStepOneBackTStation], GuiSet([Enabled], true)),'#13'     GuiControl([btnStepOneAheadTStation], GuiSet([Enabled], false)),'#13'     GuiControl([btnMoveToLastTStation], GuiSet([Enabled], false))'#13'    ),'#13#13'    { c. somewhere in between - no need to disable a button }'#13'    do('#13'     GuiControl([btnMoveToFirstTStation], GuiSet([Enabled], true)),'#13'     GuiControl([btnStepOneBackTStation], GuiSet([Enabled], true)),'#13'     GuiControl([btnStepOneAheadTStation], GuiSet([Enabled], true)),'#13'     GuiControl([btnMoveToLastTStation], GuiSet([Enabled], true))'#13'    )'#13'   )'#13'  )'#13' ),'#13#13' { // update settings of transfer stations }'#13' GuiControl([gboSingelTransferStation], GuiSet([Caption], concat([Single transfer station (], string(label([CurrentTransferStationPage], GuiAtom)), [)]))),'#13#13' { '' transfer station name }'#13' GuiControl([ebTransferStationName], GuiSet([Text],'#13'  GuiControl([tblGUITransferStation], GuiGet([Cells], label([CurrentTransferStationPage], GuiAtom), BUILDUPTABLETRANSFERSTATION_COLUMN_TRANSFERSTATIONNAME)))'#13' ),'#13#13' { '' x location first station }'#13' GuiControl([ebXLocationTStation], GuiSet([Text],'#13'  GuiControl([tblGUITransferStation], GuiGet([Cells], label([CurrentTransferStationPage], GuiAtom), BUILDUPTABLETRANSFERSTATION_COLUMN_XLOCATION)))'#13' ),'#13#13' { '' routing id }'#13' GuiControl([ebTransferStationID], GuiSet([Text],'#13'  GuiControl([tblGUITransferStation], GuiGet([Cells], label([CurrentTransferStationPage], GuiAtom), BUILDUPTABLETRANSFERSTATION_COLUMN_TRANSFERSTATIONID)))'#13' ),'#13#13' {'' no. of ports }'#13' GuiControl([cobNoOfPorts], GuiSet([ItemIndex],'#13'  value(GuiControl([tblGUITransferStation], GuiGet([Cells], label([CurrentTransferStationPage], GuiAtom), BUILDUPTABLETRANSFERSTATION_COLUMN_NUMBEROFPORTS))))'#13' ),'#13#13' { '' port length }'#13' GuiControl([ebPortsLength], GuiSet([Text],'#13'  GuiControl([tblGUITransferStation], GuiGet([Cells], label([CurrentTransferStationPage], GuiAtom), BUILDUPTABLETRANSFERSTATION_COLUMN_LENGTHOFPORT)))'#13' ),'#13' '#13' { '' port width }'#13' GuiControl([ebPortsWidth], GuiSet([Text],'#13'  GuiControl([tblGUITransferStation], GuiGet([Cells], label([CurrentTransferStationPage], GuiAtom), BUILDUPTABLETRANSFERSTATION_COLUMN_WIDTHOFPORT)))'#13' ),'#13#13' { '' port type }'#13' GuiControl([cobPortType], GuiSet([ItemIndex],'#13'  value(GuiControl([tblGUITransferStation], GuiGet([Cells], label([CurrentTransferStationPage], GuiAtom), BUILDUPTABLETRANSFERSTATION_COLUMN_PORTTYPE))))'#13' ),'#13#13' { '' position (up/down) }'#13' GuiControl([cobPosition], GuiSet([ItemIndex],'#13'  value(GuiControl([tblGUITransferStation], GuiGet([Cells], label([CurrentTransferStationPage], GuiAtom), BUILDUPTABLETRANSFERSTATION_COLUMN_YPOSITION))))'#13' ),'#13#13' { '' 3D animation }'#13' GuiControl([cobTransferStation3DAnimation], GuiSet([ItemIndex],'#13'  value(GuiControl([tblGUITransferStation], GuiGet([Cells], label([CurrentTransferStationPage], GuiAtom), BUILDUPTABLETRANSFERSTATION_COLUMN_3DANIMATION))))'#13' )'#13')'#13)))