EDControl(EditForm:
  BorderIcons = set(SystemMenu),
  BorderStyle = Single,
  Caption = str('History Viewer'),
  Height = 507,
  Left = 1600,
  Name = str('HistoryViewer'),
  Position = Default,
  ShowHint = True,
  Top = 424,
  Visible = True,
  Width = 395,
  Controls(
    EDControl(MultiPage:
      ActivePage = 1,
      Align = Client,
      Anchors = set(Left,Top,Right,Bottom),
      Height = 467,
      Left = 0,
      Name = str('MultiPage1'),
      TabOrder = 1,
      Top = 0,
      Width = 395,
      Controls(
        EDControl(SinglePage:
          Caption = str('General'),
          Name = str('SinglePage1'),
          PageIndex = 1,
          Controls(
            EDControl(GroupBox:
              Caption = str(''),
              Height = 64,
              Left = 8,
              Name = str('GroupBox12'),
              TabOrder = 1,
              Top = 8,
              Width = 370,
              Controls(
                EDControl(Edit:
                  Height = 21,
                  Left = 132,
                  Name = str('AtomName'),
                  TabOrder = 1,
                  Top = 26,
                  Width = 225),
                EDControl(Label:
                  Caption = str('Atom name:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('StaticText13'),
                  Top = 32,
                  Width = 56))),
            EDControl(GroupBox:
              Caption = str('Settings'),
              Height = 256,
              Left = 8,
              Name = str('GroupBox1'),
              TabOrder = 2,
              Top = 88,
              Width = 370,
              Controls(
                EDControl(Edit:
                  Enabled = False,
                  Height = 21,
                  Left = 132,
                  Name = str('FileAtom'),
                  TabOrder = 1,
                  Top = 26,
                  Width = 140),
                EDControl(Button:
                  Caption = str('&Select Atom'),
                  Left = 280,
                  Name = str('Button1'),
                  TabOrder = 2,
                  Top = 24,
                  Events(
                    Click = str('do('#13' var([atmTemp], vbAtom, 0),'#13#13' selectatom(model,model,[Select an atom]),'#13' '#13' { Don''t know why but the direct construction doesn''t work... :( }'#13' atmtemp := a,'#13' '#13' GuiControl([FileAtom], GuiSet([Text], name(atmTemp))),'#13' GuiControl([FileAtomId], GuiSet([Caption], String(atomid(atmTemp))))'#13')'#13))),
                EDControl(SyntaxComboBox:
                  CodeItems = str(#1'objectstart'#1'code:0'#1'objectend'#1'objectstart'#1'code:60 {seconds}'#1'objectend'#1'objectstart'#1'code:mins(60) {minutes}'#1'objectend'#1'objectstart'#1'code:hr(8) {hours}'#1'objectend'),
                  Left = 132,
                  Name = str('scbStartTime'),
                  TabOrder = 3,
                  Top = 58,
                  Width = 225),
                EDControl(SyntaxComboBox:
                  CodeItems = str(#1'objectstart'#1'code:time {current time}'#1'objectend'#1'objectstart'#1'code:60 {seconds}'#1'objectend'#1'objectstart'#1'code:mins(60) {minutes}'#1'objectend'#1'objectstart'#1'code:hr(8) {hours}'#1'objectend'),
                  Left = 132,
                  Name = str('scbIntervalLength'),
                  TabOrder = 4,
                  Top = 90,
                  Width = 225),
                EDControl(ComboBox:
                  Height = 21,
                  Hint = str('An overview of the status or queue changes.'),
                  Items = str('Status history file'#13#10'Queue history file'#13#10),
                  Left = 132,
                  Name = str('cbFileType'),
                  Style = DropDownList,
                  TabOrder = 5,
                  Top = 122,
                  Width = 225),
                EDControl(Edit:
                  Height = 21,
                  Left = 132,
                  Name = str('Path'),
                  TabOrder = 6,
                  Top = 157,
                  Width = 225),
                EDControl(Edit:
                  Height = 21,
                  Left = 132,
                  Name = str('FileName'),
                  TabOrder = 7,
                  Top = 189,
                  Width = 225),
                EDControl(CheckBox:
                  Caption = str(''),
                  Left = 132,
                  Name = str('cbViewResultsAfterExport'),
                  TabOrder = 8,
                  Top = 224),
                EDControl(Label:
                  Caption = str('Path:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('StaticText1'),
                  Top = 160,
                  Width = 25),
                EDControl(Label:
                  Caption = str('File name'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('StaticText12'),
                  Top = 192,
                  Width = 45),
                EDControl(Label:
                  Caption = str('View results after export:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('StaticText122'),
                  Top = 224,
                  Width = 115),
                EDControl(Label:
                  Caption = str('Atom:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('StaticText14'),
                  Top = 32,
                  Width = 27),
                EDControl(Label:
                  Caption = str('Start time [s]:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('StaticText142'),
                  Top = 64,
                  Width = 61),
                EDControl(Label:
                  Caption = str('Interval length [s]:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('StaticText1422'),
                  Top = 96,
                  Width = 84),
                EDControl(Label:
                  Caption = str('Type of file:'),
                  Color = -16777208,
                  Height = 13,
                  Left = 12,
                  Name = str('StaticText15'),
                  Top = 128,
                  Width = 55),
                EDControl(Label:
                  Caption = str('Atom id > invisble for user'),
                  Color = -16777208,
                  Height = 13,
                  Left = 132,
                  Name = str('FileAtomId'),
                  Top = 8,
                  Visible = False,
                  Width = 120))),
            EDControl(GroupBox:
              Caption = str('Miscellaneous'),
              Height = 64,
              Left = 8,
              Name = str('GroupBox2'),
              TabOrder = 3,
              Top = 360,
              Width = 370,
              Controls(
                EDControl(Button:
                  Caption = str('Export to &File'),
                  Hint = str('Pressing this button automatically applies the changes'),
                  Left = 12,
                  Name = str('btnExportToFile'),
                  TabOrder = 1,
                  Top = 24,
                  Width = 100,
                  Events(
                    Click = str('{ Export the History data of the selected atom to the selected file }'#13#13'do('#13' '#13' { First apply the changes made...}'#13' GuiControl([btnApply]),'#13' GuiRun([Click]),'#13#13' var([atmTemp], vbAtom, 0),'#13' '#13' if('#13'  generalhistory = false,'#13'  do('#13'   msg('#13'    concat('#13'     [General history is switched off.],'#13'     cr,'#13'     [You can turn it on in the run control or in menu>simulate>history . Also turn on the history for the atom you want to observe.],'#13'     cr,'#13'     [You must rerun to be able to export the history data of the selected atom.]'#13'    )'#13'   ),'#13'   return(-1)'#13'  )'#13' ),'#13#13' { Check if the atom is still valid, after reopening the model the data won''t be valid anymore '#13'   or points to a different atom... }'#13' if('#13'  atomexists(atombyid(Att([SelectedAtomId], GuiAtom), model)) = false,'#13'  do('#13'   msg([The selected atom doesn''t exist in the model.]),'#13'   return(-1)'#13'  ),'#13'  atmTemp := atombyid(Att([SelectedAtomId], GuiAtom), model)'#13' ),'#13' '#13' { Check if it aint the model atom...this atom doenst have history data. }'#13' if('#13'  atmTemp = model,'#13'  do('#13'   msg([The model atom doesn''t contain history data.]),'#13'   return(-1)'#13'  )'#13' ),'#13#13' { Check if the history is turned on for the selected atom. }'#13' if('#13'  atomhistory(atmTemp) = false,'#13'  do('#13'   msg(concat([The history for the selected atom isn''t turned on.],cr,[It can be turned on in menu>simulate>history.],cr,[You must rerun the model to be able to export the history file])),'#13'   return(-1)'#13'  )'#13' ),'#13#13' { Use the workdir if the user didnt specify a path. }'#13' if('#13'  comparetext(textatt([path], GuiAtom),[]),'#13'  TextAtt([path], GuiAtom) := workdir'#13' ),'#13' '#13' analysehistory('#13'  workdir([ed.his]),'#13'  atomid(atmTemp),'#13'  att([statusqueue], GuiAtom),'#13'  att([analysestart], GuiAtom),'#13'  att([analysestart], GuiAtom) + att([analyseduration], GuiAtom),'#13'  0,'#13'  do('#13'   waitcursor,'#13'   fileopen(concat(textatt([path], GuiAtom),textatt([filename], GuiAtom))),'#13'   fileclear,'#13'   filetextwrite('#13'    concat('#13'     [  hRecID   hRecIDInv    hRecContent        hRecTime   hRecStayTime    hRecStatus    ],'#13'     if(and(att([statusqueue], GuiAtom),functionexists([statusname])),[  Status],[])'#13'    )'#13'   ),'#13'   repeat('#13'    hreccount,'#13'    do('#13'     hrecread,'#13'     filetextwrite('#13'      concat('#13'       string(hRecID,8,0),[    ],'#13'       string(hRecIDInv,8,0),[       ],'#13'       string(hRecContent,8,0),[      ],'#13'       string(hRecTime,10,5),[     ],'#13'       string(hRecStayTime,10,4),[           ],'#13'       string(hRecStatus,3,0),[      ],'#13'       if(and(att([statusqueue], GuiAtom),functionexists([statusname])),statusname(hrecstatus),[])'#13'      )'#13'     )'#13'    )      '#13'   ),'#13'   fileclose,'#13'   normalcursor'#13'  )     '#13' ),'#13' '#13' if('#13'  Att([ViewResultsAfterExport], GuiAtom) = true,'#13'  do('#13'   displayeditorfile(concat(textatt([path], GuiAtom),textatt([filename], GuiAtom))),'#13'   displayeditor'#13'  ),'#13'  { Else show a message that the file was succesfully exported to the specified location. }'#13'  msg('#13'   concat('#13'    [The history of ],'#13'    name(atmTemp),'#13'    [ was succesfully exported to:],'#13'    cr,cr,'#13'    TextAtt([path], GuiAtom), TextAtt([filename], GuiAtom)'#13'   )'#13'  )'#13' )'#13')'#13#13))),
                EDControl(Button:
                  Caption = str('Export to &Table'),
                  Hint = str('Pressing this button automatically applies the changes'),
                  Left = 124,
                  Name = str('btnExportToTable'),
                  TabOrder = 2,
                  Top = 24,
                  Width = 100,
                  Events(
                    Click = str('{ Export the History data of the selected atom to the selected file }'#13#13'do('#13' '#13' { First apply the changes made...}'#13' GuiControl([btnApply]),'#13' GuiRun([Click]),'#13#13' var([atmTemp], vbAtom, 0),'#13' '#13' if('#13'  generalhistory = false,'#13'  do('#13'   msg('#13'    concat('#13'     [General history is switched off.],'#13'     cr,'#13'     [You can turn it on in the run control or in menu>simulate>history . Also turn on the history for the atom you want to observe.],'#13'     cr,'#13'     [You must rerun to be able to export the history data of the selected atom.]'#13'    )'#13'   ),'#13'   return(-1)'#13'  )'#13' ),'#13#13' { Check if the atom is still valid, after reopening the model the data won''t be valid anymore '#13'   or points to a different atom... }'#13' if('#13'  atomexists(atombyid(Att([SelectedAtomId], GuiAtom), model)) = false,'#13'  do('#13'   msg([The selected atom doesn''t exist in the model.]),'#13'   return(-1)'#13'  ),'#13'  atmTemp := atombyid(Att([SelectedAtomId], GuiAtom), model)'#13' ),'#13' '#13' { Check if it aint the model atom...this atom doenst have history data. }'#13' if('#13'  atmTemp = model,'#13'  do('#13'   msg([The model atom doesn''t contain history data.]),'#13'   return(-1)'#13'  )'#13' ),'#13#13' { Check if the history is turned on for the selected atom. }'#13' if('#13'  atomhistory(atmTemp) = false,'#13'  do('#13'   msg(concat([The history for the selected atom isn''t turned on.],cr,[It can be turned on in menu>simulate>history.],cr,[You must rerun the model to be able to export the history file])),'#13'   return(-1)'#13'  )'#13' ),'#13#13' analysehistory('#13'  workdir([ed.his]),'#13'  atomid(atmTemp),'#13'  att([statusqueue], GuiAtom),'#13'  att([analysestart], GuiAtom),'#13'  att([analysestart], GuiAtom) + att([analyseduration], GuiAtom),'#13'  0,'#13'  do('#13'   waitcursor,'#13'   settable(0,0 ,GuiAtom),'#13'   settable(hreccount,7 ,GuiAtom),'#13'   setcell(0,1,[hRecID] ,GuiAtom),'#13'   setcell(0,2,[hRecIDInv] ,GuiAtom),'#13'   setcell(0,3,[hRecContent] ,GuiAtom),'#13'   setcell(0,4,[hRecTime] ,GuiAtom),'#13'   setcell(0,5,[hRecStayTime] ,GuiAtom),'#13'   setcell(0,6,[hRecStatus] ,GuiAtom),'#13'   setcell(0,7,[Status] ,GuiAtom),'#13'   repeat('#13'    hreccount,'#13'    do('#13'     hrecread,'#13'     setcell(count,1,hRecID ,GuiAtom),'#13'     setcell(count,2,hRecIDInv ,GuiAtom),'#13'     setcell(count,3,hRecContent ,GuiAtom),'#13'     setcell(count,4,hRecTime ,GuiAtom),'#13'     setcell(count,5,hRecStayTime ,GuiAtom),'#13'     setcell(count,6,hRecStatus ,GuiAtom),'#13'     if(and(att(4 ,GuiAtom),functionexists([statusname])),setcell(count,7,statusname(hRecStatus) ,GuiAtom),0)'#13'    )'#13'   ),'#13'   normalcursor'#13'  )     '#13' ),'#13' '#13' if('#13'  Att([ViewResultsAfterExport], GuiAtom) = true,'#13'  EditTable(GuiAtom),'#13'  { Else show a message that the file was succesfully exported to the specified location. }'#13'  msg('#13'   concat('#13'    [The history of ],'#13'    name(atmTemp),'#13'    [ was succesfully exported to the table of atom ],'#13'    name(GuiAtom),'#13'    [.]'#13'   )'#13'  )'#13' )'#13')'#13#13))),
                EDControl(Button:
                  Caption = str('View exported Table'),
                  Left = 240,
                  Name = str('Button2'),
                  TabOrder = 3,
                  Top = 24,
                  Width = 116,
                  Events(
                    Click = str('EditTable(GuiAtom)'#13))))))))),
    EDControl(Panel:
      Align = Bottom,
      Anchors = set(Left,Right,Bottom),
      BevelOuter = None,
      Caption = str(''),
      Height = 40,
      Left = 0,
      Name = str('Panel1'),
      TabOrder = 2,
      Top = 467,
      Width = 395,
      Controls(
        EDControl(Button:
          Caption = str('&Help'),
          Left = 8,
          Name = str('btnHelp'),
          TabOrder = 1,
          Top = 8,
          Events(
            Click = str('Help(PDir([HELP\ED Help.hlp]), [History Viewer])'#13))),
        EDControl(Button:
          Caption = str('&Ok'),
          Default = True,
          Left = 144,
          Name = str('btnOk'),
          TabOrder = 2,
          Top = 8,
          Events(
            Click = str('Do('#13' GuiControl([btnApply]),'#13' GuiRun([Click]),'#13' GuiDestroy'#13')'#13))),
        EDControl(Button:
          Cancel = True,
          Caption = str('&Cancel'),
          Left = 230,
          Name = str('btnCancel'),
          TabOrder = 3,
          Top = 8,
          Events(
            Click = str('GuiDestroy '#13))),
        EDControl(Button:
          Caption = str('&Apply'),
          Left = 312,
          Name = str('btnApply'),
          TabOrder = 4,
          Top = 8,
          Events(
            Click = str('do('#13' '#13'  {Save TextField}'#13'  name(GuiAtom) := GuiControl([AtomName], GuiGet([Text])),'#13'  '#13'  Att([SelectedAtomid], GuiAtom) := Value(GuiControl([FileAtomId], GuiGet([Caption]))),'#13'  '#13'  TextAtt([path],GuiAtom) := GuiControl([path],GuiGet([Text])),'#13'  '#13'  TextAtt([filename],GuiAtom) := GuiControl([filename],GuiGet([Text])),'#13'  '#13'  Att([statusqueue], GuiAtom) := GuiControl([cbFileType], GuiGet([ItemIndex])),'#13'  '#13'  Att([ViewResultsAfterExport], GuiAtom) := GuiControl([cbViewResultsAfterExport], Guiget([Checked])),'#13'  '#13'  SetExprAtt([analysestart], GuiControl([scbStartTime], GuiGet([ResultCode])),GuiAtom),'#13'  SetExprAtt([analyseduration], GuiControl([scbIntervalLength], GuiGet([ResultCode])),GuiAtom)'#13')'#13)))))),
  Events(
    Show = str('do('#13'  {Set Caption}'#13'  if('#13'   atomexists(m(GuiAtom)),'#13'   GuiControl([HistoryViewer],GuiSet([Caption],concat(name(m(GuiAtom)), [ - ], name(GuiAtom)))),'#13'   GuiControl([HistoryViewer],GuiSet([Caption],concat([Baseclass - ], name(GuiAtom))))'#13'  ),'#13' '#13'  {Set ActivePage}'#13'     '#13'  GuiControl([MultiPage1]),GuiSet([ActivePage],1),'#13'      '#13'  {Set TextField}'#13'  '#13'  GuiControl([AtomName], GuiSet([Text], name(GuiAtom))),'#13'  '#13'  if('#13'   atomexists(AtomByID(Att([SelectedAtomId], GuiAtom), model)),'#13'   GuiControl([FileAtom], GuiSet([Text], name(AtomByID(Att([SelectedAtomId], GuiAtom), model)))),'#13'   GuiControl([FileAtom], GuiSet([Text], [unknown]))'#13'  ),'#13'  '#13'  GuiControl([fileAtomID], GuiSet([Caption], TextAtt([SelectedAtomId], GuiAtom))), '#13'  '#13'  GuiControl([path], GuiSet([Text],textatt([path],GuiAtom))), '#13'  '#13'  GuiControl([filename], GuiSet([Text],textatt([filename],GuiAtom))), '#13'  '#13'  {Set ComboBox}'#13#13'  GuiControl([cbFileType], GuiSet([ItemIndex], Att([statusqueue], GuiAtom))),'#13#13'  {Set ComboBox}'#13#13'  GuiControl([cbViewResultsAfterExport], GuiSet([Checked], Att([ViewResultsAfterExport], GuiAtom))),'#13#13'  {Set 4DS ComboBox}'#13'  GuiControl([scbStartTime],GuiSet([CodeItems], concat(char(1),[objectstart],char(1),[code:],TextAtt([analysestart],GuiAtom),char(1),[objectend], getHistoryViewerStartTimes))),'#13'  GuiControl([scbStartTime],GuiSet([ItemIndex], 1)),   '#13#13'  GuiControl([scbIntervalLength],GuiSet([CodeItems], concat(char(1),[objectstart],char(1),[code:],TextAtt([analyseduration],GuiAtom),char(1),[objectend], GetHistoryViewerEndTimes))),'#13'  GuiControl([scbIntervalLength],GuiSet([ItemIndex], 1)),   '#13#13'  Gui_PositionGuiAroundAtom(GuiControl([HistoryViewer])),'#13#13'  GuiRun([Update])'#13')'#13)))